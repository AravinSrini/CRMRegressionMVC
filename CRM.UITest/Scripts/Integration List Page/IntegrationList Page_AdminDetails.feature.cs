// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.IntegrationListPage
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class IntegrationListPage_AdminDetailsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "IntegrationList Page_AdminDetails.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "IntegrationList Page_AdminDetails", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint75",
                        "35645"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "IntegrationList Page_AdminDetails")))
            {
                global::CRM.UITest.Scripts.IntegrationListPage.IntegrationListPage_AdminDetailsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyTheAdminDetailsOnTheIntegrationListPageOfPendingApprovalStatus(string scenario, string userName, string password, string userType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Admin Details on the Integration List page of Pending Approval Status", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.And("I click on the filter by status Pending Approval radio button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.Then("I should be displayed with Status Bar and current status highlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.And("I can see Pending Approval includes the respective stages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("I can see Company Contact Name, Company Contact Phone and Company Contact Email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("I can see IT/developer contact name,IT/developer Contact phone and IT/developer e" +
                    "mail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("I can see Type of Integration, Year to Date shipments and Year to Date Revenue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And(string.Format("I can see the Potential Revenue, Additional Comments, MG/CSA Total Hours, Integra" +
                        "tion Team Total Hours and Status for admin users {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.And("I can see the integration notes of Comment, Commenter, Date/Time and Public/Priva" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And("I can see the Add Comment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Admin Details on the Integration List page of Pending Approval Status:" +
            " s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:userName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "admin")]
        public virtual void VerifyTheAdminDetailsOnTheIntegrationListPageOfPendingApprovalStatus_S1()
        {
#line 5
this.VerifyTheAdminDetailsOnTheIntegrationListPageOfPendingApprovalStatus("s1", "systemadmin", "Te$t1234", "admin", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheAdminDetailsOnTheIntegratinListPageOfInProgressStatus(string scenario, string userame, string password, string userType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Admin Details on the Integratin List page of In Progress Status", @__tags);
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
    testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.And("I verify In Progress staus radio button is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.Then("I should be displayed with Status Bar and current status highlighted for In Progr" +
                    "ess status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
 testRunner.And("I can see In Progress includes the respective stages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And("I can see Company Contact Name, Company Contact Phone and Company Contact Email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And("I can see IT/developer contact name,IT/developer Contact phone and IT/developer e" +
                    "mail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("I can see Type of Integration, Year to Date shipments and Year to Date Revenue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And(string.Format("I can see the Potential Revenue, Additional Comments, MG/CSA Total Hours, Integra" +
                        "tion Team Total Hours and Status for admin users {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("I can see the integration notes of Comment, Commenter, Date/Time and Public/Priva" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.And("I can see the Add Comment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Admin Details on the Integratin List page of In Progress Status: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "admin")]
        public virtual void VerifyTheAdminDetailsOnTheIntegratinListPageOfInProgressStatus_S1()
        {
#line 25
this.VerifyTheAdminDetailsOnTheIntegratinListPageOfInProgressStatus("s1", "systemadmin", "Te$t1234", "admin", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_VerifyTheAdminDetailsPageOnTheIntegrationListPageOfCompletedStatus(string scenario, string userame, string password, string userType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645_Verify the Admin Details page on the Integration List page of Completed Sta" +
                    "tus", @__tags);
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
    testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.And("I click on the filter by status Completed radio button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.Then("I should be displayed with Status Bar and current status highlighted for Complete" +
                    "d status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 50
 testRunner.And("I can see Completed includes the respective stages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("I can see Company Contact Name, Company Contact Phone and Company Contact Email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.And("I can see IT/developer contact name,IT/developer Contact phone and IT/developer e" +
                    "mail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.And("I can see Type of Integration, Year to Date shipments and Year to Date Revenue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.And(string.Format("I can see the Potential Revenue, Additional Comments, MG/CSA Total Hours, Integra" +
                        "tion Team Total Hours and Status for admin users {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.And("I can see the integration notes of Comment, Commenter, Date/Time and Public/Priva" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And("I can see the Add Comment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645_Verify the Admin Details page on the Integration List page of Completed Sta" +
            "tus: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "admin")]
        public virtual void _35645_VerifyTheAdminDetailsPageOnTheIntegrationListPageOfCompletedStatus_S1()
        {
#line 44
this._35645_VerifyTheAdminDetailsPageOnTheIntegrationListPageOfCompletedStatus("s1", "systemadmin", "Te$t1234", "admin", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyAllTheFieldsAreEditableOnAdminDetailsOfIntegrationListPage(string scenario, string userame, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify all the fields are editable on Admin Details of Integration List page", @__tags);
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.Then("verify all the fields should be editable on Admin details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify all the fields are editable on Admin Details of Integration List page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyAllTheFieldsAreEditableOnAdminDetailsOfIntegrationListPage_S1()
        {
#line 65
this.VerifyAllTheFieldsAreEditableOnAdminDetailsOfIntegrationListPage("s1", "systemadmin", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifySubmitButtonOnAdminDetailsOfIntegrationListPageForTheInProgressStatus(string scenario, string userame, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify submit button on Admin Details of Integration List page for the In Progres" +
                    "s status", @__tags);
#line 76
this.ScenarioSetup(scenarioInfo);
#line 77
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 78
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.Then("I can see the Submit button for the status other than Pending RM Approval", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify submit button on Admin Details of Integration List page for the In Progres" +
            "s status: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifySubmitButtonOnAdminDetailsOfIntegrationListPageForTheInProgressStatus_S1()
        {
#line 76
this.VerifySubmitButtonOnAdminDetailsOfIntegrationListPageForTheInProgressStatus("s1", "systemadmin", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifySubmitSaveChangesFunctionalityOnAdminDetailsOfIntegrationListPage(string scenario, string userame, string password, string companyContactName, string iTDevContactPhone, string companyContactPhone, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify submit save changes functionality on Admin Details of Integration List pag" +
                    "e", @__tags);
#line 87
this.ScenarioSetup(scenarioInfo);
#line 88
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 89
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.Then(string.Format("I can see the modified {0}, {1} and {2} values on the admin details page once I c" +
                        "lick on the Submit button", companyContactName, companyContactPhone, iTDevContactPhone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify submit save changes functionality on Admin Details of Integration List pag" +
            "e: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactName", "Suresh Request List")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDevContactPhone", "12345678901234567890")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactPhone", "23534536457888888333")]
        public virtual void VerifySubmitSaveChangesFunctionalityOnAdminDetailsOfIntegrationListPage_S1()
        {
#line 87
this.VerifySubmitSaveChangesFunctionalityOnAdminDetailsOfIntegrationListPage("s1", "systemadmin", "Te$t1234", "Suresh Request List", "12345678901234567890", "23534536457888888333", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyRequiredFieldsOnAdminDetailsOfIntegrationListPage(string scenario, string userame, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify required fields on Admin Details of Integration List page", @__tags);
#line 101
this.ScenarioSetup(scenarioInfo);
#line 102
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 103
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.Then("Verify the required fields in admin integration details page are highlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify required fields on Admin Details of Integration List page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyRequiredFieldsOnAdminDetailsOfIntegrationListPage_S1()
        {
#line 101
this.VerifyRequiredFieldsOnAdminDetailsOfIntegrationListPage("s1", "systemadmin", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateCompanyNameFieldAcceptsAlphaNumericSpacesSpecialCharactersOf50Characters(string scenario, string userame, string password, string companyContactName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645_Validate Company name field accepts alpha numeric, spaces, special characte" +
                    "rs of 50 characters", @__tags);
#line 113
this.ScenarioSetup(scenarioInfo);
#line 115
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 116
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
 testRunner.Then(string.Format("I should be able to pass fifty characters to Company Contact Name including alpha" +
                        " numeric, spaces, special characters {0}", companyContactName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645_Validate Company name field accepts alpha numeric, spaces, special characte" +
            "rs of 50 characters: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactName", "mklp ,./ 12QWERT !@#$%^ &*()_+\"}{ bvg yui 4567 89P")]
        public virtual void _35645_ValidateCompanyNameFieldAcceptsAlphaNumericSpacesSpecialCharactersOf50Characters_S1()
        {
#line 113
this._35645_ValidateCompanyNameFieldAcceptsAlphaNumericSpacesSpecialCharactersOf50Characters("s1", "systemadmin", "Te$t1234", "mklp ,./ 12QWERT !@#$%^ &*()_+\"}{ bvg yui 4567 89P", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateCompanyNameByPassingMoreThan50CharactersOfAlphaNumericSpecialCharactersAndSpaces(string scenario, string userame, string password, string companyContactName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645_Validate Company name by passing more than 50 characters of alpha numeric ," +
                    " special characters and spaces", @__tags);
#line 124
this.ScenarioSetup(scenarioInfo);
#line 125
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 126
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 127
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.Then(string.Format("I should not be able to pass more than fifty characters in Company Name field inc" +
                        "luding alpha numeric, spaces, special characters {0}", companyContactName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645_Validate Company name by passing more than 50 characters of alpha numeric ," +
            " special characters and spaces: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactName", "mklp ,./ 12QWERT !@#$%^ &*()_+\"}{ bvg yui 4567 89PBNM")]
        public virtual void _35645_ValidateCompanyNameByPassingMoreThan50CharactersOfAlphaNumericSpecialCharactersAndSpaces_S1()
        {
#line 124
this._35645_ValidateCompanyNameByPassingMoreThan50CharactersOfAlphaNumericSpecialCharactersAndSpaces("s1", "systemadmin", "Te$t1234", "mklp ,./ 12QWERT !@#$%^ &*()_+\"}{ bvg yui 4567 89PBNM", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateCompanyContactPhoneAcceptsEqualTo20Didgits(string scenario, string userame, string password, string companyContactPhone, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645_Validate Company Contact Phone accepts equal to 20 didgits", @__tags);
#line 135
this.ScenarioSetup(scenarioInfo);
#line 136
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 137
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
 testRunner.Then(string.Format("I should be able to pass equal to twenty digits in Company Contact Phone {0}", companyContactPhone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645_Validate Company Contact Phone accepts equal to 20 didgits: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactPhone", "(546) 456-45745747474574")]
        public virtual void _35645_ValidateCompanyContactPhoneAcceptsEqualTo20Didgits_S1()
        {
#line 135
this._35645_ValidateCompanyContactPhoneAcceptsEqualTo20Didgits("s1", "systemadmin", "Te$t1234", "(546) 456-45745747474574", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateTheCompanyContactEmailByPassingValidEmailAddress(string scenario, string userame, string password, string companyContactPhone, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645_Validate the Company Contact Email by passing valid email address", @__tags);
#line 145
this.ScenarioSetup(scenarioInfo);
#line 146
   testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 147
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 148
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.Then("I should able to pass valid email address <CompanyContactEmail>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645_Validate the Company Contact Email by passing valid email address: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactPhone", "test@test.com")]
        public virtual void _35645_ValidateTheCompanyContactEmailByPassingValidEmailAddress_S1()
        {
#line 145
this._35645_ValidateTheCompanyContactEmailByPassingValidEmailAddress("s1", "systemadmin", "Te$t1234", "test@test.com", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateITDevContactNameFieldAcceptsAlphaNumericSpacesSpecialCharactersOf50Characters(string scenario, string userame, string password, string iTDEVContactName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645_validate ITDev Contact Name field accepts alpha numeric, spaces, special ch" +
                    "aracters of 50 characters", @__tags);
#line 155
this.ScenarioSetup(scenarioInfo);
#line 156
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 157
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 158
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.Then(string.Format("I should be able to pass fifty characters in ITDEV Contact Name including alpha n" +
                        "umeric , spaces and special characters {0}", iTDEVContactName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645_validate ITDev Contact Name field accepts alpha numeric, spaces, special ch" +
            "aracters of 50 characters: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDEVContactName", "mklp ,./ 12QWERT !@#$%^ &*()_+\"}{ bvg yui 4567 89P")]
        public virtual void _35645_ValidateITDevContactNameFieldAcceptsAlphaNumericSpacesSpecialCharactersOf50Characters_S1()
        {
#line 155
this._35645_ValidateITDevContactNameFieldAcceptsAlphaNumericSpacesSpecialCharactersOf50Characters("s1", "systemadmin", "Te$t1234", "mklp ,./ 12QWERT !@#$%^ &*()_+\"}{ bvg yui 4567 89P", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateTheITDEVContactPhoneAcceptsEqualTo20Digits(string scenario, string userame, string password, string iTDEVContactPhone, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645_Validate the ITDEV Contact Phone accepts equal to 20 digits", @__tags);
#line 166
this.ScenarioSetup(scenarioInfo);
#line 167
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 168
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 169
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
 testRunner.Then(string.Format("I should able to accepts equal to twenty digits in {0}", iTDEVContactPhone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645_Validate the ITDEV Contact Phone accepts equal to 20 digits: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDEVContactPhone", "(546) 456-45745747474574")]
        public virtual void _35645_ValidateTheITDEVContactPhoneAcceptsEqualTo20Digits_S1()
        {
#line 166
this._35645_ValidateTheITDEVContactPhoneAcceptsEqualTo20Digits("s1", "systemadmin", "Te$t1234", "(546) 456-45745747474574", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateTheITDEVContactEmailAcceptsTheValidEmailAddress(string scenario, string userame, string password, string iTDEVContactEmail, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645_Validate the ITDEV Contact Email accepts the valid email address", @__tags);
#line 176
this.ScenarioSetup(scenarioInfo);
#line 177
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 178
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 179
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
 testRunner.Then(string.Format("I can able to pass valid email address in ITDEV Conatct Email {0}", iTDEVContactEmail), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645_Validate the ITDEV Contact Email accepts the valid email address: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDEVContactEmail", "testczar_123@test.com")]
        public virtual void _35645_ValidateTheITDEVContactEmailAcceptsTheValidEmailAddress_S1()
        {
#line 176
this._35645_ValidateTheITDEVContactEmailAcceptsTheValidEmailAddress("s1", "systemadmin", "Te$t1234", "testczar_123@test.com", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateTheAdditionalCommentsFieldAccepts500CharactersWhichIncludesAlphaNumericSpacesAndSpecialCharacters(string scenario, string userame, string password, string additionalComments, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645 - Validate the Additional Comments field accepts 500 characters which inclu" +
                    "des alpha numeric, spaces and special characters", @__tags);
#line 187
this.ScenarioSetup(scenarioInfo);
#line 188
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 189
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 190
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
 testRunner.Then(string.Format("Verify I should be able to enter five hundred characters in the Additional Commen" +
                        "ts field {0}", additionalComments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645 - Validate the Additional Comments field accepts 500 characters which inclu" +
            "des alpha numeric, spaces and special characters: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalComments", @"WSDA 463254 HGDSFHC HFGE YEWG 23JH hdsdh fhegf 635rbe  rhgwef hdgfds bnfvesfd yfgdshc ddsbfyeg 6rre yrt34bd fs feyryehjfsd yy4t dfyewfe 64f dfj 67efe yfgewf gfy ut4357dvcds det4356375632 hsgdhsdhds hsgdufh7t64 fgewjhdfw 6324dbwhjd 763453gefb sd76t5yeedb c ydsc  yu543 56478bs 7864b!@#$% )(*&^ ~!@c 6574  fhg}{"">"":yfe hgsd 6532 hgdsvfyes6 bghdsahd  46532 hggsvh 13 )(*BGHBCFT 47325 dghgds $$% ysfaw++_)+ wfdy ytdfys yfwqe6r3632 dfewgdv ggfwe 6734t32 6rdhb 63rtyds 7r6wghsgf twefh 67432 6r3rvsj uygduew")]
        public virtual void _35645_ValidateTheAdditionalCommentsFieldAccepts500CharactersWhichIncludesAlphaNumericSpacesAndSpecialCharacters_S1()
        {
#line 187
this._35645_ValidateTheAdditionalCommentsFieldAccepts500CharactersWhichIncludesAlphaNumericSpacesAndSpecialCharacters("s1", "systemadmin", "Te$t1234", @"WSDA 463254 HGDSFHC HFGE YEWG 23JH hdsdh fhegf 635rbe  rhgwef hdgfds bnfvesfd yfgdshc ddsbfyeg 6rre yrt34bd fs feyryehjfsd yy4t dfyewfe 64f dfj 67efe yfgewf gfy ut4357dvcds det4356375632 hsgdhsdhds hsgdufh7t64 fgewjhdfw 6324dbwhjd 763453gefb sd76t5yeedb c ydsc  yu543 56478bs 7864b!@#$% )(*&^ ~!@c 6574  fhg}{"">"":yfe hgsd 6532 hgdsvfyes6 bghdsahd  46532 hggsvh 13 )(*BGHBCFT 47325 dghgds $$% ysfaw++_)+ wfdy ytdfys yfwqe6r3632 dfewgdv ggfwe 6734t32 6rdhb 63rtyds 7r6wghsgf twefh 67432 6r3rvsj uygduew", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateTheYearToDateShipmentsFieldAcceptsMax6Digits(string scenario, string userame, string password, string yearToDateShipments, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645 - Validate the Year to Date Shipments field accepts max 6 digits", @__tags);
#line 199
this.ScenarioSetup(scenarioInfo);
#line 200
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 201
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 202
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
 testRunner.Then(string.Format("Verify the Year to Date Shipments able to enter only six digits in the Year to Da" +
                        "te Shipments field {0}", yearToDateShipments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645 - Validate the Year to Date Shipments field accepts max 6 digits: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:YearToDateShipments", "123456")]
        public virtual void _35645_ValidateTheYearToDateShipmentsFieldAcceptsMax6Digits_S1()
        {
#line 199
this._35645_ValidateTheYearToDateShipmentsFieldAcceptsMax6Digits("s1", "systemadmin", "Te$t1234", "123456", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateTheYearToDateShipmentsFieldByPassingMoreThan6Digits(string scenario, string userame, string password, string yearToDateShipments, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645 - Validate the Year To Date Shipments field by passing more than 6 digits", @__tags);
#line 209
this.ScenarioSetup(scenarioInfo);
#line 210
testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 211
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 212
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
 testRunner.Then(string.Format("Year to Date Shipment field does not accepts more than six digits in {0}", yearToDateShipments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645 - Validate the Year To Date Shipments field by passing more than 6 digits: " +
            "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:YearToDateShipments", "12345678454564656")]
        public virtual void _35645_ValidateTheYearToDateShipmentsFieldByPassingMoreThan6Digits_S1()
        {
#line 209
this._35645_ValidateTheYearToDateShipmentsFieldByPassingMoreThan6Digits("s1", "systemadmin", "Te$t1234", "12345678454564656", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateTheYearToDateRevenueAcceptsMaxOf8DigitsIncludingCurrencyWithWholeNumbers(string scenario, string userame, string password, string yeartoDateRevenue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645 - Validate the Year to Date Revenue accepts max of 8 digits including curre" +
                    "ncy $ with whole numbers", @__tags);
#line 219
this.ScenarioSetup(scenarioInfo);
#line 220
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 221
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 222
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
 testRunner.Then(string.Format("Verify I should be able to pass only eight digits including dollar sign with whol" +
                        "e numbers {0}", yeartoDateRevenue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645 - Validate the Year to Date Revenue accepts max of 8 digits including curre" +
            "ncy $ with whole numbers: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:YeartoDateRevenue", "12345678")]
        public virtual void _35645_ValidateTheYearToDateRevenueAcceptsMaxOf8DigitsIncludingCurrencyWithWholeNumbers_S1()
        {
#line 219
this._35645_ValidateTheYearToDateRevenueAcceptsMaxOf8DigitsIncludingCurrencyWithWholeNumbers("S1", "systemadmin", "Te$t1234", "12345678", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateTheYearToDateRevenueDoesNotAcceptsMoreThan8Digits(string scenario, string userame, string password, string yeartoDateRevenue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645 - Validate the Year to Date Revenue does not accepts more than 8 digits", @__tags);
#line 229
this.ScenarioSetup(scenarioInfo);
#line 230
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 231
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 232
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 233
 testRunner.Then(string.Format("Verify Year to Date Revenue does not accepts more than eight digits including dol" +
                        "lar sign with whole numbers {0}", yeartoDateRevenue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645 - Validate the Year to Date Revenue does not accepts more than 8 digits: S1" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:YeartoDateRevenue", "8989891211")]
        public virtual void _35645_ValidateTheYearToDateRevenueDoesNotAcceptsMoreThan8Digits_S1()
        {
#line 229
this._35645_ValidateTheYearToDateRevenueDoesNotAcceptsMoreThan8Digits("S1", "systemadmin", "Te$t1234", "8989891211", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateThePotentialRevenueFieldAcceptsMax8DigitsIncludingCurrencyWithWholeNumbers(string scenario, string userame, string password, string potentialRevenue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645 - Validate the Potential Revenue field accepts max 8 digits including curre" +
                    "ncy with whole numbers", @__tags);
#line 240
this.ScenarioSetup(scenarioInfo);
#line 241
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 242
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 243
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 244
 testRunner.Then(string.Format("Verify Potential Revenue accepts max eight digits including currency with whole n" +
                        "umbers {0}", potentialRevenue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645 - Validate the Potential Revenue field accepts max 8 digits including curre" +
            "ncy with whole numbers: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PotentialRevenue", "67678989")]
        public virtual void _35645_ValidateThePotentialRevenueFieldAcceptsMax8DigitsIncludingCurrencyWithWholeNumbers_S1()
        {
#line 240
this._35645_ValidateThePotentialRevenueFieldAcceptsMax8DigitsIncludingCurrencyWithWholeNumbers("S1", "systemadmin", "Te$t1234", "67678989", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateThePotentialRevenueFieldDoesNotAcceptsMoreThanDigitsIncludingCurrencyWithWholeNumbers(string scenario, string userame, string password, string potentialRevenue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645 - Validate the Potential Revenue field does not accepts more than digits in" +
                    "cluding currency with whole numbers", @__tags);
#line 250
this.ScenarioSetup(scenarioInfo);
#line 251
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 252
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 253
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 254
 testRunner.Then(string.Format("Potential Revenue does accepts more than eight digits including currency with who" +
                        "le numbers {0}", potentialRevenue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645 - Validate the Potential Revenue field does not accepts more than digits in" +
            "cluding currency with whole numbers: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PotentialRevenue", "676789891098")]
        public virtual void _35645_ValidateThePotentialRevenueFieldDoesNotAcceptsMoreThanDigitsIncludingCurrencyWithWholeNumbers_S1()
        {
#line 250
this._35645_ValidateThePotentialRevenueFieldDoesNotAcceptsMoreThanDigitsIncludingCurrencyWithWholeNumbers("S1", "systemadmin", "Te$t1234", "676789891098", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateTheMGCSATotalHoursFieldAcceptsOnly4DigitsOfWholeNumbers(string scenario, string userame, string password, string mGCSATotalHours, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645 - Validate the MGCSA Total hours field accepts only 4 digits of whole numbe" +
                    "rs", @__tags);
#line 261
this.ScenarioSetup(scenarioInfo);
#line 262
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 263
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 264
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
 testRunner.Then(string.Format("Verify the MGCSA Total Hours accepts max four digits of whole numbers {0}", mGCSATotalHours), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645 - Validate the MGCSA Total hours field accepts only 4 digits of whole numbe" +
            "rs: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MGCSATotalHours", "2356")]
        public virtual void _35645_ValidateTheMGCSATotalHoursFieldAcceptsOnly4DigitsOfWholeNumbers_S1()
        {
#line 261
this._35645_ValidateTheMGCSATotalHoursFieldAcceptsOnly4DigitsOfWholeNumbers("S1", "systemadmin", "Te$t1234", "2356", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateTheMGCSATotalHoursFieldDoesNotAcceptsMoreThan4DigitsOfWholeNumbers(string scenario, string userame, string password, string mGCSATotalHours, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645 - Validate the MGCSA Total hours field does not accepts more than 4 digits " +
                    "of whole numbers", @__tags);
#line 271
this.ScenarioSetup(scenarioInfo);
#line 272
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 273
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 274
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 275
 testRunner.Then(string.Format("Verify the MGCSA Total hours field does not accepts more than four digits of whol" +
                        "e numbers {0}", mGCSATotalHours), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645 - Validate the MGCSA Total hours field does not accepts more than 4 digits " +
            "of whole numbers: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MGCSATotalHours", "23563435")]
        public virtual void _35645_ValidateTheMGCSATotalHoursFieldDoesNotAcceptsMoreThan4DigitsOfWholeNumbers_S1()
        {
#line 271
this._35645_ValidateTheMGCSATotalHoursFieldDoesNotAcceptsMoreThan4DigitsOfWholeNumbers("S1", "systemadmin", "Te$t1234", "23563435", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateTheIntegrationTeamTotalHoursAcceptsMax4DigitsOfWholeNumbers(string scenario, string userame, string password, string integrationTotalHours, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645 - Validate the Integration Team Total Hours accepts max 4 digits of whole n" +
                    "umbers", @__tags);
#line 281
this.ScenarioSetup(scenarioInfo);
#line 282
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 283
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 284
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
 testRunner.Then(string.Format("Verify the Integration Total Hours field accepts max of four digits of whole numb" +
                        "ers {0}", integrationTotalHours), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645 - Validate the Integration Team Total Hours accepts max 4 digits of whole n" +
            "umbers: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationTotalHours", "2347")]
        public virtual void _35645_ValidateTheIntegrationTeamTotalHoursAcceptsMax4DigitsOfWholeNumbers_S1()
        {
#line 281
this._35645_ValidateTheIntegrationTeamTotalHoursAcceptsMax4DigitsOfWholeNumbers("S1", "systemadmin", "Te$t1234", "2347", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35645_ValidateTheIntegrationTeamTotalHoursFieldDoeNotAcceptsMoreThan4DigitsOfWholeNumbers(string scenario, string userame, string password, string integrationTotalHours, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35645_Validate the Integration Team total hours field doe not accepts more than 4" +
                    " digits of whole numbers", @__tags);
#line 291
this.ScenarioSetup(scenarioInfo);
#line 292
    testRunner.Given(string.Format("I am a system admin user with valid {0} and {1}", userame, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 293
 testRunner.When("I am on Integration Request List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 294
 testRunner.And("I expand the first record details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
 testRunner.Then(string.Format("Integration Team Total Hours field does not accepst more than four digits of whol" +
                        "e numbers {0}", integrationTotalHours), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35645_Validate the Integration Team total hours field doe not accepts more than 4" +
            " digits of whole numbers: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "IntegrationList Page_AdminDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Userame", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationTotalHours", "2347345345")]
        public virtual void _35645_ValidateTheIntegrationTeamTotalHoursFieldDoeNotAcceptsMoreThan4DigitsOfWholeNumbers_S1()
        {
#line 291
this._35645_ValidateTheIntegrationTeamTotalHoursFieldDoeNotAcceptsMoreThan4DigitsOfWholeNumbers("S1", "systemadmin", "Te$t1234", "2347345345", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
