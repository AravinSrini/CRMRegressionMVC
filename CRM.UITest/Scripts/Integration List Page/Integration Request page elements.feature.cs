// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.IntegrationListPage
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class IntegrationRequestPageElementsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Integration Request page elements.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Integration Request page elements", null, ProgrammingLanguage.CSharp, new string[] {
                        "34273",
                        "Sprint75"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Integration Request page elements")))
            {
                global::CRM.UITest.Scripts.IntegrationListPage.IntegrationRequestPageElementsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _34273_VerifyTheExistenceOfAllTheExpectedFieldsInIntegrationRequestPage(string scenario, string userName, string password, string integrationRequestPageTitle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Verify the existence of all the expected fields in Integration Request page" +
                    "", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
testRunner.Then(@"I should be able to view the following fields - Station,CompanyName,CompanyContactName,CompanyContactEmail,CompanyContactPhone,IT/DeveloperContactName,IT/DeveloperContactEmail,IT/DeveloperContactPhone,StartDate,TypeOfIntegration,YearToDateShipments,YearToDateRevenue,PotentialRevenue,AdditionalComments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Verify the existence of all the expected fields in Integration Request page" +
            ": S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        public virtual void _34273_VerifyTheExistenceOfAllTheExpectedFieldsInIntegrationRequestPage_S1()
        {
#line 5
this._34273_VerifyTheExistenceOfAllTheExpectedFieldsInIntegrationRequestPage("S1", "systemadmin", "Te$t1234", "Submit Integration Request", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateCompanyNameFieldByPassingAlphaNumericSpacesAndSpecialCharactersUptoALimitOf100Characters(string scenario, string userName, string password, string integrationRequestPageTitle, string companyName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273- Validate Company Name field by passing alpha numeric, spaces and special c" +
                    "haracters upto a limit of 100 characters", @__tags);
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
testRunner.Then(string.Format("I must be able to pass data upto 100 characters to Company Name field including a" +
                        "lpha numeric, spaces and special characters {0}", companyName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273- Validate Company Name field by passing alpha numeric, spaces and special c" +
            "haracters upto a limit of 100 characters: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyName", "qwert 12wert_1 !@#$% ^&*() -+= ]}[{\'\' \"::; /.,<>? mnbvc xzasd fre43 231`~ 876 0p " +
            "QWE CXZS PO908-=,Kq")]
        public virtual void _34273_ValidateCompanyNameFieldByPassingAlphaNumericSpacesAndSpecialCharactersUptoALimitOf100Characters_S1()
        {
#line 15
this._34273_ValidateCompanyNameFieldByPassingAlphaNumericSpacesAndSpecialCharactersUptoALimitOf100Characters("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "qwert 12wert_1 !@#$% ^&*() -+= ]}[{\'\' \"::; /.,<>? mnbvc xzasd fre43 231`~ 876 0p " +
                    "QWE CXZS PO908-=,Kq", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateCompanyNameFieldByPassingMoreThan100CharactersIncludingAlphaNumericSpacesAndSpecialCharacters(string scenario, string userName, string password, string integrationRequestPageTitle, string companyName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273- Validate Company Name field by passing more than 100 characters including " +
                    "alpha numeric, spaces and special characters", @__tags);
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
testRunner.Then(string.Format("I should not be able to pass data more than 100 characters to Company Name field " +
                        "including alpha numeric, spaces and special characters {0}", companyName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273- Validate Company Name field by passing more than 100 characters including " +
            "alpha numeric, spaces and special characters: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyName", "qwert 12wert_1 !@#$% ^&*() -+= ]}[{\'\' \"::; /.,<>? mnbvc xzasd fre43 231`~ 876 0p " +
            "QWE CXZS PO908-=,Kqwert")]
        public virtual void _34273_ValidateCompanyNameFieldByPassingMoreThan100CharactersIncludingAlphaNumericSpacesAndSpecialCharacters_S1()
        {
#line 25
this._34273_ValidateCompanyNameFieldByPassingMoreThan100CharactersIncludingAlphaNumericSpacesAndSpecialCharacters("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "qwert 12wert_1 !@#$% ^&*() -+= ]}[{\'\' \"::; /.,<>? mnbvc xzasd fre43 231`~ 876 0p " +
                    "QWE CXZS PO908-=,Kqwert", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateCompanyContactNameFieldByPassingAlphaNumericSpacesAndSpecialCharactersUptoALimitOf50Characters(string scenario, string userName, string password, string integrationRequestPageTitle, string companyContactName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Validate Company Contact Name field by passing alpha numeric, spaces and sp" +
                    "ecial characters upto a limit of 50 characters", @__tags);
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 37
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
testRunner.Then(string.Format("I must be able to pass data upto 50 characters to Company Contact Name field incl" +
                        "uding alpha numeric, spaces and special characters {0}", companyContactName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Validate Company Contact Name field by passing alpha numeric, spaces and sp" +
            "ecial characters upto a limit of 50 characters: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactName", "mklp ,./ 12QWERT !@#$%^ &*()_+\"}{ bvg yui 4567 89P")]
        public virtual void _34273_ValidateCompanyContactNameFieldByPassingAlphaNumericSpacesAndSpecialCharactersUptoALimitOf50Characters_S1()
        {
#line 35
this._34273_ValidateCompanyContactNameFieldByPassingAlphaNumericSpacesAndSpecialCharactersUptoALimitOf50Characters("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "mklp ,./ 12QWERT !@#$%^ &*()_+\"}{ bvg yui 4567 89P", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateCompanyContactNameFieldByPassingMoreThan50CharactersIncludingAlphaNumericSpacesAndSpecialCharacters(string scenario, string userName, string password, string integrationRequestPageTitle, string companyContactName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273- Validate Company Contact Name field by passing more than 50 characters inc" +
                    "luding alpha numeric, spaces and special characters", @__tags);
#line 45
this.ScenarioSetup(scenarioInfo);
#line 46
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 47
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
testRunner.Then(string.Format("I should not be able to pass data more than 50 characters to Company Contact Name" +
                        " field including alpha numeric, spaces and special characters {0}", companyContactName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273- Validate Company Contact Name field by passing more than 50 characters inc" +
            "luding alpha numeric, spaces and special characters: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactName", "mklp ,./ 12QWERT !@#$%^ &*()_+\"}{ bvg yui 4567 89PBNM")]
        public virtual void _34273_ValidateCompanyContactNameFieldByPassingMoreThan50CharactersIncludingAlphaNumericSpacesAndSpecialCharacters_S1()
        {
#line 45
this._34273_ValidateCompanyContactNameFieldByPassingMoreThan50CharactersIncludingAlphaNumericSpacesAndSpecialCharacters("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "mklp ,./ 12QWERT !@#$%^ &*()_+\"}{ bvg yui 4567 89PBNM", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateCompanyContactEmailFieldByPassingValidEmailId(string scenario, string userName, string password, string integrationRequestPageTitle, string companyName, string companyContactEmail, string station, string companyContactName, string companyContactPhone, string iTDeveloperContactName, string iTDeveloperContactEmail, string iTDeveloperContactPhone, string typeOfIntegration, string integrationListPageTitle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Validate Company Contact Email field by passing valid email id", @__tags);
#line 55
this.ScenarioSetup(scenarioInfo);
#line 56
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
testRunner.Then(string.Format("I enter valid email id to the Company Contact Email field along with all required" +
                        " fields {0},{1},{2},{3},{4},{5},{6},{7},{8}", station, companyName, companyContactName, companyContactPhone, companyContactEmail, iTDeveloperContactName, iTDeveloperContactPhone, iTDeveloperContactEmail, typeOfIntegration), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 59
testRunner.And("I click on Submit Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
testRunner.And(string.Format("I should be able to navigate back to Intergration list page {0}", integrationListPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Validate Company Contact Email field by passing valid email id: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyName", "Saggezza")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactEmail", "sag@yahoo.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station", "TestStation013")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactName", "qwrwt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactPhone", "98765456754323456789")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactName", "etreu sjka")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactEmail", "sncbds@hotmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactPhone", "98765456754323456789")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TypeOfIntegration", "Invoicing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationListPageTitle", "Integration Request List")]
        public virtual void _34273_ValidateCompanyContactEmailFieldByPassingValidEmailId_S1()
        {
#line 55
this._34273_ValidateCompanyContactEmailFieldByPassingValidEmailId("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "Saggezza", "sag@yahoo.com", "TestStation013", "qwrwt", "98765456754323456789", "etreu sjka", "sncbds@hotmail.com", "98765456754323456789", "Invoicing", "Integration Request List", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateCompanyContactEmailFieldByPassingInvalidEmailId(string scenario, string userName, string password, string integrationRequestPageTitle, string companyName, string companyContactEmail, string station, string companyContactName, string companyContactPhone, string iTDeveloperContactName, string iTDeveloperContactEmail, string iTDeveloperContactPhone, string typeOfIntegration, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Validate Company Contact Email field by passing invalid email id", @__tags);
#line 67
this.ScenarioSetup(scenarioInfo);
#line 68
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
testRunner.Then(string.Format("I enter invalid email id to the Company Contact Email field along with all requir" +
                        "ed fields {0},{1},{2},{3},{4},{5},{6},{7},{8}", station, companyName, companyContactName, companyContactPhone, companyContactEmail, iTDeveloperContactName, iTDeveloperContactPhone, iTDeveloperContactEmail, typeOfIntegration), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 71
testRunner.And("I click on Submit Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
testRunner.And("The Company Contact Email field should be highlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Validate Company Contact Email field by passing invalid email id: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyName", "Saggezza")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactEmail", "sag@yahoo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station", "TestStation013")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactName", "qwrwt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactPhone", "98765456754323456789")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactName", "etreu sjka")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactEmail", "sncbds@hotmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactPhone", "98765456754323456789")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TypeOfIntegration", "Invoicing")]
        public virtual void _34273_ValidateCompanyContactEmailFieldByPassingInvalidEmailId_S1()
        {
#line 67
this._34273_ValidateCompanyContactEmailFieldByPassingInvalidEmailId("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "Saggezza", "sag@yahoo", "TestStation013", "qwrwt", "98765456754323456789", "etreu sjka", "sncbds@hotmail.com", "98765456754323456789", "Invoicing", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateCompanyContactPhoneFieldByPassingUpto20Digits(string scenario, string userName, string password, string integrationRequestPageTitle, string companyContactPhone, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273- Validate Company Contact phone field by passing upto 20 digits", @__tags);
#line 79
this.ScenarioSetup(scenarioInfo);
#line 80
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
testRunner.Then(string.Format("I should be able to pass upto 20 digits to Company Contact phone field {0}", companyContactPhone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273- Validate Company Contact phone field by passing upto 20 digits: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactPhone", "98765432123456786543")]
        public virtual void _34273_ValidateCompanyContactPhoneFieldByPassingUpto20Digits_S1()
        {
#line 79
this._34273_ValidateCompanyContactPhoneFieldByPassingUpto20Digits("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "98765432123456786543", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateCompanyContactPhoneFieldByPassingLessThan10Digits(string scenario, string userName, string password, string integrationRequestPageTitle, string companyContactPhone, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273- Validate Company Contact phone field by passing less than 10 digits", @__tags);
#line 89
this.ScenarioSetup(scenarioInfo);
#line 90
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 91
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
testRunner.Then(string.Format("I pass less than 10 digits to Company contact field {0}", companyContactPhone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 93
testRunner.And("I click on Submit Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
testRunner.Then("The Company Contact phone field should be highlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273- Validate Company Contact phone field by passing less than 10 digits: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactPhone", "9876543")]
        public virtual void _34273_ValidateCompanyContactPhoneFieldByPassingLessThan10Digits_S1()
        {
#line 89
this._34273_ValidateCompanyContactPhoneFieldByPassingLessThan10Digits("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "9876543", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateCompanyContactPhoneFieldByPassingMoreThan20Digits(string scenario, string userName, string password, string integrationRequestPageTitle, string companyContactPhone, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273- Validate Company Contact phone field by passing more than 20 digits", @__tags);
#line 101
this.ScenarioSetup(scenarioInfo);
#line 102
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 103
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
testRunner.Then(string.Format("I should not be able to pass more than 20 digits to Company Contact phone field {" +
                        "0}", companyContactPhone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273- Validate Company Contact phone field by passing more than 20 digits: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactPhone", "9876543212345678654312345")]
        public virtual void _34273_ValidateCompanyContactPhoneFieldByPassingMoreThan20Digits_S1()
        {
#line 101
this._34273_ValidateCompanyContactPhoneFieldByPassingMoreThan20Digits("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "9876543212345678654312345", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateITDeveloperContactNameFieldByPassingAlphaNumericSpacesAndSpecialCharactersUptoALimitOf50Characters(string scenario, string userName, string password, string integrationRequestPageTitle, string iTDeveloperContactName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Validate IT/Developer Contact name field by passing alpha numeric, spaces a" +
                    "nd special characters upto a limit of 50 characters", @__tags);
#line 111
this.ScenarioSetup(scenarioInfo);
#line 112
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 113
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
testRunner.Then(string.Format("I must be able to pass data upto 50 characters to IT/Developer Contact name field" +
                        " including alpha numeric, spaces and special characters {0}", iTDeveloperContactName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Validate IT/Developer Contact name field by passing alpha numeric, spaces a" +
            "nd special characters upto a limit of 50 characters: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactName", "awqwytr <>?\": _)(*n 7654321 cfg dsa 12345 !@#$% AQ")]
        public virtual void _34273_ValidateITDeveloperContactNameFieldByPassingAlphaNumericSpacesAndSpecialCharactersUptoALimitOf50Characters_S1()
        {
#line 111
this._34273_ValidateITDeveloperContactNameFieldByPassingAlphaNumericSpacesAndSpecialCharactersUptoALimitOf50Characters("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "awqwytr <>?\": _)(*n 7654321 cfg dsa 12345 !@#$% AQ", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateITDeveloperContactNameFieldByPassingMoreThan50CharactersIncludingAlphaNumericSpacesAndSpecialCharacters(string scenario, string userName, string password, string integrationRequestPageTitle, string iTDeveloperContactName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Validate IT/Developer Contact name field by passing more than 50 characters" +
                    " including alpha numeric, spaces and special characters", @__tags);
#line 121
this.ScenarioSetup(scenarioInfo);
#line 122
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 123
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
testRunner.Then(string.Format("I must not be able to pass data more than 50 characters to IT/Developer Contact n" +
                        "ame field including alpha numeric, spaces and special characters {0}", iTDeveloperContactName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Validate IT/Developer Contact name field by passing more than 50 characters" +
            " including alpha numeric, spaces and special characters: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactName", "awqwytr <>?\": _)(*n 7654321 cfg dsa 12345 !@#$% AQPOI")]
        public virtual void _34273_ValidateITDeveloperContactNameFieldByPassingMoreThan50CharactersIncludingAlphaNumericSpacesAndSpecialCharacters_S1()
        {
#line 121
this._34273_ValidateITDeveloperContactNameFieldByPassingMoreThan50CharactersIncludingAlphaNumericSpacesAndSpecialCharacters("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "awqwytr <>?\": _)(*n 7654321 cfg dsa 12345 !@#$% AQPOI", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateITDeveloperContactEmailFieldByPassingValidEmailId(string scenario, string userName, string password, string integrationRequestPageTitle, string companyName, string companyContactEmail, string station, string companyContactName, string companyContactPhone, string iTDeveloperContactName, string iTDeveloperContactEmail, string iTDeveloperContactPhone, string typeOfIntegration, string integrationListPageTitle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Validate IT/developer Contact email field by passing valid email id", @__tags);
#line 131
this.ScenarioSetup(scenarioInfo);
#line 132
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 133
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 134
testRunner.Then(string.Format("I enter valid email id to the IT/developer Contact Email field along with all req" +
                        "uired fields {0},{1},{2},{3},{4},{5},{6},{7},{8}", station, companyName, companyContactName, companyContactPhone, companyContactEmail, iTDeveloperContactName, iTDeveloperContactPhone, iTDeveloperContactEmail, typeOfIntegration), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 135
testRunner.And("I click on Submit Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
testRunner.And(string.Format("I should be able to navigate back to Intergration list page {0}", integrationListPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Validate IT/developer Contact email field by passing valid email id: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyName", "Saggezza")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactEmail", "sag@yahoo.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station", "TestStation013")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactName", "qwrwt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactPhone", "98765456754323456789")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactName", "etreu sjka")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactEmail", "sncbds@hotmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactPhone", "98765456754323456789")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TypeOfIntegration", "Invoicing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationListPageTitle", "Integration Request List")]
        public virtual void _34273_ValidateITDeveloperContactEmailFieldByPassingValidEmailId_S1()
        {
#line 131
this._34273_ValidateITDeveloperContactEmailFieldByPassingValidEmailId("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "Saggezza", "sag@yahoo.com", "TestStation013", "qwrwt", "98765456754323456789", "etreu sjka", "sncbds@hotmail.com", "98765456754323456789", "Invoicing", "Integration Request List", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateITDeveloperContactEmailByPassingInvalidEmailId(string scenario, string userName, string password, string integrationRequestPageTitle, string companyName, string companyContactEmail, string station, string companyContactName, string companyContactPhone, string iTDeveloperContactName, string iTDeveloperContactEmail, string iTDeveloperContactPhone, string typeOfIntegration, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Validate IT/developer Contact email by passing invalid email id", @__tags);
#line 143
this.ScenarioSetup(scenarioInfo);
#line 144
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 145
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
testRunner.Then(string.Format("I enter invalid email id to the IT/developer Contact email along with all require" +
                        "d fields {0},{1},{2},{3},{4},{5},{6},{7},{8}", station, companyName, companyContactName, companyContactPhone, companyContactEmail, iTDeveloperContactName, iTDeveloperContactPhone, iTDeveloperContactEmail, typeOfIntegration), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 147
testRunner.And("I click on Submit Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
testRunner.And("The IT/developer Contact email field should be highlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Validate IT/developer Contact email by passing invalid email id: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyName", "Saggezza")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactEmail", "sag@yahoo.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station", "TestStation013")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactName", "qwrwt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CompanyContactPhone", "98765432123456786543")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactName", "etreu sjka")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactEmail", "sncbds@hotmail")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactPhone", "98765432123456786543")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TypeOfIntegration", "Invoicing")]
        public virtual void _34273_ValidateITDeveloperContactEmailByPassingInvalidEmailId_S1()
        {
#line 143
this._34273_ValidateITDeveloperContactEmailByPassingInvalidEmailId("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "Saggezza", "sag@yahoo.com", "TestStation013", "qwrwt", "98765432123456786543", "etreu sjka", "sncbds@hotmail", "98765432123456786543", "Invoicing", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateITDeveloperContactPhoneFieldByPassingUpto20Digits(string scenario, string userName, string password, string integrationRequestPageTitle, string iTDeveloperContactPhone, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273- Validate IT/developer Contact phone field by passing upto 20 digits", @__tags);
#line 155
this.ScenarioSetup(scenarioInfo);
#line 156
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 157
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 158
testRunner.Then(string.Format("I should be able to pass upto 20 digits to IT/developer Contact phone field {0}", iTDeveloperContactPhone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273- Validate IT/developer Contact phone field by passing upto 20 digits: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactPhone", "98765434567812345678")]
        public virtual void _34273_ValidateITDeveloperContactPhoneFieldByPassingUpto20Digits_S1()
        {
#line 155
this._34273_ValidateITDeveloperContactPhoneFieldByPassingUpto20Digits("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "98765434567812345678", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateITDeveloperContactPhoneFieldByPassingLessThan10Digits(string scenario, string userName, string password, string integrationRequestPageTitle, string iTDeveloperContactPhone, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273- Validate IT/developer Contact phone field by passing less than 10 digits", @__tags);
#line 165
this.ScenarioSetup(scenarioInfo);
#line 166
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 167
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 168
testRunner.Then("I pass less than 10 digits to IT/developer Contact phone field <CompanyContactPho" +
                    "ne>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 169
testRunner.And("I click on Submit Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
testRunner.Then("The IT/developer Contact phone field should be highlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273- Validate IT/developer Contact phone field by passing less than 10 digits: " +
            "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactPhone", "98765434")]
        public virtual void _34273_ValidateITDeveloperContactPhoneFieldByPassingLessThan10Digits_S1()
        {
#line 165
this._34273_ValidateITDeveloperContactPhoneFieldByPassingLessThan10Digits("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "98765434", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateITDeveloperContactPhoneFieldByPassingMoreThan20Digits(string scenario, string userName, string password, string integrationRequestPageTitle, string iTDeveloperContactPhone, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273- Validate IT/developer Contact phone field by passing more than 20 digits", @__tags);
#line 178
this.ScenarioSetup(scenarioInfo);
#line 179
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 180
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 181
testRunner.Then(string.Format("I should not be able to pass more than 20 digits to IT/developer Contact phone fi" +
                        "eld {0}", iTDeveloperContactPhone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273- Validate IT/developer Contact phone field by passing more than 20 digits: " +
            "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ITDeveloperContactPhone", "987654345678123456780987")]
        public virtual void _34273_ValidateITDeveloperContactPhoneFieldByPassingMoreThan20Digits_S1()
        {
#line 178
this._34273_ValidateITDeveloperContactPhoneFieldByPassingMoreThan20Digits("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "987654345678123456780987", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_VerifyTheExistenceOfExpectedListOfOptionsInTypeOfIntegrationMultiSelectDropdown(string scenario, string userName, string password, string integrationRequestPageTitle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Verify the existence of expected list of options in Type of Integration mul" +
                    "ti select dropdown", @__tags);
#line 188
this.ScenarioSetup(scenarioInfo);
#line 189
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 190
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 191
testRunner.Then("I should be able to view the following values in the Type of Integration multi se" +
                    "lect dropdown- Rate Request,Shipment Import,Tracking,Document Extract,Invoicing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Verify the existence of expected list of options in Type of Integration mul" +
            "ti select dropdown: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        public virtual void _34273_VerifyTheExistenceOfExpectedListOfOptionsInTypeOfIntegrationMultiSelectDropdown_S1()
        {
#line 188
this._34273_VerifyTheExistenceOfExpectedListOfOptionsInTypeOfIntegrationMultiSelectDropdown("S1", "systemadmin", "Te$t1234", "Submit Integration Request", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateYearToDateShipmentsFieldByPassingAMaximumOf6DigitsWhichIncludesNumericAndWholeNumbers(string scenario, string userName, string password, string integrationRequestPageTitle, string yearToDateShipments, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Validate Year to Date shipments field by passing a maximum of 6 digits whic" +
                    "h includes numeric and whole numbers", @__tags);
#line 198
this.ScenarioSetup(scenarioInfo);
#line 199
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 200
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 201
testRunner.Then(string.Format("I should be able to pass data with a maximum of 6 digits to Year to Date Shipment" +
                        "s field which includes numeric and whole numbers {0}", yearToDateShipments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Validate Year to Date shipments field by passing a maximum of 6 digits whic" +
            "h includes numeric and whole numbers: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:YearToDateShipments", "199320")]
        public virtual void _34273_ValidateYearToDateShipmentsFieldByPassingAMaximumOf6DigitsWhichIncludesNumericAndWholeNumbers_S1()
        {
#line 198
this._34273_ValidateYearToDateShipmentsFieldByPassingAMaximumOf6DigitsWhichIncludesNumericAndWholeNumbers("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "199320", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateYearToDateShipmentsFieldByPassingMoreThan6DigitsWhichIncludesNumericAndWholeNumbers(string scenario, string userName, string password, string integrationRequestPageTitle, string yearToDateShipments, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Validate Year to Date shipments field by passing more than 6 digits which i" +
                    "ncludes numeric and whole numbers", @__tags);
#line 208
this.ScenarioSetup(scenarioInfo);
#line 209
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 210
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 211
testRunner.Then(string.Format("I should not be able to pass more than 6 digits to Year to Date Shipments field w" +
                        "hich includes numeric and whole numbers {0}", yearToDateShipments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Validate Year to Date shipments field by passing more than 6 digits which i" +
            "ncludes numeric and whole numbers: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:YearToDateShipments", "19932065")]
        public virtual void _34273_ValidateYearToDateShipmentsFieldByPassingMoreThan6DigitsWhichIncludesNumericAndWholeNumbers_S1()
        {
#line 208
this._34273_ValidateYearToDateShipmentsFieldByPassingMoreThan6DigitsWhichIncludesNumericAndWholeNumbers("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "19932065", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateYearToDateRevenueFieldByPassingAMaximumOf8DigitsWhichIncludesCurrencyWithAndWholeNumbers(string scenario, string userName, string password, string integrationRequestPageTitle, string yearToDateRevenue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Validate Year to Date Revenue field by passing a maximum of 8 digits which " +
                    "includes currency with $ and whole numbers", @__tags);
#line 218
this.ScenarioSetup(scenarioInfo);
#line 219
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 220
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 221
testRunner.Then(string.Format("I should be able to pass data with a maximum of 8 digits to Year to Date Revenue " +
                        "field which includes currency with $ and whole numbers {0}", yearToDateRevenue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Validate Year to Date Revenue field by passing a maximum of 8 digits which " +
            "includes currency with $ and whole numbers: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:YearToDateRevenue", "06543245")]
        public virtual void _34273_ValidateYearToDateRevenueFieldByPassingAMaximumOf8DigitsWhichIncludesCurrencyWithAndWholeNumbers_S1()
        {
#line 218
this._34273_ValidateYearToDateRevenueFieldByPassingAMaximumOf8DigitsWhichIncludesCurrencyWithAndWholeNumbers("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "06543245", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateYearToDateRevenueFieldByPassingMoreThan8DigitsWhichIncludesCurrencyWithAndWholeNumbers(string scenario, string userName, string password, string integrationRequestPageTitle, string yearToDateRevenue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Validate Year to Date Revenue field by passing more than 8 digits which inc" +
                    "ludes currency with $ and whole numbers", @__tags);
#line 228
this.ScenarioSetup(scenarioInfo);
#line 229
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 230
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 231
testRunner.Then(string.Format("I should not be able to pass more than 8 digits Year to Date Revenue field which " +
                        "includes currency with $ and whole numbers {0}", yearToDateRevenue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Validate Year to Date Revenue field by passing more than 8 digits which inc" +
            "ludes currency with $ and whole numbers: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:YearToDateRevenue", "065432456789")]
        public virtual void _34273_ValidateYearToDateRevenueFieldByPassingMoreThan8DigitsWhichIncludesCurrencyWithAndWholeNumbers_S1()
        {
#line 228
this._34273_ValidateYearToDateRevenueFieldByPassingMoreThan8DigitsWhichIncludesCurrencyWithAndWholeNumbers("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "065432456789", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidatePotentialRevenueFieldByPassingAMaximumOf8DigitsWhichIncludesCurrencyWithAndWholeNumbers(string scenario, string userName, string password, string integrationRequestPageTitle, string potentialRevenue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Validate Potential Revenue field by passing a maximum of 8 digits which inc" +
                    "ludes currency with $ and whole numbers", @__tags);
#line 238
this.ScenarioSetup(scenarioInfo);
#line 239
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 240
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 241
testRunner.Then(string.Format("I should be able to pass data with a maximum of 8 digits to Potential Revenue fie" +
                        "ld which includes currency with $ and whole numbers {0}", potentialRevenue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Validate Potential Revenue field by passing a maximum of 8 digits which inc" +
            "ludes currency with $ and whole numbers: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PotentialRevenue", "04532456")]
        public virtual void _34273_ValidatePotentialRevenueFieldByPassingAMaximumOf8DigitsWhichIncludesCurrencyWithAndWholeNumbers_S1()
        {
#line 238
this._34273_ValidatePotentialRevenueFieldByPassingAMaximumOf8DigitsWhichIncludesCurrencyWithAndWholeNumbers("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "04532456", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidatePotentialRevenueFieldByPassingMoreThan8DigitsWhichIncludesCurrencyWithAndWholeNumbers(string scenario, string userName, string password, string integrationRequestPageTitle, string potentialRevenue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Validate Potential Revenue field by passing more than 8 digits which includ" +
                    "es currency with $ and whole numbers", @__tags);
#line 248
this.ScenarioSetup(scenarioInfo);
#line 249
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 250
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 251
testRunner.Then(string.Format("I should not be able to pass data more than 8 digits to Potential Revenue which i" +
                        "ncludes currency with $ and whole numbers {0}", potentialRevenue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Validate Potential Revenue field by passing more than 8 digits which includ" +
            "es currency with $ and whole numbers: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PotentialRevenue", "045324564345")]
        public virtual void _34273_ValidatePotentialRevenueFieldByPassingMoreThan8DigitsWhichIncludesCurrencyWithAndWholeNumbers_S1()
        {
#line 248
this._34273_ValidatePotentialRevenueFieldByPassingMoreThan8DigitsWhichIncludesCurrencyWithAndWholeNumbers("S1", "systemadmin", "Te$t1234", "Submit Integration Request", "045324564345", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateAdditionalCommentsFieldByPassingAMaximumOf500CharactersWhichIncludesAlphaNumericSpacesAndSpecialCharacters(string scenario, string userName, string password, string integrationRequestPageTitle, string additionalComments, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273- Validate Additional Comments field by passing a maximum of 500 characters " +
                    "which includes alpha numeric, spaces and special characters", @__tags);
#line 258
this.ScenarioSetup(scenarioInfo);
#line 259
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 260
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 261
testRunner.Then(string.Format("I must be able to pass a maximum of 500 characters to Additional Comments field w" +
                        "hich includes alpha numeric, spaces and special characters {0}", additionalComments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273- Validate Additional Comments field by passing a maximum of 500 characters " +
            "which includes alpha numeric, spaces and special characters: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalComments", @"WSDA 463254 HGDSFHC HFGE YEWG 23JH hdsdh fhegf 635rbe  rhgwef hdgfds bnfvesfd yfgdshc ddsbfyeg 6rre yrt34bd fs feyryehjfsd yy4t dfyewfe 64f dfj 67efe yfgewf gfy ut4357dvcds det4356375632 hsgdhsdhds hsgdufh7t64 fgewjhdfw 6324dbwhjd 763453gefb sd76t5yeedb c ydsc  yu543 56478bs 7864b!@#$% )(*&^ ~!@c 6574  fhg}{"">"":yfe hgsd 6532 hgdsvfyes6 bghdsahd  46532 hggsvh 13 )(*BGHBCFT 47325 dghgds $$% ysfaw++_)+ wfdy ytdfys yfwqe6r3632 dfewgdv ggfwe 6734t32 6rdhb 63rtyds 7r6wghsgf twefh 67432 6r3rvsj uygduew")]
        public virtual void _34273_ValidateAdditionalCommentsFieldByPassingAMaximumOf500CharactersWhichIncludesAlphaNumericSpacesAndSpecialCharacters_S1()
        {
#line 258
this._34273_ValidateAdditionalCommentsFieldByPassingAMaximumOf500CharactersWhichIncludesAlphaNumericSpacesAndSpecialCharacters("S1", "systemadmin", "Te$t1234", "Submit Integration Request", @"WSDA 463254 HGDSFHC HFGE YEWG 23JH hdsdh fhegf 635rbe  rhgwef hdgfds bnfvesfd yfgdshc ddsbfyeg 6rre yrt34bd fs feyryehjfsd yy4t dfyewfe 64f dfj 67efe yfgewf gfy ut4357dvcds det4356375632 hsgdhsdhds hsgdufh7t64 fgewjhdfw 6324dbwhjd 763453gefb sd76t5yeedb c ydsc  yu543 56478bs 7864b!@#$% )(*&^ ~!@c 6574  fhg}{"">"":yfe hgsd 6532 hgdsvfyes6 bghdsahd  46532 hggsvh 13 )(*BGHBCFT 47325 dghgds $$% ysfaw++_)+ wfdy ytdfys yfwqe6r3632 dfewgdv ggfwe 6734t32 6rdhb 63rtyds 7r6wghsgf twefh 67432 6r3rvsj uygduew", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_ValidateAdditionalCommentsFieldByPassingMoreThan500CharactersWhichIncludesAlphaNumericSpacesAndSpecialCharacters(string scenario, string userName, string password, string integrationRequestPageTitle, string additionalComments, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273- Validate Additional Comments field by passing more than 500 characters whi" +
                    "ch includes alpha numeric, spaces and special characters", @__tags);
#line 268
this.ScenarioSetup(scenarioInfo);
#line 269
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 270
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 271
testRunner.Then(string.Format("I should not be able to pass more than 500 characters to Additional Comments fiel" +
                        "d which includes alpha numeric, spaces and special characters {0}", additionalComments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273- Validate Additional Comments field by passing more than 500 characters whi" +
            "ch includes alpha numeric, spaces and special characters: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalComments", @"WSDA 463254 HGDSFHC HFGE YEWG 23JH hdsdh fhegf 635rbe  rhgwef hdgfds bnfvesfd yfgdshc ddsbfyeg 6rre yrt34bd fs feyryehjfsd yy4t dfyewfe 64f dfj 67efe yfgewf gfy ut4357dvcds det4356375632 hsgdhsdhds hsgdufh7t64 fgewjhdfw 6324dbwhjd 763453gefb sd76t5yeedb c ydsc  yu543 56478bs 7864b!@#$% )(*&^ ~!@c 6574  fhg}{"">"":yfe hgsd 6532 hgdsvfyes6 bghdsahd  46532 hggsvh 13 )(*BGHBCFT 47325 dghgds $$% ysfaw++_)+ wfdy ytdfys yfwqe6r3632 dfewgdv ggfwe 6734t32 6rdhb 63rtyds 7r6wghsgf twefh 67432 6r3rvsj uygduew 634gfdhgs kjd")]
        public virtual void _34273_ValidateAdditionalCommentsFieldByPassingMoreThan500CharactersWhichIncludesAlphaNumericSpacesAndSpecialCharacters_S1()
        {
#line 268
this._34273_ValidateAdditionalCommentsFieldByPassingMoreThan500CharactersWhichIncludesAlphaNumericSpacesAndSpecialCharacters("S1", "systemadmin", "Te$t1234", "Submit Integration Request", @"WSDA 463254 HGDSFHC HFGE YEWG 23JH hdsdh fhegf 635rbe  rhgwef hdgfds bnfvesfd yfgdshc ddsbfyeg 6rre yrt34bd fs feyryehjfsd yy4t dfyewfe 64f dfj 67efe yfgewf gfy ut4357dvcds det4356375632 hsgdhsdhds hsgdufh7t64 fgewjhdfw 6324dbwhjd 763453gefb sd76t5yeedb c ydsc  yu543 56478bs 7864b!@#$% )(*&^ ~!@c 6574  fhg}{"">"":yfe hgsd 6532 hgdsvfyes6 bghdsahd  46532 hggsvh 13 )(*BGHBCFT 47325 dghgds $$% ysfaw++_)+ wfdy ytdfys yfwqe6r3632 dfewgdv ggfwe 6734t32 6rdhb 63rtyds 7r6wghsgf twefh 67432 6r3rvsj uygduew 634gfdhgs kjd", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_VerifyTheRequiredFieldsInIntergrationRequestPage(string scenario, string userName, string password, string integrationRequestPageTitle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273-Verify the required fields in Intergration Request page", @__tags);
#line 278
this.ScenarioSetup(scenarioInfo);
#line 279
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 280
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 281
testRunner.And("I do not pass any values to all the required fields - Station,CompanyName,Company" +
                    "ContactName,CompanyContactEmail,CompanyContactPhone,IT/DeveloperContactName,IT/D" +
                    "eveloperContactEmail,IT/DeveloperContactPhone,StartDate,TypeOfIntegration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 282
testRunner.And("I click on the Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 283
testRunner.Then("All the expected required fields must be highlighted - Station,CompanyName,Compan" +
                    "yContactName,CompanyContactEmail,CompanyContactPhone,IT/DeveloperContactName,IT/" +
                    "DeveloperContactEmail,IT/DeveloperContactPhone,StartDate,TypeOfIntegration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273-Verify the required fields in Intergration Request page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        public virtual void _34273_VerifyTheRequiredFieldsInIntergrationRequestPage_S1()
        {
#line 278
this._34273_VerifyTheRequiredFieldsInIntergrationRequestPage("S1", "systemadmin", "Te$t1234", "Submit Integration Request", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_VerifyTheExistenceOfSubmitButtonInIntegrationRequestPage(string scenario, string userName, string password, string integrationRequestPageTitle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273- Verify the existence of Submit Button in Integration Request page", @__tags);
#line 290
this.ScenarioSetup(scenarioInfo);
#line 291
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 292
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 293
testRunner.Then("I must be able to view Submit Button on Integration Request page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273- Verify the existence of Submit Button in Integration Request page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        public virtual void _34273_VerifyTheExistenceOfSubmitButtonInIntegrationRequestPage_S1()
        {
#line 290
this._34273_VerifyTheExistenceOfSubmitButtonInIntegrationRequestPage("S1", "systemadmin", "Te$t1234", "Submit Integration Request", ((string[])(null)));
#line hidden
        }
        
        public virtual void _34273_VerifyTheExistenceOfBackToIntegrationListButtonInIntegrationRequestPage(string scenario, string userName, string password, string integrationRequestPageTitle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34273- Verify the existence of Back to Integration list button in Integration Req" +
                    "uest page", @__tags);
#line 300
this.ScenarioSetup(scenarioInfo);
#line 301
testRunner.Given(string.Format("I am a system admin, operations, sales, sales management or station owner user {0" +
                        "},{1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 302
testRunner.When(string.Format("I arrive on Integration Request page {0}", integrationRequestPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 303
testRunner.Then("I must be able to view Back to Integration list button on Integration Request pag" +
                    "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("34273- Verify the existence of Back to Integration list button in Integration Req" +
            "uest page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Integration Request page elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("34273")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint75")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IntegrationRequestPageTitle", "Submit Integration Request")]
        public virtual void _34273_VerifyTheExistenceOfBackToIntegrationListButtonInIntegrationRequestPage_S1()
        {
#line 300
this._34273_VerifyTheExistenceOfBackToIntegrationListButtonInIntegrationRequestPage("S1", "systemadmin", "Te$t1234", "Submit Integration Request", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
