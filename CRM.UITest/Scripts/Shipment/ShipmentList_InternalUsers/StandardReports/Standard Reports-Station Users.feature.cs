// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Shipment.ShipmentList_InternalUsers.StandardReports
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class StandardReports_StationUsersFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Standard Reports-Station Users.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Standard Reports-Station Users", null, ProgrammingLanguage.CSharp, new string[] {
                        "Quote",
                        "Standard",
                        "Reports",
                        "-",
                        "Station",
                        "users",
                        "Sprint68",
                        "27811"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Standard Reports-Station Users")))
            {
                CRM.UITest.Scripts.Shipment.ShipmentList_InternalUsers.StandardReports.StandardReports_StationUsersFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyDefaultCustomerSelectionWillBeAllCustomers(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify default customer selection will be All Customers", @__tags);
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
testRunner.And("I click on the Shipment Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
testRunner.When("I arrive on shipment list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
testRunner.Then("the default customer selection will be All Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify default customer selection will be All Customers: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Standard Reports-Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Reports")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27811")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyDefaultCustomerSelectionWillBeAllCustomers_S1()
        {
            this.VerifyDefaultCustomerSelectionWillBeAllCustomers("S1", "stationown", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheShipmentListDisplayWithinShipmentListGridDefaultToTheShipmentsForThePreviousThirtyDays(string scenario, string username, string password, string standard_ReportNameMG, string stationData, string customername, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the shipment list display within shipment list grid default to the shipmen" +
                    "ts for the previous thirty days", @__tags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
testRunner.And("I click on the Shipment Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
testRunner.When("I arrive on shipment list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
testRunner.Then("the default customer selection will be All Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
testRunner.Then(string.Format("the shipment list display will default to the shipments for the previous thirty d" +
                        "ays{0},{1},{2}", stationData, standard_ReportNameMG, customername), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the shipment list display within shipment list grid default to the shipmen" +
            "ts for the previous thirty days: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Standard Reports-Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Reports")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27811")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameMG", "CRM-ShpPrev30DaysAgent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationData", "ZZZ,ZZX")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customername", "Admin")]
        public virtual void VerifyTheShipmentListDisplayWithinShipmentListGridDefaultToTheShipmentsForThePreviousThirtyDays_S1()
        {
            this.VerifyTheShipmentListDisplayWithinShipmentListGridDefaultToTheShipmentsForThePreviousThirtyDays("S1", "stationown", "Te$t1234", "CRM-ShpPrev30DaysAgent", "ZZZ,ZZX", "Admin", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the shipment list display within shipment list grid default to the shipmen" +
            "ts for the previous thirty days: S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Standard Reports-Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Reports")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27811")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Opstage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameMG", "CRM-ShpPrev30DaysAgent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationData", "ATW")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customername", "Admin")]
        public virtual void VerifyTheShipmentListDisplayWithinShipmentListGridDefaultToTheShipmentsForThePreviousThirtyDays_S2()
        {
            this.VerifyTheShipmentListDisplayWithinShipmentListGridDefaultToTheShipmentsForThePreviousThirtyDays("S2", "Opstage", "Te$t1234", "CRM-ShpPrev30DaysAgent", "ATW", "Admin", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyShipmentListWhenSelectedMGCustomerFromTheDropDownListThenSelectedStandardReportTypeOfMGAndCSABoth(string scenario, string username, string password, string customer_Name, string standard_ReportNameMG, string standard_ReportNameDropDown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify shipment list when selected MG customer from the drop down list then selec" +
                    "ted standard report type of MG and CSA (Both)", @__tags);
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
testRunner.And("I click on the Shipment Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
testRunner.When("I arrive on shipment list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
testRunner.When(string.Format("I have selected MG Customer from the drop down {0}", customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
testRunner.Then(string.Format("I have selected standard report type of MG and CSA (BOth) {0}", standard_ReportNameDropDown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 35
testRunner.And(string.Format("the shipment list will update to only display the standard report from MG for the" +
                        " selected customer<StationData>,{0},{1}", standard_ReportNameMG, customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify shipment list when selected MG customer from the drop down list then selec" +
            "ted standard report type of MG and CSA (Both): s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Standard Reports-Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Reports")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27811")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameMG", "CRM-Shipments from Current Month Agent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameDropDown", "Shipments from Current Month")]
        public virtual void VerifyShipmentListWhenSelectedMGCustomerFromTheDropDownListThenSelectedStandardReportTypeOfMGAndCSABoth_S1()
        {
            this.VerifyShipmentListWhenSelectedMGCustomerFromTheDropDownListThenSelectedStandardReportTypeOfMGAndCSABoth("s1", "stationown", "Te$t1234", "ZZZ - Czar Customer Test", "CRM-Shipments from Current Month Agent", "Shipments from Current Month", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyShipmentListWhenSelectedMGCustomerFromTheDropDownListThenSelectedStandardReportTypeOfMGOnly(string scenario, string username, string password, string customer_Name, string standard_ReportNameMG, string standard_ReportNameDropDown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify shipment list when selected MG customer from the drop down list then selec" +
                    "ted standard report type of MG only", @__tags);
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
testRunner.And("I click on the Shipment Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
testRunner.When("I arrive on shipment list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
testRunner.When(string.Format("I have selected MG Customer from the drop down {0}", customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
testRunner.Then(string.Format("I have selected standard report type of MG only {0}", standard_ReportNameDropDown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 48
testRunner.Then(string.Format("the shipment list will update to only display the standard report from MG for the" +
                        " selected customer<StationData>,{0},{1}", standard_ReportNameMG, customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify shipment list when selected MG customer from the drop down list then selec" +
            "ted standard report type of MG only: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Standard Reports-Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Reports")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27811")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameMG", "CRM-Shipments from Current Month Agent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameDropDown", "Shipments from Current Month")]
        public virtual void VerifyShipmentListWhenSelectedMGCustomerFromTheDropDownListThenSelectedStandardReportTypeOfMGOnly_S1()
        {
            this.VerifyShipmentListWhenSelectedMGCustomerFromTheDropDownListThenSelectedStandardReportTypeOfMGOnly("s1", "stationown", "Te$t1234", "ZZZ - Czar Customer Test", "CRM-Shipments from Current Month Agent", "Shipments from Current Month", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyShipmentListWhenSelectedCSACustomerFromTheDropDownListThenSelectedStandardReportTypeOfMGOnly(string scenario, string username, string password, string customer_Name, string standard_ReportNameMG, string standard_ReportNameDropDown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify shipment list when selected CSA customer from the drop down list then sele" +
                    "cted standard report type of MG only", @__tags);
#line 69
this.ScenarioSetup(scenarioInfo);
#line 70
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 71
testRunner.And("I click on the Shipment Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
testRunner.When("I arrive on shipment list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
testRunner.When(string.Format("I have selected CSA Customer from the drop down {0}", customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
testRunner.Then(string.Format("I have selected standard report type of MG only {0}", standard_ReportNameDropDown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 75
testRunner.And("I will not get any report", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify shipment list when selected CSA customer from the drop down list then sele" +
            "cted standard report type of MG only: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Standard Reports-Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Reports")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27811")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "EnterprisetypeTest3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameMG", "CRM-Shipments from Current Month Agent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameDropDown", "Shipments from Current Month")]
        public virtual void VerifyShipmentListWhenSelectedCSACustomerFromTheDropDownListThenSelectedStandardReportTypeOfMGOnly_S1()
        {
            this.VerifyShipmentListWhenSelectedCSACustomerFromTheDropDownListThenSelectedStandardReportTypeOfMGOnly("s1", "stationown", "Te$t1234", "EnterprisetypeTest3", "CRM-Shipments from Current Month Agent", "Shipments from Current Month", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyShipmentListWhenSelectedCSACustomerFromTheDropDownListThenSelectedStandardReportTypeOfBOTH(string scenario, string username, string password, string customer_Name, string standard_ReportNameMG, string standard_ReportNameDropDown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify shipment list when selected CSA customer from the drop down list then sele" +
                    "cted standard report type of BOTH", @__tags);
#line 82
this.ScenarioSetup(scenarioInfo);
#line 83
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 84
testRunner.And("I click on the Shipment Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
testRunner.When("I arrive on shipment list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 86
testRunner.When(string.Format("I have selected MG Customer from the drop down {0}", customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
testRunner.Then(string.Format("I have selected standard report type of MG and CSA (Both) {0}", standard_ReportNameDropDown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 88
testRunner.And(string.Format("the shipment list will update to only display the standard report from MG for the" +
                        " selected customer<StationData>,{0},{1}", standard_ReportNameMG, customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify shipment list when selected CSA customer from the drop down list then sele" +
            "cted standard report type of BOTH: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Standard Reports-Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Reports")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27811")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameMG", "CRM-Shipments from Current Month Agent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameDropDown", "Shipments from Current Month")]
        public virtual void VerifyShipmentListWhenSelectedCSACustomerFromTheDropDownListThenSelectedStandardReportTypeOfBOTH_S1()
        {
            this.VerifyShipmentListWhenSelectedCSACustomerFromTheDropDownListThenSelectedStandardReportTypeOfBOTH("s1", "stationown", "Te$t1234", "ZZZ - Czar Customer Test", "CRM-Shipments from Current Month Agent", "Shipments from Current Month", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyShipmentListWhenSelectedMGAndCSABothCustomerFromTheDropDownListThenSelectedStandardReportTypeOfMGOnly(string scenario, string username, string password, string customer_Name, string standard_ReportNameMG, string standard_ReportNameDropDown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify shipment list when selected MG and CSA (Both) customer from the drop down " +
                    "list then selected standard report type of MG only", @__tags);
#line 95
this.ScenarioSetup(scenarioInfo);
#line 96
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 97
testRunner.And("I click on the Shipment Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
testRunner.When("I arrive on shipment list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
testRunner.When(string.Format("I have selected MG and CSA (Both) Customer from the drop down {0}", customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 100
testRunner.Then(string.Format("I have selected standard report type of MG only {0}", standard_ReportNameDropDown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 101
testRunner.And(string.Format("the shipment list will update to only display the standard report from MG for the" +
                        " selected customer<StationData>,{0},{1}", standard_ReportNameMG, customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify shipment list when selected MG and CSA (Both) customer from the drop down " +
            "list then selected standard report type of MG only: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Standard Reports-Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Reports")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27811")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "Gainshare15thTestEnv1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameMG", "CRM-Shipments from Current Month Agent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameDropDown", "Shipments from Current Month")]
        public virtual void VerifyShipmentListWhenSelectedMGAndCSABothCustomerFromTheDropDownListThenSelectedStandardReportTypeOfMGOnly_S1()
        {
            this.VerifyShipmentListWhenSelectedMGAndCSABothCustomerFromTheDropDownListThenSelectedStandardReportTypeOfMGOnly("s1", "stationown", "Te$t1234", "Gainshare15thTestEnv1", "CRM-Shipments from Current Month Agent", "Shipments from Current Month", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyShipmentListWhenSelectedMGAndCSABothCustomerFromTheDropDownListThenSelectedStandardReportTypeOfBOTH(string scenario, string username, string password, string customer_Name, string standard_ReportNameMG, string standard_ReportNameDropDown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify shipment list when selected MG and CSA (Both) customer from the drop down " +
                    "list then selected standard report type of BOTH", @__tags);
#line 108
this.ScenarioSetup(scenarioInfo);
#line 109
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 110
testRunner.And("I click on the Shipment Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
testRunner.When("I arrive on shipment list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
testRunner.When(string.Format("I have selected MG and CSA (Both) Customer from the drop down {0}", customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 113
testRunner.Then(string.Format("I have selected standard report type of MG and CSA (Both) {0}", standard_ReportNameDropDown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 114
testRunner.And(string.Format("the shipment list will update to only display the standard report from MG and CSA" +
                        "(Both) for the selected customer {0},{1}", customer_Name, standard_ReportNameMG), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify shipment list when selected MG and CSA (Both) customer from the drop down " +
            "list then selected standard report type of BOTH: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Standard Reports-Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Reports")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27811")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameMG", "CRM-Shipments from Current Month Agent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameDropDown", "Shipments from Current Month")]
        public virtual void VerifyShipmentListWhenSelectedMGAndCSABothCustomerFromTheDropDownListThenSelectedStandardReportTypeOfBOTH_S1()
        {
            this.VerifyShipmentListWhenSelectedMGAndCSABothCustomerFromTheDropDownListThenSelectedStandardReportTypeOfBOTH("s1", "stationown", "Te$t1234", "ZZZ - GS Customer Test", "CRM-Shipments from Current Month Agent", "Shipments from Current Month", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyShipmentListWhenStandardReportsTypeOfMGThenSelectedMGCustomerFromTheDropDown(string scenario, string username, string password, string customer_Name, string standard_ReportNameMG, string standard_ReportNameDropDown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify shipment list when standard reports type of MG then selected MG customer f" +
                    "rom the drop down", @__tags);
#line 120
this.ScenarioSetup(scenarioInfo);
#line 121
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 122
testRunner.And("I click on the Shipment Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
testRunner.When("I arrive on shipment list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
testRunner.When(string.Format("I have selected Standard report {0}", standard_ReportNameDropDown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 125
testRunner.Then(string.Format("I have a MG customer {0}", customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 126
testRunner.And(string.Format("the shipment list will update to only display the standard report from MG for the" +
                        " selected customer<StationData>,{0},{1}", standard_ReportNameMG, customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify shipment list when standard reports type of MG then selected MG customer f" +
            "rom the drop down: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Standard Reports-Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Reports")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27811")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameMG", "CRM-Shipments from Current Month Agent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameDropDown", "Shipments from Current Month")]
        public virtual void VerifyShipmentListWhenStandardReportsTypeOfMGThenSelectedMGCustomerFromTheDropDown_S1()
        {
            this.VerifyShipmentListWhenStandardReportsTypeOfMGThenSelectedMGCustomerFromTheDropDown("s1", "stationown", "Te$t1234", "ZZZ - Czar Customer Test", "CRM-Shipments from Current Month Agent", "Shipments from Current Month", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyShipmentListWhenStandardReportsTypeOfCSAAndMGBothThenSelectedMGAndCSABothCustomerFromTheDropDown(string scenario, string username, string password, string customer_Name, string standard_ReportNameMG, string standard_ReportNameDropDown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify shipment list when standard reports type of CSA and MG (Both) then selecte" +
                    "d MG and CSA (Both) customer from the drop down", @__tags);
#line 133
this.ScenarioSetup(scenarioInfo);
#line 134
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 135
testRunner.And("I click on the Shipment Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
testRunner.When("I arrive on shipment list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 137
testRunner.When(string.Format("I have selected Standard report {0}", standard_ReportNameDropDown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
testRunner.Then(string.Format("I have selected MG and CSA (Both) customer {0}", customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 139
testRunner.And(string.Format("the shipment list will update to only display the standard report from MG and CSA" +
                        "(Both) for the selected customer {0},{1}", customer_Name, standard_ReportNameMG), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify shipment list when standard reports type of CSA and MG (Both) then selecte" +
            "d MG and CSA (Both) customer from the drop down: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Standard Reports-Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Reports")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27811")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameMG", "CRM-Shipments from Current Month Agent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameDropDown", "Shipments from Current Month")]
        public virtual void VerifyShipmentListWhenStandardReportsTypeOfCSAAndMGBothThenSelectedMGAndCSABothCustomerFromTheDropDown_S1()
        {
            this.VerifyShipmentListWhenStandardReportsTypeOfCSAAndMGBothThenSelectedMGAndCSABothCustomerFromTheDropDown("s1", "stationown", "Te$t1234", "ZZZ - GS Customer Test", "CRM-Shipments from Current Month Agent", "Shipments from Current Month", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyShipmentListWhenSelectedDefaultOptionFromTheReportDropDownList(string scenario, string username, string password, string customer_Name, string standard_ReportNameMG, string standard_ReportNameDropDown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify shipment list when selected default option from the report drop down list", @__tags);
#line 163
this.ScenarioSetup(scenarioInfo);
#line 164
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 165
testRunner.And("I click on the Shipment Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
testRunner.When("I arrive on shipment list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 167
testRunner.When(string.Format("I have selected any customer from drop down {0}", customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 168
testRunner.When(string.Format("I have selected Standard report {0}", standard_ReportNameDropDown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 169
testRunner.Then("I select SELECT A REPORT option from the report drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 170
testRunner.And(string.Format("the shipment list will update to only display the standard report from MG and CSA" +
                        "(Both) for the selected customer {0},{1}", customer_Name, standard_ReportNameMG), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify shipment list when selected default option from the report drop down list:" +
            " s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Standard Reports-Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Reports")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27811")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameMG", "CRM-Shipments from Current Month Agent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameDropDown", "Shipments from Current Month")]
        public virtual void VerifyShipmentListWhenSelectedDefaultOptionFromTheReportDropDownList_S1()
        {
            this.VerifyShipmentListWhenSelectedDefaultOptionFromTheReportDropDownList("s1", "stationown", "Te$t1234", "ZZZ - GS Customer Test", "CRM-Shipments from Current Month Agent", "Shipments from Current Month", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyShipmentListWhenSelectedALLCustomerOptionFromTheDropDownList(string scenario, string username, string password, string standard_ReportNameMG, string stationData, string customername, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify shipment list when selected ALL Customer option from the drop down list", @__tags);
#line 179
this.ScenarioSetup(scenarioInfo);
#line 180
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 181
testRunner.And("I click on the Shipment Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
testRunner.When("I arrive on shipment list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 183
testRunner.When("I have selected any customer from drop down <Customer_Name>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 184
testRunner.When("I have selected Standard report <Standard_ReportNameDropDown>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 185
testRunner.Then("I select ALL CUSTOMER from the report drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 186
testRunner.And(string.Format("the shipment list display will default to the shipments for the previous thirty d" +
                        "ays{0},{1},{2}", stationData, standard_ReportNameMG, customername), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify shipment list when selected ALL Customer option from the drop down list: S" +
            "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Standard Reports-Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Reports")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27811")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameMG", "CRM-Shipments from Current Month Agent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationData", "ZZZ,ZZX")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customername", "Admin")]
        public virtual void VerifyShipmentListWhenSelectedALLCustomerOptionFromTheDropDownList_S1()
        {
            this.VerifyShipmentListWhenSelectedALLCustomerOptionFromTheDropDownList("S1", "stationown", "Te$t1234", "CRM-Shipments from Current Month Agent", "ZZZ,ZZX", "Admin", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyMessageWithinShipmentListGridWhenSelectionCriteriaDoesNotReturnAnyRecords(string scenario, string username, string password, string customer_Name, string standard_ReportNameMG, string standard_ReportNameDropDown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify message within shipment list grid when selection criteria does not return " +
                    "any records", @__tags);
#line 192
this.ScenarioSetup(scenarioInfo);
#line 193
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 194
testRunner.And("I click on the Shipment Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
testRunner.When("I arrive on shipment list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 196
testRunner.When(string.Format("I have selected any customer from drop down {0}", customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 197
testRunner.And(string.Format("I have selected any standard report  {0}", standard_ReportNameDropDown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
testRunner.And("my selection criteria does not return any records", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
testRunner.Then("the shipment list will update to display message no results found in the shipment" +
                    " list grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify message within shipment list grid when selection criteria does not return " +
            "any records: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Standard Reports-Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Reports")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27811")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "EnterprisetypeTest3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameMG", "CRM-Shipments from Current Month Agent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Standard_ReportNameDropDown", "Shipments from Current Month")]
        public virtual void VerifyMessageWithinShipmentListGridWhenSelectionCriteriaDoesNotReturnAnyRecords_S1()
        {
            this.VerifyMessageWithinShipmentListGridWhenSelectionCriteriaDoesNotReturnAnyRecords("s1", "stationown", "Te$t1234", "EnterprisetypeTest3", "CRM-Shipments from Current Month Agent", "Shipments from Current Month", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
