// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Shipment.ShipmentList_InternalUsers.ShipmentList_CustomReportsCreate_StationUsers
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ShipmentList_CustomReportsCreate_StationUsersFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "ShipmentList_CustomReportsCreate_StationUsers.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ShipmentList_CustomReportsCreate_StationUsers", null, ProgrammingLanguage.CSharp, new string[] {
                        "ShipmentList_CustomReportsCreate_StationUsers",
                        "27812",
                        "Sprint68"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "ShipmentList_CustomReportsCreate_StationUsers")))
            {
                global::CRM.UITest.Scripts.Shipment.ShipmentList_InternalUsers.ShipmentList_CustomReportsCreate_StationUsers.ShipmentList_CustomReportsCreate_StationUsersFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyTheAbsenceOfCustomerSelectionAndPresenceOfTheCustomReportText(string scenario, string username, string password, string customeReport_Tex, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the absence of Customer selection and presence of the custom report text", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
testRunner.And("I Clicked on Show Filter link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
testRunner.Then("I will not be able to see Customer selection dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
testRunner.And("I will see the text message as The custom report will be for All Customers<Custom" +
                    "eReport_text>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the absence of Customer selection and presence of the custom report text: " +
            "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomeReport_tex", "The custom report will be for All Customers")]
        public virtual void VerifyTheAbsenceOfCustomerSelectionAndPresenceOfTheCustomReportText_S1()
        {
#line 5
this.VerifyTheAbsenceOfCustomerSelectionAndPresenceOfTheCustomReportText("s1", "jennifer.k.fitzgerald", "Te$t1234", "The custom report will be for All Customers", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfSaveReportPopUpReportNameTextboxOkAndCancelButton(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Save Report popUp,report name textbox,ok and cancel button" +
                    "", @__tags);
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
testRunner.And("I Clicked on Show Filter link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
testRunner.And("I Click on Save as New button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
testRunner.Then("I will see Save Report Modal PopUp", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 25
testRunner.And("I will see free form textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
testRunner.And("I will see Ok and Cancel button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Save Report popUp,report name textbox,ok and cancel button" +
            ": s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyThePresenceOfSaveReportPopUpReportNameTextboxOkAndCancelButton_S1()
        {
#line 19
this.VerifyThePresenceOfSaveReportPopUpReportNameTextboxOkAndCancelButton("s1", "jennifer.k.fitzgerald", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheSaveReportModalPopUpClosesUpOnClickOnCancelButton(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Save Report Modal Pop Up closes UpOn Click on Cancel button", @__tags);
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
testRunner.And("I Clicked on Show Filter link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
testRunner.And("I Click on Save as New button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
testRunner.Then("I will see Save Report Modal PopUp", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
testRunner.And("I Click on cancel button closes the Save Report Modal Pop", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Save Report Modal Pop Up closes UpOn Click on Cancel button: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyTheSaveReportModalPopUpClosesUpOnClickOnCancelButton_S1()
        {
#line 37
this.VerifyTheSaveReportModalPopUpClosesUpOnClickOnCancelButton("s1", "jennifer.k.fitzgerald", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCustomReportSavedInDatabaseUpOnClickOnOkButtonInTheSaveReportModalPopUp(string scenario, string username, string password, string orgCity, string reportName, string customeReport_Text, string destCity, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("verify the Custom report Saved in Database UpOn Click on Ok button in the Save Re" +
                    "port Modal PopUp", @__tags);
#line 53
this.ScenarioSetup(scenarioInfo);
#line 54
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
testRunner.And("I Clicked on Show Filter link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
testRunner.And(string.Format("enter the required filters{0}and{1}", orgCity, destCity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
testRunner.And("I Click on Save as New button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
testRunner.Then("I will see Save Report Modal PopUp", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 60
testRunner.And(string.Format("I will be able to save the Report{0}", reportName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
testRunner.And(string.Format("I will be able to see Report data in database{0}OriginCity{1}DestinationCity{2}", reportName, orgCity, destCity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
testRunner.And("the I will not see Custom Filter section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
testRunner.And("I will be able to see created Report in the Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
testRunner.And("I will see Customer Account dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
testRunner.And(string.Format("I will not see Custom Report text{0}", customeReport_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("verify the Custom report Saved in Database UpOn Click on Ok button in the Save Re" +
            "port Modal PopUp: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OrgCity", "Woo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ReportName", "tapcity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomeReport_text", "The custom report will be for All Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestCity", "Hous")]
        public virtual void VerifyTheCustomReportSavedInDatabaseUpOnClickOnOkButtonInTheSaveReportModalPopUp_S1()
        {
#line 53
this.VerifyTheCustomReportSavedInDatabaseUpOnClickOnOkButtonInTheSaveReportModalPopUp("s1", "jennifer.k.fitzgerald", "Te$t1234", "Woo", "tapcity", "The custom report will be for All Customers", "Hous", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheExternalUsersMGAPIInShipmentListGridForCustomReport(string scenario, string useremail, string password, string serviceType, string refNumber, string stardDate, string enddate, string orgCity, string destCity, string status, string customerAccount, string mgCustomerAccountNumber, string aPIReport, string customReport, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("verify the External Users MG API in Shipment List Grid for Custom report", @__tags);
#line 79
this.ScenarioSetup(scenarioInfo);
#line 80
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", useremail, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
testRunner.And("I clicked on the Select a Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
testRunner.When(string.Format("I select any Custom Report from Report Dropdown{0}", customReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
testRunner.Then(string.Format("the Shipment list displayed for the selected Custom Report and Customer Accountus" +
                        "er{0}service{1}reference{2}startdate{3}enddate{4}orgincity{5}destcity{6}status{7" +
                        "}acc{8}accnumber{9}report{10}", useremail, serviceType, refNumber, stardDate, enddate, orgCity, destCity, status, customerAccount, mgCustomerAccountNumber, aPIReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("verify the External Users MG API in Shipment List Grid for Custom report: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Useremail", "zzzext@user.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ServiceType", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RefNumber", "ZZX00206515")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StardDate", "09/26/2017")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Enddate", "10/06/2017")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OrgCity", "CHICAGO")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestCity", "TOLEDO")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "In Transit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MgCustomerAccountNumber", "ZZZCZAR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:APIReport", "CRM-CustomReportNoDestCityRef")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomReport", "Gvaptest")]
        public virtual void VerifyTheExternalUsersMGAPIInShipmentListGridForCustomReport_S1()
        {
#line 79
this.VerifyTheExternalUsersMGAPIInShipmentListGridForCustomReport("s1", "zzzext@user.com", "Te$t1234", "LTL", "ZZX00206515", "09/26/2017", "10/06/2017", "CHICAGO", "TOLEDO", "In Transit", "ZZZ - Czar Customer Test", "ZZZCZAR", "CRM-CustomReportNoDestCityRef", "Gvaptest", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheInternalUsersMGAPIInShipmentListGridForCustomReport(string scenario, string useremail, string password, string serviceType, string refNumber, string stardDate, string enddate, string orgCity, string destCity, string status, string customerAccount, string mgCustomerAccountNumber, string aPIReport, string customReport, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("verify the Internal Users MG API in Shipment List Grid for Custom report", @__tags);
#line 93
this.ScenarioSetup(scenarioInfo);
#line 94
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", useremail, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 95
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 96
testRunner.And("I clicked on the Select a Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
testRunner.When(string.Format("I select any Custom Report from Report Dropdown{0}", customReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 98
testRunner.And(string.Format("I select any Customer Account from the drop down{0}", customerAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
testRunner.Then(string.Format("the Shipment list displayed for the selected Custom Report and Customer Accountus" +
                        "er{0}service{1}reference{2}startdate{3}enddate{4}orgincity{5}destcity{6}status{7" +
                        "}acc{8}accnumber{9}report{10}", useremail, serviceType, refNumber, stardDate, enddate, orgCity, destCity, status, customerAccount, mgCustomerAccountNumber, aPIReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("verify the Internal Users MG API in Shipment List Grid for Custom report: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Useremail", "jennifer.k.fitzgerald@rrd.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ServiceType", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RefNumber", "ZZX00206515")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StardDate", "09/26/2017")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Enddate", "10/06/2017")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OrgCity", "CHICAGO")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestCity", "TOLEDO")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "In Transit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MgCustomerAccountNumber", "ZZZWST")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:APIReport", "CRM-AgentReportNoDestCityRef")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomReport", "Intap")]
        public virtual void VerifyTheInternalUsersMGAPIInShipmentListGridForCustomReport_S1()
        {
#line 93
this.VerifyTheInternalUsersMGAPIInShipmentListGridForCustomReport("s1", "jennifer.k.fitzgerald@rrd.com", "Te$t1234", "LTL", "ZZX00206515", "09/26/2017", "10/06/2017", "CHICAGO", "TOLEDO", "In Transit", "ZZZ - Czar Customer Test", "ZZZWST", "CRM-AgentReportNoDestCityRef", "Intap", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheAPIResponseForCSAReportForExternalUsers(string scenario, string useremail, string password, string servType, string refNumber, string stardDate, string enddate, string orgCity, string destCity, string status_UI, string customerAccount, string reportName, string userType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("verify the API response for CSA Report for External Users", @__tags);
#line 109
this.ScenarioSetup(scenarioInfo);
#line 110
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", useremail, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 111
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
testRunner.And("I Clicked on Show Filter link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
testRunner.And(string.Format("I create Custom Report{0},{1},{2},{3},{4},{5},{6}", servType, stardDate, enddate, status_UI, orgCity, destCity, refNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
testRunner.And("I Click on Save as New button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
testRunner.Then("I will see Save Report Modal PopUp", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 116
testRunner.And(string.Format("I will be able to save the Report{0}", reportName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
testRunner.And(string.Format("I selecting any customer Account{0}{1}", customerAccount, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
testRunner.Then(string.Format("the Shipment list will be displayed for the created Report{0}reference{1}startdat" +
                        "e{2}enddate{3}orgincity{4}destcity{5}status{6}acc{7}", servType, refNumber, stardDate, enddate, orgCity, destCity, status_UI, customerAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("verify the API response for CSA Report for External Users: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Useremail", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:servType", "International")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RefNumber", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StardDate", "11/08/2016")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Enddate", "10/13/2017")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OrgCity", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestCity", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status_UI", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ReportName", "TCSAp")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "External")]
        public virtual void VerifyTheAPIResponseForCSAReportForExternalUsers_S1()
        {
#line 109
this.VerifyTheAPIResponseForCSAReportForExternalUsers("s1", "Both@test.com", "Te$t1234", "International", "", "11/08/2016", "10/13/2017", "", "", "", "ZZZ - GS Customer Test", "TCSAp", "External", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("verify the API response for CSA Report for External Users: s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Useremail", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:servType", "DomForwarding")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RefNumber", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StardDate", "11/08/2016")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Enddate", "10/13/2017")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OrgCity", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestCity", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status_UI", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ReportName", "TVCSAM")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "External")]
        public virtual void VerifyTheAPIResponseForCSAReportForExternalUsers_S2()
        {
#line 109
this.VerifyTheAPIResponseForCSAReportForExternalUsers("s2", "Both@test.com", "Te$t1234", "DomForwarding", "", "11/08/2016", "10/13/2017", "", "", "", "ZZZ - GS Customer Test", "TVCSAM", "External", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheAPIResponseForCSAReportForInternalUsersOfTMSCSAOrBoth(string scenario, string useremail, string password, string servType, string refNumber, string stardDate, string enddate, string orgCity, string destCity, string status_UI, string customerAccount, string reportName, string stationData, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("verify the API Response for CSA Report for Internal Users of TMS CSA or Both", @__tags);
#line 127
this.ScenarioSetup(scenarioInfo);
#line 128
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", useremail, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 129
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
testRunner.And("I Clicked on Show Filter link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
testRunner.And(string.Format("I create Custom Report{0},{1},{2},{3},{4},{5},{6}", servType, stardDate, enddate, status_UI, orgCity, destCity, refNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
testRunner.And("I Click on Save as New button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
testRunner.Then("I will see Save Report Modal PopUp", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 134
testRunner.And(string.Format("I will be able to save the Report{0}", reportName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
testRunner.Then(string.Format("the Shipment list for Internal User will be displayed for the created Report{0}re" +
                        "ference{1}startdate{2}enddate{3}orgincity{4}destcity{5}status{6}acc{7}StationId{" +
                        "8}", servType, refNumber, stardDate, enddate, orgCity, destCity, status_UI, customerAccount, stationData), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("verify the API Response for CSA Report for Internal Users of TMS CSA or Both: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Useremail", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:servType", "International")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RefNumber", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StardDate", "11/08/2016")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Enddate", "10/13/2017")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OrgCity", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestCity", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status_UI", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ReportName", "TPVCSAp")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationData", "ZZZ,ZZX")]
        public virtual void VerifyTheAPIResponseForCSAReportForInternalUsersOfTMSCSAOrBoth_S1()
        {
#line 127
this.VerifyTheAPIResponseForCSAReportForInternalUsersOfTMSCSAOrBoth("s1", "stationown", "Te$t1234", "International", "", "11/08/2016", "10/13/2017", "", "", "", "", "TPVCSAp", "ZZZ,ZZX", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("verify the API Response for CSA Report for Internal Users of TMS CSA or Both: s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Useremail", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:servType", "DomForwarding")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RefNumber", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StardDate", "11/08/2016")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Enddate", "10/13/2017")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OrgCity", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestCity", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status_UI", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ReportName", "TSPVCSAp")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationData", "ZZZ,ZZX")]
        public virtual void VerifyTheAPIResponseForCSAReportForInternalUsersOfTMSCSAOrBoth_S2()
        {
#line 127
this.VerifyTheAPIResponseForCSAReportForInternalUsersOfTMSCSAOrBoth("s2", "stationown", "Te$t1234", "DomForwarding", "", "11/08/2016", "10/13/2017", "", "", "", "", "TSPVCSAp", "ZZZ,ZZX", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheInternalUserAbleToSelectAnyOneCustomerFromCustomerAccountDropdown(string scenario, string username, string password, string customerAccount, string customReport, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("verify the Internal User able to select any one customer from Customer Account dr" +
                    "opdown", @__tags);
#line 144
this.ScenarioSetup(scenarioInfo);
#line 145
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 146
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 147
testRunner.And("I clicked on the Select a Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
testRunner.And(string.Format("I select any Custom Report from Report Dropdown{0}", customReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
testRunner.Then("I will see default Customer Selection will be All customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 150
testRunner.And(string.Format("I able to select any one customer{0}", customerAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("verify the Internal User able to select any one customer from Customer Account dr" +
            "opdown: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "Abt Electronics & Applicances")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomReport", "s")]
        public virtual void VerifyTheInternalUserAbleToSelectAnyOneCustomerFromCustomerAccountDropdown_S1()
        {
#line 144
this.VerifyTheInternalUserAbleToSelectAnyOneCustomerFromCustomerAccountDropdown("s1", "jennifer.k.fitzgerald", "Te$t1234", "Abt Electronics & Applicances", "s", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyForTheTextNoResultsFoundForCustomReports(string scenario, string username, string password, string customReport, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify for the text No Results found for Custom Reports", @__tags);
#line 157
this.ScenarioSetup(scenarioInfo);
#line 158
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 159
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 160
testRunner.And(string.Format("I have select any Report which has No shipments from Report Dropdown{0}", customReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
testRunner.Then("I will see No Results found text message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify for the text No Results found for Custom Reports: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomReport", "Norecords")]
        public virtual void VerifyForTheTextNoResultsFoundForCustomReports_S1()
        {
#line 157
this.VerifyForTheTextNoResultsFoundForCustomReports("s1", "jennifer.k.fitzgerald", "Te$t1234", "Norecords", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyForTheTextNoResultsFoundForStandardReports(string scenario, string username, string password, string standardReport, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify for the text No Results found for Standard Reports", @__tags);
#line 167
this.ScenarioSetup(scenarioInfo);
#line 168
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 169
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 170
testRunner.And(string.Format("I have select any Report which has No shipments from Report Dropdown{0}", standardReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
testRunner.Then("I will see No Results found text message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify for the text No Results found for Standard Reports: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StandardReport", "Shipments Tendered not Booked")]
        public virtual void VerifyForTheTextNoResultsFoundForStandardReports_S1()
        {
#line 167
this.VerifyForTheTextNoResultsFoundForStandardReports("s1", "jennifer.k.fitzgerald", "Te$t1234", "Shipments Tendered not Booked", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheSharedReportCheckBox(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Shared Report check box", @__tags);
#line 179
this.ScenarioSetup(scenarioInfo);
#line 180
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 181
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 182
testRunner.And("I Clicked on Show Filter link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
testRunner.Then("I Should see Shared Report Checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Shared Report check box: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyTheSharedReportCheckBox_S1()
        {
#line 179
this.VerifyTheSharedReportCheckBox("s1", "jennifer.k.fitzgerald", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheFunctionalityOfCreatingSharedReport(string scenario, string username, string password, string orgCity, string reportName, string destCity, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the functionality of creating shared report", @__tags);
#line 190
this.ScenarioSetup(scenarioInfo);
#line 191
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 192
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 193
testRunner.And("I Clicked on Show Filter link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
testRunner.And(string.Format("I enter the required filters{0}{1}", orgCity, destCity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
testRunner.And("I clicked on Shared Checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
testRunner.And("I Click on Save as New button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
testRunner.Then(string.Format("Created share Custom Report should Updated in Database {0}", reportName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the functionality of creating shared report: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OrgCity", "Woodridge")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ReportName", "SR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestCity", "Houston")]
        public virtual void VerifyTheFunctionalityOfCreatingSharedReport_S1()
        {
#line 190
this.VerifyTheFunctionalityOfCreatingSharedReport("s1", "jennifer.k.fitzgerald", "Te$t1234", "Woodridge", "SR", "Houston", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheErrorMessageWhenSharedReportNameAlreadyExistsForAnotherSharedReportWithInStation(string scenario, string username, string password, string orgCity, string duplicateReportName, string destCity, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Error message when shared Report name already exists for another share" +
                    "d report with in station", @__tags);
#line 204
this.ScenarioSetup(scenarioInfo);
#line 205
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 206
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 207
testRunner.And("I Clicked on Show Filter link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 208
testRunner.And(string.Format("I enter the required filters{0}{1}", orgCity, destCity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
testRunner.And("I clicked on Shared Checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
testRunner.And("I Click on Save as New button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
testRunner.Then(string.Format("I try to save the shared Report which already exist for another report will be ge" +
                        "tting error message{0}", duplicateReportName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Error message when shared Report name already exists for another share" +
            "d report with in station: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OrgCity", "Woodridge")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DuplicateReportName", "Dont Delete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestCity", "Houston")]
        public virtual void VerifyTheErrorMessageWhenSharedReportNameAlreadyExistsForAnotherSharedReportWithInStation_S1()
        {
#line 204
this.VerifyTheErrorMessageWhenSharedReportNameAlreadyExistsForAnotherSharedReportWithInStation("s1", "jennifer.k.fitzgerald", "Te$t1234", "Woodridge", "Dont Delete", "Houston", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifySharedReportAccessibilityWithAnyUserWhichHasAccessToMyStation(string scenario, string username, string password, string orgCity, string sharedReportName, string destCity, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Shared Report accessibility with any user which has access to my station", @__tags);
#line 218
this.ScenarioSetup(scenarioInfo);
#line 219
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 220
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 221
testRunner.Then(string.Format("I will be able to see shared Report in drop down{0}", sharedReportName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Shared Report accessibility with any user which has access to my station: " +
            "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_CustomReportsCreate_StationUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("27812")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown@stage.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OrgCity", "Woodridge")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SharedReportName", "Dont Delete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestCity", "Houston")]
        public virtual void VerifySharedReportAccessibilityWithAnyUserWhichHasAccessToMyStation_S1()
        {
#line 218
this.VerifySharedReportAccessibilityWithAnyUserWhichHasAccessToMyStation("s1", "stationown@stage.com", "Te$t1234", "Woodridge", "Dont Delete", "Houston", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
