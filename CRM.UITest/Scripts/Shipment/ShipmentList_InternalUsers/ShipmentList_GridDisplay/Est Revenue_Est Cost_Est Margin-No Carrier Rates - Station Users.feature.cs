// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Shipment.ShipmentList_InternalUsers.ShipmentList_GridDisplay
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class EstRevenue_EstCost_EstMargin_NoCarrierRates_StationUsersFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Est Revenue_Est Cost_Est Margin-No Carrier Rates - Station Users.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Est Revenue_Est Cost_Est Margin-No Carrier Rates - Station Users", null, ProgrammingLanguage.CSharp, new string[] {
                        "29496",
                        "Sprint70",
                        "GUI"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Est Revenue_Est Cost_Est Margin-No Carrier Rates - Station Users")))
            {
                CRM.UITest.Scripts.Shipment.ShipmentList_InternalUsers.ShipmentList_GridDisplay.EstRevenue_EstCost_EstMargin_NoCarrierRates_StationUsersFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyTheEstRevenueEstCostAndEstMarginFieldsWhenShipmentDoesNotHaveCarrierRatesOnTheShipmentListPage(string scenario, string username, string password, string shipmentList_Header, string refNoWithoutRates, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Est Revenue,Est Cost and Est Margin fields when shipment does not have" +
                    " carrier rates on the shipment list page", exampleTags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0} {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
testRunner.And("I click on the Shipment icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
testRunner.When(string.Format("I enter the \'{0}\' in Reference Number lookup", refNoWithoutRates), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
testRunner.And("I click on search arrow of Reference Number lookup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
testRunner.Then(string.Format("I should see results for the entered reference numbers \'{0}\'", refNoWithoutRates), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
testRunner.Then("the Est Revenue,Est Cost and Est Margin fields should be displayed as N/A", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Est Revenue,Est Cost and Est Margin fields when shipment does not have" +
            " carrier rates on the shipment list page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Est Revenue_Est Cost_Est Margin-No Carrier Rates - Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29496")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmOperation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentList_Header", "Shipment List")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RefNoWithoutRates", "ZZX00206577")]
        public virtual void VerifyTheEstRevenueEstCostAndEstMarginFieldsWhenShipmentDoesNotHaveCarrierRatesOnTheShipmentListPage_S1()
        {
            this.VerifyTheEstRevenueEstCostAndEstMarginFieldsWhenShipmentDoesNotHaveCarrierRatesOnTheShipmentListPage("s1", "crmOperation", "Te$t1234", "Shipment List", "ZZX00206577", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
