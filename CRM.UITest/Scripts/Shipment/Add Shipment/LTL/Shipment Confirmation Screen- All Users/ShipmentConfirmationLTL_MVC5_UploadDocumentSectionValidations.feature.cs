// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Shipment.AddShipment.LTL.ShipmentConfirmationScreen_AllUsers
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
    public partial class ShipmentConfirmationLTL_MVC5_UploadDocumentSectionValidationsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "ShipmentConfirmationLTL_MVC5_UploadDocumentSectionValidations.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ShipmentConfirmationLTL_MVC5_UploadDocumentSectionValidations", null, ProgrammingLanguage.CSharp, new string[] {
                        "32163",
                        "Sprint71",
                        "Ignore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "ShipmentConfirmationLTL_MVC5_UploadDocumentSectionValidations")))
            {
                global::CRM.UITest.Scripts.Shipment.AddShipment.LTL.ShipmentConfirmationScreen_AllUsers.ShipmentConfirmationLTL_MVC5_UploadDocumentSectionValidationsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _32163_VerifyTheErrorMessageWhenUserTriedToUploadTheInvalidFileFormat(
                    string usertype, 
                    string oAdd2, 
                    string oZip, 
                    string oName, 
                    string oAdd1, 
                    string dAdd2, 
                    string dName, 
                    string dAdd1, 
                    string customer_Name, 
                    string oComments, 
                    string dComments, 
                    string dZip, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string desc, 
                    string invalidfilepath, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32163_Verify the error message when user tried to upload the invalid file format", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given("I am a shp.entry, operations, sales, sales management or station user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.And(string.Format("I am on the Shipment Confirmation (LTL) page  {0}, {1}, {2},{3}, {4}, {5},{6},{7}" +
                        ",{8}, {9},{10}, {11}, {12},{13}, {14}, {15}, {16}", usertype, oAdd2, oZip, oName, oAdd1, dAdd2, dName, dAdd1, customer_Name, oComments, dComments, dZip, classification, nmfc, quantity, weight, desc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
testRunner.When(string.Format("I am uploading the invalid file {0}", invalidfilepath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
testRunner.Then("I should be displayed with an error message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
testRunner.And("the file should not get uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32163_Verify the error message when user tried to upload the invalid file format:" +
            " External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentConfirmationLTL_MVC5_UploadDocumentSectionValidations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("32163")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint71")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oAdd2", "sdwd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oName", "OrName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oAdd1", "OrAddress")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dAdd2", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dName", "DeName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dAdd1", "DeAddress")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oComments", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dComments", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "55")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "qaz123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "57")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:desc", "desc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:invalidfilepath", "../../Scripts/TestData/Testfiles_confirmationupload/1.tif")]
        public virtual void _32163_VerifyTheErrorMessageWhenUserTriedToUploadTheInvalidFileFormat_External()
        {
#line 5
this._32163_VerifyTheErrorMessageWhenUserTriedToUploadTheInvalidFileFormat("External", "sdwd", "60606", "OrName", "OrAddress", "", "DeName", "DeAddress", "", "", "", "60606", "55", "qaz123", "5", "57", "desc", "../../Scripts/TestData/Testfiles_confirmationupload/1.tif", ((string[])(null)));
#line hidden
        }
        
        public virtual void _32163_VerifyTheErrorMessageWhenUserTriedToEnterMoreThan70CharactersAsFileName(
                    string usertype, 
                    string oAdd2, 
                    string oZip, 
                    string oName, 
                    string oAdd1, 
                    string dAdd2, 
                    string dName, 
                    string dAdd1, 
                    string customer_Name, 
                    string oComments, 
                    string dComments, 
                    string dZip, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string desc, 
                    string invalidfilepath, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32163_Verify the error message when user tried to enter more than 70 characters a" +
                    "s file name", @__tags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
testRunner.Given("I am a shp.entry, operations, sales, sales management or station user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
testRunner.And(string.Format("I am on the Shipment Confirmation (LTL) page  {0}, {1}, {2},{3}, {4}, {5},{6},{7}" +
                        ",{8}, {9},{10}, {11}, {12},{13}, {14}, {15}, {16}", usertype, oAdd2, oZip, oName, oAdd1, dAdd2, dName, dAdd1, customer_Name, oComments, dComments, dZip, classification, nmfc, quantity, weight, desc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
testRunner.When(string.Format("I upload the invalid file with name conatins more than the limit {0}", invalidfilepath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
testRunner.Then("I should be displayed with an error message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32163_Verify the error message when user tried to enter more than 70 characters a" +
            "s file name: External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentConfirmationLTL_MVC5_UploadDocumentSectionValidations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("32163")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint71")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oAdd2", "asd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oZip", "77006")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oName", "OName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oAdd1", "OAddress")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dAdd2", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dName", "DName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dAdd1", "Daddress")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oComments", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dComments", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dZip", "60490")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "55")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "q123asd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:desc", "desc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:invalidfilepath", "../../Scripts/TestData/Testfiles_confirmationupload/Testinginvalidddddddddddddddd" +
            "dddddddddddddd6788999999999999999sssssssssseeeeeeeeeeedtyrtrt.xlsx")]
        public virtual void _32163_VerifyTheErrorMessageWhenUserTriedToEnterMoreThan70CharactersAsFileName_External()
        {
#line 17
this._32163_VerifyTheErrorMessageWhenUserTriedToEnterMoreThan70CharactersAsFileName("External", "asd", "77006", "OName", "OAddress", "", "DName", "Daddress", "", "", "", "60490", "55", "q123asd", "1", "1", "desc", "../../Scripts/TestData/Testfiles_confirmationupload/Testinginvalidddddddddddddddd" +
                    "dddddddddddddd6788999999999999999sssssssssseeeeeeeeeeedtyrtrt.xlsx", ((string[])(null)));
#line hidden
        }
        
        public virtual void _32163_VerifyTheErrorMessageWhenUserTriedToUploadTheFileWithMoreThanGivenSize(
                    string usertype, 
                    string oAdd2, 
                    string oZip, 
                    string oName, 
                    string oAdd1, 
                    string dAdd2, 
                    string dName, 
                    string dAdd1, 
                    string customer_Name, 
                    string oComments, 
                    string dComments, 
                    string dZip, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string desc, 
                    string invalidfilepath, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32163_Verify the error message when user tried to upload the file with more than " +
                    "given size", @__tags);
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
testRunner.Given("I am a shp.entry, operations, sales, sales management or station user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
testRunner.And(string.Format("I am on the Shipment Confirmation (LTL) page  {0}, {1}, {2},{3}, {4}, {5},{6},{7}" +
                        ",{8}, {9},{10}, {11}, {12},{13}, {14}, {15}, {16}", usertype, oAdd2, oZip, oName, oAdd1, dAdd2, dName, dAdd1, customer_Name, oComments, dComments, dZip, classification, nmfc, quantity, weight, desc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
testRunner.When(string.Format("I tried to upload the invalid file with the limit of more than ten MB {0}", invalidfilepath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
testRunner.Then("I should be displayed with an error message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
testRunner.And("the file should not get uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32163_Verify the error message when user tried to upload the file with more than " +
            "given size: External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentConfirmationLTL_MVC5_UploadDocumentSectionValidations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("32163")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint71")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oAdd2", "asd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oName", "OName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oAdd1", "OAddress")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dAdd2", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dName", "DName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dAdd1", "Daddress")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oComments", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dComments", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dZip", "74464")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "55")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "q123asd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:desc", "desc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:invalidfilepath", "../../Scripts/TestData/Testfiles_confirmationupload/Edited_v3.mp3")]
        public virtual void _32163_VerifyTheErrorMessageWhenUserTriedToUploadTheFileWithMoreThanGivenSize_External()
        {
#line 28
this._32163_VerifyTheErrorMessageWhenUserTriedToUploadTheFileWithMoreThanGivenSize("External", "asd", "60606", "OName", "OAddress", "", "DName", "Daddress", "", "", "", "74464", "55", "q123asd", "1", "1", "desc", "../../Scripts/TestData/Testfiles_confirmationupload/Edited_v3.mp3", ((string[])(null)));
#line hidden
        }
        
        public virtual void _32163_VerifyTheUploadFunctionalityWhenUserUploadedValidFiles(
                    string usertype, 
                    string oAdd2, 
                    string oZip, 
                    string oName, 
                    string oAdd1, 
                    string dAdd2, 
                    string dName, 
                    string dAdd1, 
                    string customer_Name, 
                    string oComments, 
                    string dComments, 
                    string dZip, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string desc, 
                    string validfilepath, 
                    string filename, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32163_Verify the upload functionality when user uploaded valid files", @__tags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
testRunner.Given("I am a shp.entry, operations, sales, sales management or station user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
testRunner.And(string.Format("I am on the Shipment Confirmation (LTL) page  {0}, {1}, {2},{3}, {4}, {5},{6},{7}" +
                        ",{8}, {9},{10}, {11}, {12},{13}, {14}, {15}, {16}", usertype, oAdd2, oZip, oName, oAdd1, dAdd2, dName, dAdd1, customer_Name, oComments, dComments, dZip, classification, nmfc, quantity, weight, desc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
testRunner.When(string.Format("I am uploading valid file {0}", validfilepath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
testRunner.Then(string.Format("files should get uploaded {0}", filename), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
testRunner.And(string.Format("remove uploaded file {0}", filename), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32163_Verify the upload functionality when user uploaded valid files: External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentConfirmationLTL_MVC5_UploadDocumentSectionValidations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("32163")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint71")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oAdd2", "asd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oName", "OName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oAdd1", "OAddress")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dAdd2", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dName", "DName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dAdd1", "Daddress")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oComments", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dComments", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "55")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "q123asd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:desc", "desc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:validfilepath", "../../Scripts/TestData/Testfiles_confirmationupload/ErrorMessagesSwa.docx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:filename", "ErrorMessagesSwa.docx")]
        public virtual void _32163_VerifyTheUploadFunctionalityWhenUserUploadedValidFiles_External()
        {
#line 40
this._32163_VerifyTheUploadFunctionalityWhenUserUploadedValidFiles("External", "asd", "60606", "OName", "OAddress", "", "DName", "Daddress", "", "", "", "60606", "55", "q123asd", "1", "1", "desc", "../../Scripts/TestData/Testfiles_confirmationupload/ErrorMessagesSwa.docx", "ErrorMessagesSwa.docx", ((string[])(null)));
#line hidden
        }
        
        public virtual void _32163_VerifyTheUploadFunctionalityWhenUserTriedToUploadMoreThanTheMaxLimitOfValidFiles(
                    string usertype, 
                    string oAdd2, 
                    string oZip, 
                    string oName, 
                    string oAdd1, 
                    string dAdd2, 
                    string dName, 
                    string dAdd1, 
                    string customer_Name, 
                    string oComments, 
                    string dComments, 
                    string dZip, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string desc, 
                    string files, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32163_Verify the upload functionality when user tried to upload more than the max" +
                    " limit of valid files", @__tags);
#line 52
this.ScenarioSetup(scenarioInfo);
#line 53
testRunner.Given("I am a shp.entry, operations, sales, sales management or station user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
testRunner.And(string.Format("I am on the Shipment Confirmation (LTL) page  {0}, {1}, {2},{3}, {4}, {5},{6},{7}" +
                        ",{8}, {9},{10}, {11}, {12},{13}, {14}, {15}, {16}", usertype, oAdd2, oZip, oName, oAdd1, dAdd2, dName, dAdd1, customer_Name, oComments, dComments, dZip, classification, nmfc, quantity, weight, desc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
testRunner.When(string.Format("I am uploading valid files more than the limit {0}", files), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
testRunner.Then("I should be displayed with an error message of Maximum file limit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
testRunner.And("The files will not be uploaded when they are greater than ten in count", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
testRunner.And(string.Format("remove files from docrepodb after the execution \'{0}\'", files), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32163_Verify the upload functionality when user tried to upload more than the max" +
            " limit of valid files: External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentConfirmationLTL_MVC5_UploadDocumentSectionValidations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("32163")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint71")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oAdd2", "wduewif")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oName", "OName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oAdd1", "OAddress")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dAdd2", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dName", "DName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dAdd1", "Daddress")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oComments", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dComments", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "ii7678")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:desc", "desc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:files", "2016 year in review.pdf,Book1.xls,ClaimsforShipment.PNG,Email BOL_Email.pdf,Error" +
            "MessagesSwa.docx,Tulips.jpg,image.jpg,image001.png,clarification.png,testiiiiiii" +
            "ngCon.doc,Upload Document Errors.docx")]
        public virtual void _32163_VerifyTheUploadFunctionalityWhenUserTriedToUploadMoreThanTheMaxLimitOfValidFiles_External()
        {
#line 52
this._32163_VerifyTheUploadFunctionalityWhenUserTriedToUploadMoreThanTheMaxLimitOfValidFiles("External", "wduewif", "33126", "OName", "OAddress", "", "DName", "Daddress", "", "", "", "60606", "65", "ii7678", "4", "10", "desc", "2016 year in review.pdf,Book1.xls,ClaimsforShipment.PNG,Email BOL_Email.pdf,Error" +
                    "MessagesSwa.docx,Tulips.jpg,image.jpg,image001.png,clarification.png,testiiiiiii" +
                    "ngCon.doc,Upload Document Errors.docx", ((string[])(null)));
#line hidden
        }
        
        public virtual void _32163_VerifyTheDuplicateFileUploadFunctionality(
                    string usertype, 
                    string oAdd2, 
                    string oZip, 
                    string oName, 
                    string oAdd1, 
                    string dAdd2, 
                    string dName, 
                    string dAdd1, 
                    string customer_Name, 
                    string oComments, 
                    string dComments, 
                    string dZip, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string desc, 
                    string validfilepath, 
                    string filename, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32163_Verify the Duplicate file upload functionality", @__tags);
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
testRunner.Given("I am a shp.entry, operations, sales, sales management or station user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
testRunner.And(string.Format("I am on the Shipment Confirmation (LTL) page  {0}, {1}, {2},{3}, {4}, {5},{6},{7}" +
                        ",{8}, {9},{10}, {11}, {12},{13}, {14}, {15}, {16}", usertype, oAdd2, oZip, oName, oAdd1, dAdd2, dName, dAdd1, customer_Name, oComments, dComments, dZip, classification, nmfc, quantity, weight, desc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
testRunner.When(string.Format("I upload the valid file {0}", validfilepath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
testRunner.And(string.Format("Again i am trying to upload the same file with same name in CRM {0}", validfilepath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
testRunner.Then("I should be displayed with an error message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 71
testRunner.And(string.Format("the file that was previously uploaded in CRM will not be uploaded {0}", filename), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
testRunner.And(string.Format("remove uploaded file \'{0}\'", filename), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32163_Verify the Duplicate file upload functionality: External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentConfirmationLTL_MVC5_UploadDocumentSectionValidations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("32163")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint71")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oAdd2", "wduewif")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oName", "OName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oAdd1", "OAddress")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dAdd2", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dName", "DName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dAdd1", "Daddress")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:oComments", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dComments", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "ii7678")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:desc", "desc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:validfilepath", "../../Scripts/TestData/Testfiles_confirmationupload/Upload Document Errors.docx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:filename", "Upload Document Errors.docx")]
        public virtual void _32163_VerifyTheDuplicateFileUploadFunctionality_External()
        {
#line 65
this._32163_VerifyTheDuplicateFileUploadFunctionality("External", "wduewif", "33126", "OName", "OAddress", "", "DName", "Daddress", "", "", "", "60606", "65", "ii7678", "4", "10", "desc", "../../Scripts/TestData/Testfiles_confirmationupload/Upload Document Errors.docx", "Upload Document Errors.docx", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
