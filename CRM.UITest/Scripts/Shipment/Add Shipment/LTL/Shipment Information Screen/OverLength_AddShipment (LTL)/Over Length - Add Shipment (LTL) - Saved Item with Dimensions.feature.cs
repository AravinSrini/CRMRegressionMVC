// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Shipment.AddShipment.LTL.ShipmentInformationScreen.OverLength_AddShipmentLTL
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class OverLength_AddShipmentLTL_SavedItemWithDimensionsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Over Length - Add Shipment (LTL) - Saved Item with Dimensions.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Over Length - Add Shipment (LTL) - Saved Item with Dimensions", null, ProgrammingLanguage.CSharp, new string[] {
                        "OverLenght_AddShipment_LTL_SavedItemWithDimensions",
                        "40831",
                        "Sprint81"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Over Length - Add Shipment (LTL) - Saved Item with Dimensions")))
            {
                global::CRM.UITest.Scripts.Shipment.AddShipment.LTL.ShipmentInformationScreen.OverLength_AddShipmentLTL.OverLength_AddShipmentLTL_SavedItemWithDimensionsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _40831_VerifyTheDimensionsAndDimensionTypeValuesForSelectedSavedItemContainingCMOrMeter(string dimension, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40831_Verify the dimensions and dimension type values for selected saved item con" +
                    "taining CM or Meter", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
testRunner.Given("I am a shp.entry, shp.entrynorates, sales, sales management, operations, or stati" +
                    "on owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
testRunner.And("I navigate to the Add Shipment (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
testRunner.When(string.Format("I have selected a saved item of dimension type with values of following {0} : CM " +
                        "or Meter", dimension), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
testRunner.Then("The following dimension fields will be blank: Length, width, Height", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
testRunner.And("The dimension type will be defaulted to - IN", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40831_Verify the dimensions and dimension type values for selected saved item con" +
            "taining CM or Meter: CM")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Add Shipment (LTL) - Saved Item with Dimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OverLenght_AddShipment_LTL_SavedItemWithDimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40831")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CM")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dimension", "CM")]
        public virtual void _40831_VerifyTheDimensionsAndDimensionTypeValuesForSelectedSavedItemContainingCMOrMeter_CM()
        {
#line 7
this._40831_VerifyTheDimensionsAndDimensionTypeValuesForSelectedSavedItemContainingCMOrMeter("CM", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40831_Verify the dimensions and dimension type values for selected saved item con" +
            "taining CM or Meter: METER")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Add Shipment (LTL) - Saved Item with Dimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OverLenght_AddShipment_LTL_SavedItemWithDimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40831")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "METER")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dimension", "METER")]
        public virtual void _40831_VerifyTheDimensionsAndDimensionTypeValuesForSelectedSavedItemContainingCMOrMeter_METER()
        {
#line 7
this._40831_VerifyTheDimensionsAndDimensionTypeValuesForSelectedSavedItemContainingCMOrMeter("METER", ((string[])(null)));
#line hidden
        }
        
        public virtual void _40831_VerifyTheDimensionsAndDimensionTypeValuesWhenCustomerIsHavingDefaultItemContainingCMOrMeter(string dimension, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40831_Verify the dimensions and dimension type values when customer is having def" +
                    "ault item containing CM or Meter", @__tags);
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
testRunner.Given("I am a shp.entry, shp.entrynorates, sales, sales management, operations, or stati" +
                    "on owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
testRunner.And("I navigate to the Add Shipment (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
testRunner.When(string.Format("The customer has a default item of dimensions type with values of following {0} :" +
                        " CM or Meter", dimension), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
testRunner.Then("The following dimension fields will be blank: Length, width, Height", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
testRunner.And("The dimension type will be defaulted to - IN", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40831_Verify the dimensions and dimension type values when customer is having def" +
            "ault item containing CM or Meter: CM")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Add Shipment (LTL) - Saved Item with Dimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OverLenght_AddShipment_LTL_SavedItemWithDimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40831")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CM")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dimension", "CM")]
        public virtual void _40831_VerifyTheDimensionsAndDimensionTypeValuesWhenCustomerIsHavingDefaultItemContainingCMOrMeter_CM()
        {
#line 22
this._40831_VerifyTheDimensionsAndDimensionTypeValuesWhenCustomerIsHavingDefaultItemContainingCMOrMeter("CM", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40831_Verify the dimensions and dimension type values when customer is having def" +
            "ault item containing CM or Meter: METER")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Add Shipment (LTL) - Saved Item with Dimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OverLenght_AddShipment_LTL_SavedItemWithDimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40831")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "METER")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dimension", "METER")]
        public virtual void _40831_VerifyTheDimensionsAndDimensionTypeValuesWhenCustomerIsHavingDefaultItemContainingCMOrMeter_METER()
        {
#line 22
this._40831_VerifyTheDimensionsAndDimensionTypeValuesWhenCustomerIsHavingDefaultItemContainingCMOrMeter("METER", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40831_Verify the Length, Width, Height dimension fields when saved item included " +
            "dimension type is IN")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Add Shipment (LTL) - Saved Item with Dimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OverLenght_AddShipment_LTL_SavedItemWithDimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40831")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        public virtual void _40831_VerifyTheLengthWidthHeightDimensionFieldsWhenSavedItemIncludedDimensionTypeIsIN()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40831_Verify the Length, Width, Height dimension fields when saved item included " +
                    "dimension type is IN", ((string[])(null)));
#line 34
this.ScenarioSetup(scenarioInfo);
#line 35
testRunner.Given("I am a shp.entry, shp.entrynorates, sales, sales management, operations, or stati" +
                    "on owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
testRunner.And("I navigate to the Add Shipment (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
testRunner.When("I have selected a saved item of dimension type of <IN> values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
testRunner.Then("Length, Width, Height dimension fields will get bind and dimension type should be" +
                    " <IN> type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40831_Verify the Length, Width, Height dimension fields when saved item included " +
            "dimension type is FT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Add Shipment (LTL) - Saved Item with Dimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OverLenght_AddShipment_LTL_SavedItemWithDimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40831")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        public virtual void _40831_VerifyTheLengthWidthHeightDimensionFieldsWhenSavedItemIncludedDimensionTypeIsFT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40831_Verify the Length, Width, Height dimension fields when saved item included " +
                    "dimension type is FT", ((string[])(null)));
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
testRunner.Given("I am a shp.entry, shp.entrynorates, sales, sales management, operations, or stati" +
                    "on owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
testRunner.And("I navigate to the Add Shipment (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
testRunner.When("I have selected a saved item of dimension type of <FT> values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
testRunner.Then("Length, Width, Height dimension fields will get bind and dimension type should be" +
                    " <FT> type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40831_Verify the Length, Width, Height dimension fields when default saved item i" +
            "ncluded dimension type is IN")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Add Shipment (LTL) - Saved Item with Dimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OverLenght_AddShipment_LTL_SavedItemWithDimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40831")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        public virtual void _40831_VerifyTheLengthWidthHeightDimensionFieldsWhenDefaultSavedItemIncludedDimensionTypeIsIN()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40831_Verify the Length, Width, Height dimension fields when default saved item i" +
                    "ncluded dimension type is IN", ((string[])(null)));
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
testRunner.Given("I am a shp.entry, shp.entrynorates, sales, sales management, operations, or stati" +
                    "on owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
testRunner.And("I navigate to the Add Shipment (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
testRunner.When("the customer has a default item of dimensions type of <IN> values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
testRunner.Then("Length, Width, Height dimension fields will get bind and dimension type should be" +
                    " <IN> type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40831_Verify the Length, Width, Height dimension fields when default saved item i" +
            "ncluded dimension type is FT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Add Shipment (LTL) - Saved Item with Dimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OverLenght_AddShipment_LTL_SavedItemWithDimensions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40831")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        public virtual void _40831_VerifyTheLengthWidthHeightDimensionFieldsWhenDefaultSavedItemIncludedDimensionTypeIsFT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40831_Verify the Length, Width, Height dimension fields when default saved item i" +
                    "ncluded dimension type is FT", ((string[])(null)));
#line 52
this.ScenarioSetup(scenarioInfo);
#line 53
testRunner.Given("I am a shp.entry, shp.entrynorates, sales, sales management, operations, or stati" +
                    "on owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
testRunner.And("I navigate to the Add Shipment (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
testRunner.When("the customer has a default item of dimensions type of <FT> values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
testRunner.Then("Length, Width, Height dimension fields will get bind and dimension type should be" +
                    " <FT> type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
