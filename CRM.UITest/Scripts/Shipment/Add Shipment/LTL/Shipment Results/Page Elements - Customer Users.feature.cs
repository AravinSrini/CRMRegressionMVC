// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Shipment.AddShipment.LTL.ShipmentResults
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class PageElements_CustomerUsersFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Page Elements - Customer Users.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Page Elements - Customer Users", null, ProgrammingLanguage.CSharp, new string[] {
                        "PageElementCustomerFeature",
                        "Sprint69",
                        "28074",
                        "GUI"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Page Elements - Customer Users")))
            {
                CRM.UITest.Scripts.Shipment.AddShipment.LTL.ShipmentResults.PageElements_CustomerUsersFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyThePresenceOfInsuredValueNoteInsuredRateInsuredTypeField(
                    string scenario, 
                    string username, 
                    string password, 
                    string oName, 
                    string oAddress1, 
                    string oZip, 
                    string dName, 
                    string dAddress1, 
                    string dZip, 
                    string nMFC, 
                    string description, 
                    string quantity, 
                    string weight, 
                    string _Note, 
                    string classification, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Insured value Note,Insured rate,Insured Type field", exampleTags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
testRunner.And("I click on Add Shipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
testRunner.And("I will be navigated to Add Shipment Tiles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
testRunner.And("I Click on LTL Tile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
testRunner.And("I will be navigated to Add Shipment LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
testRunner.And(string.Format("I enter {0} {1} {2} in shipping from location info section present in add shipmen" +
                        "t page", oZip, oName, oAddress1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
testRunner.And(string.Format("I enter {0} {1} {2} in shipping from location info section present in add shipmen" +
                        "t page", dZip, dName, dAddress1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
testRunner.And(string.Format("I enter data in {0},  {1} , {2},  {3} and {4} freight description present in add " +
                        "shipment page", classification, nMFC, quantity, description, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
testRunner.And("I click on View rates button in add shipment ltl page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
testRunner.Then(string.Format("I will be able to see Insured value Note{0} and Insured rate and Insured Type fie" +
                        "ld", _Note), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Insured value Note,Insured rate,Insured Type field: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Page Elements - Customer Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PageElementCustomerFeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("28074")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzzext")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OName", "Oname")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OAddress1", "Oadd1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DName", "Dname")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DAddress1", "Dadd1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NMFC", "1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "des")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_note", "Note: To receive Insured Rate options, you must provide a insured value below:")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        public virtual void VerifyThePresenceOfInsuredValueNoteInsuredRateInsuredTypeField_S1()
        {
            this.VerifyThePresenceOfInsuredValueNoteInsuredRateInsuredTypeField("S1", "zzzext", "Te$t1234", "Oname", "Oadd1", "60606", "Dname", "Dadd1", "60606", "1234", "des", "1", "3", "Note: To receive Insured Rate options, you must provide a insured value below:", "50", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfFilterCarriersByLabelQuickestServiceAndLeastCostRadioButton(
                    string scenario, 
                    string username, 
                    string password, 
                    string oName, 
                    string oAddress1, 
                    string oZip, 
                    string dName, 
                    string dAddress1, 
                    string dZip, 
                    string nMFC, 
                    string description, 
                    string quantity, 
                    string weight, 
                    string classification, 
                    string _FilterCarriersBy_Text, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Filter Carriers By label, Quickest Service and Least Cost " +
                    "Radio button", exampleTags);
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 25
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
testRunner.And("I click on Add Shipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
testRunner.And("I will be navigated to Add Shipment Tiles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
testRunner.And("I Click on LTL Tile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
testRunner.And("I will be navigated to Add Shipment LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
testRunner.And(string.Format("I enter {0} {1} {2} in shipping from location info section present in add shipmen" +
                        "t page", oZip, oName, oAddress1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
testRunner.And(string.Format("I enter {0} {1} {2} in shipping from location info section present in add shipmen" +
                        "t page", dZip, dName, dAddress1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
testRunner.And(string.Format("I enter data in {0},  {1} , {2},  {3} and {4} freight description present in add " +
                        "shipment page", classification, nMFC, quantity, description, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
testRunner.And("I click on View rates button in add shipment ltl page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
testRunner.Then(string.Format("I will be able to see Filter Carriers By label{0} Quickest Service and Least Cost" +
                        " Radio button", _FilterCarriersBy_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Filter Carriers By label, Quickest Service and Least Cost " +
            "Radio button: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Page Elements - Customer Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PageElementCustomerFeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("28074")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzzext")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OName", "Oname")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OAddress1", "Oadd1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DName", "Dname")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DAddress1", "Dadd1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NMFC", "1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "des")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_filterCarriersBy_Text", "Filter Carriers By:")]
        public virtual void VerifyThePresenceOfFilterCarriersByLabelQuickestServiceAndLeastCostRadioButton_S1()
        {
            this.VerifyThePresenceOfFilterCarriersByLabelQuickestServiceAndLeastCostRadioButton("S1", "zzzext", "Te$t1234", "Oname", "Oadd1", "60606", "Dname", "Dadd1", "60606", "1234", "des", "1", "3", "50", "Filter Carriers By:", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfGridColumnWithSortButton(string scenario, string username, string password, string oName, string oAddress1, string oZip, string dName, string dAddress1, string dZip, string nMFC, string description, string quantity, string weight, string classification, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Grid Column with Sort button", exampleTags);
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
testRunner.And("I click on Add Shipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
testRunner.And("I will be navigated to Add Shipment Tiles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
testRunner.And("I Click on LTL Tile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
testRunner.And("I will be navigated to Add Shipment LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
testRunner.And(string.Format("I enter {0} {1} {2} in shipping from location info section present in add shipmen" +
                        "t page", oZip, oName, oAddress1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
testRunner.And(string.Format("I enter {0} {1} {2} in shipping from location info section present in add shipmen" +
                        "t page", dZip, dName, dAddress1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
testRunner.And(string.Format("I enter data in {0},  {1} , {2},  {3} and {4} freight description present in add " +
                        "shipment page", classification, nMFC, quantity, description, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.And("I click on View rates button in add shipment ltl page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
testRunner.Then("I will be able to see Carrier, Service Days, Distance, Rate columns and insured r" +
                    "ate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Grid Column with Sort button: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Page Elements - Customer Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PageElementCustomerFeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("28074")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzzext")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OName", "Oname")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OAddress1", "Oadd1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DName", "Dname")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DAddress1", "Dadd1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NMFC", "1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "des")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        public virtual void VerifyThePresenceOfGridColumnWithSortButton_S1()
        {
            this.VerifyThePresenceOfGridColumnWithSortButton("S1", "zzzext", "Te$t1234", "Oname", "Oadd1", "60606", "Dname", "Dadd1", "60606", "1234", "des", "1", "3", "50", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfShowInsuredRateTermsAndConditionsCreateShipmentCreateInsuredShipmentExportAndBackToShipmentListButtons(
                    string scenario, 
                    string username, 
                    string password, 
                    string oName, 
                    string oAddress1, 
                    string oZip, 
                    string dName, 
                    string dAddress1, 
                    string dZip, 
                    string nMFC, 
                    string description, 
                    string quantity, 
                    string weight, 
                    string classification, 
                    string insuredRate, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Show Insured Rate, Terms and Conditions, Create Shipment,C" +
                    "reate Insured Shipment, Export and Back to Shipment List buttons", exampleTags);
#line 59
this.ScenarioSetup(scenarioInfo);
#line 60
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
testRunner.And("I click on Add Shipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
testRunner.And("I will be navigated to Add Shipment Tiles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
testRunner.And("I Click on LTL Tile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
testRunner.And("I will be navigated to Add Shipment LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
testRunner.And(string.Format("I enter {0} {1} {2} in shipping from location info section present in add shipmen" +
                        "t page", oZip, oName, oAddress1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
testRunner.And(string.Format("I enter {0} {1} {2} in shipping from location info section present in add shipmen" +
                        "t page", dZip, dName, dAddress1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
testRunner.And(string.Format("I enter data in {0},  {1} , {2},  {3} and {4} freight description present in add " +
                        "shipment page", classification, nMFC, quantity, description, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
testRunner.And(string.Format("I pass {0} in shipment information page", insuredRate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
testRunner.And("I click on View rates button in add shipment ltl page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
testRunner.Then("I will see Show Insured Rate, Terms and Conditions, Create Shipment,Create Insure" +
                    "d Shipment, Export and Back to Shipment List buttons", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Show Insured Rate, Terms and Conditions, Create Shipment,C" +
            "reate Insured Shipment, Export and Back to Shipment List buttons: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Page Elements - Customer Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PageElementCustomerFeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("28074")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzzext")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OName", "Oname")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OAddress1", "Oadd1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DName", "Dname")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DAddress1", "Dadd1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NMFC", "1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "des")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredRate", "1")]
        public virtual void VerifyThePresenceOfShowInsuredRateTermsAndConditionsCreateShipmentCreateInsuredShipmentExportAndBackToShipmentListButtons_S1()
        {
            this.VerifyThePresenceOfShowInsuredRateTermsAndConditionsCreateShipmentCreateInsuredShipmentExportAndBackToShipmentListButtons("S1", "zzzext", "Te$t1234", "Oname", "Oadd1", "60606", "Dname", "Dadd1", "60606", "1234", "des", "1", "3", "50", "1", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
