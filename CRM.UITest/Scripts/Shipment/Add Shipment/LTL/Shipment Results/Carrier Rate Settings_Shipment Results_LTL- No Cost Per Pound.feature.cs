// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Shipment.AddShipment.LTL.ShipmentResults
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CarrierRateSettings_ShipmentResults_LTL_NoCostPerPoundFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Carrier Rate Settings_Shipment Results_LTL- No Cost Per Pound.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Carrier Rate Settings_Shipment Results_LTL- No Cost Per Pound", null, ProgrammingLanguage.CSharp, new string[] {
                        "35642",
                        "Sprint74"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Carrier Rate Settings_Shipment Results_LTL- No Cost Per Pound")))
            {
                CRM.UITest.Scripts.Shipment.AddShipment.LTL.ShipmentResults.CarrierRateSettings_ShipmentResults_LTL_NoCostPerPoundFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInShipmentResultsPageWithoutShipmentValue(
                    string scenario, 
                    string username, 
                    string password, 
                    string usertype, 
                    string customerName, 
                    string originName, 
                    string originAddr1, 
                    string originZipcode, 
                    string destinationName, 
                    string destinationAddr1, 
                    string destinationZipcode, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string itemdesc, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Carrier information section functionality when Carrier does not have C" +
                    "ost per Pound values in Shipment Results page without Shipment value", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
    testRunner.Given(string.Format("I am a shp.entry, operations, sales, sales management or station user {0} {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.And(string.Format("I enter data in add shipment ltl page {0}, {1},{2},{3},{4},{5},{6},{7},{8},{9},{1" +
                        "0},{11},{12}", usertype, customerName, originName, originAddr1, originZipcode, destinationName, destinationAddr1, destinationZipcode, classification, nmfc, quantity, weight, itemdesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.When("I click on View rates button in add shipment ltl page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("Verify the labels, fields and verbiage change for the associated carrier on the c" +
                    "arrier information section on Shipment Results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Carrier information section functionality when Carrier does not have C" +
            "ost per Pound values in Shipment Results page without Shipment value: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Carrier Rate Settings_Shipment Results_LTL- No Cost Per Pound")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35642")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint74")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shp.entry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originName", "TestOrigin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originAddr1", "TestOAddr1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originZipcode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationName", "DestName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationAddr1", "TestDAddr1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationZipcode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:itemdesc", "Cost per pound testing")]
        public virtual void VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInShipmentResultsPageWithoutShipmentValue_S1()
        {
            this.VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInShipmentResultsPageWithoutShipmentValue("S1", "shp.entry", "Te$t1234", "", "ZZZ - GS Customer Test", "TestOrigin", "TestOAddr1", "33126", "DestName", "TestDAddr1", "85282", "50", "123", "5", "1000", "Cost per pound testing", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Carrier information section functionality when Carrier does not have C" +
            "ost per Pound values in Shipment Results page without Shipment value: S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Carrier Rate Settings_Shipment Results_LTL- No Cost Per Pound")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35642")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint74")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originName", "TestOrigin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originAddr1", "TestOAddr1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originZipcode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationName", "DestName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationAddr1", "TestDAddr1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationZipcode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:itemdesc", "Cost per pound testing")]
        public virtual void VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInShipmentResultsPageWithoutShipmentValue_S2()
        {
            this.VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInShipmentResultsPageWithoutShipmentValue("S2", "stationown", "Te$t1234", "Internal", "ZZZ - GS Customer Test", "TestOrigin", "TestOAddr1", "33126", "DestName", "TestDAddr1", "85282", "50", "123", "5", "1000", "Cost per pound testing", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInShipmentResultsPageWithShipmentValue(
                    string scenario, 
                    string username, 
                    string password, 
                    string usertype, 
                    string customerName, 
                    string originName, 
                    string originAddr1, 
                    string originZipcode, 
                    string destinationName, 
                    string destinationAddr1, 
                    string destinationZipcode, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string itemdesc, 
                    string insuredValue, 
                    string insuredType, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Carrier information section functionality when Carrier does not have C" +
                    "ost per Pound values in Shipment Results page with Shipment value", @__tags);
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
    testRunner.Given(string.Format("I am a shp.entry, operations, sales, sales management or station user {0} {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
 testRunner.And(string.Format("I enter data in add shipment ltl page {0}, {1},{2},{3},{4},{5},{6},{7},{8},{9},{1" +
                        "0},{11},{12}", usertype, customerName, originName, originAddr1, originZipcode, destinationName, destinationAddr1, destinationZipcode, classification, nmfc, quantity, weight, itemdesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And(string.Format("I enter value in Insured Value {0}", insuredValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And(string.Format("I select the Insured Type from  {0} drop down", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.When("I click on View rates button in add shipment ltl page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("Verify the labels, fields and verbiage change for the associated carrier on the c" +
                    "arrier information section on Shipment Results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Carrier information section functionality when Carrier does not have C" +
            "ost per Pound values in Shipment Results page with Shipment value: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Carrier Rate Settings_Shipment Results_LTL- No Cost Per Pound")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35642")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint74")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shp.entry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originName", "TestOrigin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originAddr1", "TestOAddr1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originZipcode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationName", "DestName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationAddr1", "TestDAddr1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationZipcode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:itemdesc", "Cost per pound testing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValue", "234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInShipmentResultsPageWithShipmentValue_S1()
        {
            this.VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInShipmentResultsPageWithShipmentValue("S1", "shp.entry", "Te$t1234", "", "ZZZ - GS Customer Test", "TestOrigin", "TestOAddr1", "33126", "DestName", "TestDAddr1", "85282", "50", "123", "5", "1000", "Cost per pound testing", "234", "New", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Carrier information section functionality when Carrier does not have C" +
            "ost per Pound values in Shipment Results page with Shipment value: S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Carrier Rate Settings_Shipment Results_LTL- No Cost Per Pound")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35642")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint74")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originName", "TestOrigin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originAddr1", "TestOAddr1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originZipcode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationName", "DestName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationAddr1", "TestDAddr1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationZipcode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:itemdesc", "Cost per pound testing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValue", "234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInShipmentResultsPageWithShipmentValue_S2()
        {
            this.VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInShipmentResultsPageWithShipmentValue("S2", "stationown", "Te$t1234", "Internal", "ZZZ - GS Customer Test", "TestOrigin", "TestOAddr1", "33126", "DestName", "TestDAddr1", "85282", "50", "123", "5", "1000", "Cost per pound testing", "234", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInReviewAndSubmitPageForStandardRates(
                    string scenario, 
                    string username, 
                    string password, 
                    string usertype, 
                    string customerName, 
                    string originName, 
                    string originAddr1, 
                    string originZipcode, 
                    string destinationName, 
                    string destinationAddr1, 
                    string destinationZipcode, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string itemdesc, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Carrier information section functionality when Carrier does not have C" +
                    "ost per Pound values in Review and Submit page for standard rates", @__tags);
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
    testRunner.Given(string.Format("I am a shp.entry, operations, sales, sales management or station user {0} {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
 testRunner.And(string.Format("I enter data in add shipment ltl page {0}, {1},{2},{3},{4},{5},{6},{7},{8},{9},{1" +
                        "0},{11},{12}", usertype, customerName, originName, originAddr1, originZipcode, destinationName, destinationAddr1, destinationZipcode, classification, nmfc, quantity, weight, itemdesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.When("I click on View rates button in add shipment ltl page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.And(string.Format("I select any carrier which is associated with Carrier Rate Settings and click on " +
                        "create shipment button {0}", usertype), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.Then("Verify the labels, fields and verbiage change for the associated carrier on the c" +
                    "arrier information section on Review and Submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Carrier information section functionality when Carrier does not have C" +
            "ost per Pound values in Review and Submit page for standard rates: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Carrier Rate Settings_Shipment Results_LTL- No Cost Per Pound")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35642")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint74")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shp.entry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originName", "TestOrigin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originAddr1", "TestOAddr1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originZipcode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationName", "DestName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationAddr1", "TestDAddr1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationZipcode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:itemdesc", "Cost per pound testing")]
        public virtual void VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInReviewAndSubmitPageForStandardRates_S1()
        {
            this.VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInReviewAndSubmitPageForStandardRates("S1", "shp.entry", "Te$t1234", "", "ZZZ - GS Customer Test", "TestOrigin", "TestOAddr1", "33126", "DestName", "TestDAddr1", "85282", "50", "123", "5", "1000", "Cost per pound testing", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInReviewAndSubmitPageForInsuredRates(
                    string scenario, 
                    string username, 
                    string password, 
                    string usertype, 
                    string customerName, 
                    string originName, 
                    string originAddr1, 
                    string originZipcode, 
                    string destinationName, 
                    string destinationAddr1, 
                    string destinationZipcode, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string itemdesc, 
                    string insuredValue, 
                    string insuredType, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Carrier information section functionality when Carrier does not have C" +
                    "ost per Pound values in Review and Submit page for insured rates", @__tags);
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
    testRunner.Given(string.Format("I am a shp.entry, operations, sales, sales management or station user {0} {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
 testRunner.And(string.Format("I enter data in add shipment ltl page {0}, {1},{2},{3},{4},{5},{6},{7},{8},{9},{1" +
                        "0},{11},{12}", usertype, customerName, originName, originAddr1, originZipcode, destinationName, destinationAddr1, destinationZipcode, classification, nmfc, quantity, weight, itemdesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And(string.Format("I enter value in Insured Value {0}", insuredValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And(string.Format("I select the Insured Type from  {0} drop down", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.When("I click on View rates button in add shipment ltl page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.And(string.Format("I select any carrier which is associated with Carrier Rate Settings and click on " +
                        "create Insured shipment button {0}", usertype), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.Then("Verify the labels, fields and verbiage change for the associated carrier on the c" +
                    "arrier information section on Review and Submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Carrier information section functionality when Carrier does not have C" +
            "ost per Pound values in Review and Submit page for insured rates: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Carrier Rate Settings_Shipment Results_LTL- No Cost Per Pound")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35642")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint74")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shp.entry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originName", "TestOrigin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originAddr1", "TestOAddr1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originZipcode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationName", "DestName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationAddr1", "TestDAddr1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationZipcode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:itemdesc", "Cost per pound testing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInReviewAndSubmitPageForInsuredRates_S1()
        {
            this.VerifyTheCarrierInformationSectionFunctionalityWhenCarrierDoesNotHaveCostPerPoundValuesInReviewAndSubmitPageForInsuredRates("S1", "shp.entry", "Te$t1234", "", "ZZZ - GS Customer Test", "TestOrigin", "TestOAddr1", "33126", "DestName", "TestDAddr1", "85282", "50", "123", "5", "1000", "Cost per pound testing", "100", "New", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
