// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Shipment.AddShipment.LTL.ShipmentResults
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class LiabilityCoverage_VerbiageChange_ShipmentsResultsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "LiabilityCoverage_VerbiageChange.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "LiabilityCoverage_VerbiageChange_ShipmentsResults", null, ProgrammingLanguage.CSharp, new string[] {
                        "ShipmentResultsLiabilityCoverageVerbiageChange",
                        "29167",
                        "Sprint70"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "LiabilityCoverage_VerbiageChange_ShipmentsResults")))
            {
                global::CRM.UITest.Scripts.Shipment.AddShipment.LTL.ShipmentResults.LiabilityCoverage_VerbiageChange_ShipmentsResultsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyTheNewVerbiageAboveTheCostPerPoundNewAndUsedFieldsInTheShipmentResultsForTheStandardRates(
                    string scenario, 
                    string username, 
                    string password, 
                    string usertype, 
                    string customerName, 
                    string originName, 
                    string originAddr1, 
                    string originZipcode, 
                    string destinationName, 
                    string destinationAddr1, 
                    string destinationZipcode, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string itemdesc, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the new Verbiage above the Cost per Pound New and Used fields in the Shipm" +
                    "ent Results for the standard rates", @__tags);
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given(string.Format("I am a shp.entry, operations, sales, sales management or station user {0} {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.And(string.Format("I enter data in add shipment ltl page {0}, {1},{2},{3},{4},{5},{6},{7},{8},{9},{1" +
                        "0},{11},{12}", usertype, customerName, originName, originAddr1, originZipcode, destinationName, destinationAddr1, destinationZipcode, classification, nmfc, quantity, weight, itemdesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.When("I click on View rates button in add shipment ltl page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then("the new verbiage Carrier’s Legal Liability per Pound without Insurance and Carrie" +
                    "r’s Max Liability if Shipment is Not Insured fields should be displayed for carr" +
                    "ier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the new Verbiage above the Cost per Pound New and Used fields in the Shipm" +
            "ent Results for the standard rates: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LiabilityCoverage_VerbiageChange_ShipmentsResults")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentResultsLiabilityCoverageVerbiageChange")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29167")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shp.entry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originName", "test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originAddr1", "Addr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originZipcode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationName", "Testing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationAddr1", "DAddr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationZipcode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:itemdesc", "Itemdesc")]
        public virtual void VerifyTheNewVerbiageAboveTheCostPerPoundNewAndUsedFieldsInTheShipmentResultsForTheStandardRates_S1()
        {
#line 6
this.VerifyTheNewVerbiageAboveTheCostPerPoundNewAndUsedFieldsInTheShipmentResultsForTheStandardRates("S1", "shp.entry", "Te$t1234", "", "", "test", "Addr", "33126", "Testing", "DAddr", "85282", "50", "1234", "5", "1000", "Itemdesc", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the new Verbiage above the Cost per Pound New and Used fields in the Shipm" +
            "ent Results for the standard rates: S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LiabilityCoverage_VerbiageChange_ShipmentsResults")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentResultsLiabilityCoverageVerbiageChange")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29167")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originName", "test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originAddr1", "Addr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originZipcode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationName", "Testing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationAddr1", "DAddr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationZipcode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:itemdesc", "Itemdesc")]
        public virtual void VerifyTheNewVerbiageAboveTheCostPerPoundNewAndUsedFieldsInTheShipmentResultsForTheStandardRates_S2()
        {
#line 6
this.VerifyTheNewVerbiageAboveTheCostPerPoundNewAndUsedFieldsInTheShipmentResultsForTheStandardRates("S2", "stationown", "Te$t1234", "Internal", "ZZZ - GS Customer Test", "test", "Addr", "33126", "Testing", "DAddr", "85282", "50", "1234", "5", "1000", "Itemdesc", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheNewVerbiageAboveCostPerPoundNewAndUsedFieldsInTheShipmentResultsForTheGuaranteedRates(
                    string scenario, 
                    string username, 
                    string password, 
                    string usertype, 
                    string customerName, 
                    string originName, 
                    string originAddr1, 
                    string originZipcode, 
                    string destinationName, 
                    string destinationAddr1, 
                    string destinationZipcode, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string itemdesc, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the new Verbiage above Cost per Pound New and Used fields in the Shipment " +
                    "Results for the Guaranteed rates", @__tags);
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
 testRunner.Given(string.Format("I am a shp.entry, operations, sales, sales management or station user {0} {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
 testRunner.And(string.Format("I enter data in add shipment ltl page {0}, {1},{2},{3},{4},{5},{6},{7},{8},{9},{1" +
                        "0},{11},{12}", usertype, customerName, originName, originAddr1, originZipcode, destinationName, destinationAddr1, destinationZipcode, classification, nmfc, quantity, weight, itemdesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.When("I click on View rates button in add shipment ltl page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.Then("the new verbiage Carrier’s Legal Liability per Pound without Insurance and Carrie" +
                    "r’s Max Liability if Shipment is Not Insured fields should be displayed for carr" +
                    "ier for Guaranteed Rates", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the new Verbiage above Cost per Pound New and Used fields in the Shipment " +
            "Results for the Guaranteed rates: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LiabilityCoverage_VerbiageChange_ShipmentsResults")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentResultsLiabilityCoverageVerbiageChange")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29167")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shp.entry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originName", "test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originAddr1", "test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originZipcode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationName", "fdgf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationAddr1", "Dngtr ame")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationZipcode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:itemdesc", "item")]
        public virtual void VerifyTheNewVerbiageAboveCostPerPoundNewAndUsedFieldsInTheShipmentResultsForTheGuaranteedRates_S1()
        {
#line 19
this.VerifyTheNewVerbiageAboveCostPerPoundNewAndUsedFieldsInTheShipmentResultsForTheGuaranteedRates("S1", "shp.entry", "Te$t1234", "", "", "test", "test", "33126", "fdgf", "Dngtr ame", "85282", "50", "1234", "6", "1000", "item", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the new Verbiage above Cost per Pound New and Used fields in the Shipment " +
            "Results for the Guaranteed rates: S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LiabilityCoverage_VerbiageChange_ShipmentsResults")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentResultsLiabilityCoverageVerbiageChange")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29167")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originName", "test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originAddr1", "Addr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originZipcode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationName", "Testing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationAddr1", "DAddr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationZipcode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:itemdesc", "Itemdesc")]
        public virtual void VerifyTheNewVerbiageAboveCostPerPoundNewAndUsedFieldsInTheShipmentResultsForTheGuaranteedRates_S2()
        {
#line 19
this.VerifyTheNewVerbiageAboveCostPerPoundNewAndUsedFieldsInTheShipmentResultsForTheGuaranteedRates("S2", "stationown", "Te$t1234", "Internal", "ZZZ - GS Customer Test", "test", "Addr", "33126", "Testing", "DAddr", "85282", "50", "1234", "5", "1000", "Itemdesc", ((string[])(null)));
#line hidden
        }
        
        public virtual void _29167_VerifyVerbiageAboveCostPerPoundNewAndUsedFieldsInTheShipmentResultsWhenInsuredTypeIsNewForShipentryUser(
                    string username, 
                    string password, 
                    string usertype, 
                    string customerName, 
                    string originName, 
                    string originAddr1, 
                    string originZipcode, 
                    string destinationName, 
                    string destinationAddr1, 
                    string destinationZipcode, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string itemdesc, 
                    string insuredValue, 
                    string insuredType, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Regression",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("29167-VerifyVerbiage above Cost per Pound New and Used fields in the Shipment Res" +
                    "ults when Insured type is New for shipentry user", @__tags);
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
 testRunner.Given("I login as Ship entry user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 33
 testRunner.And(string.Format("I enter data in add shipment ltl page {0}, {1},{2},{3},{4},{5},{6},{7},{8},{9},{1" +
                        "0},{11},{12}", usertype, customerName, originName, originAddr1, originZipcode, destinationName, destinationAddr1, destinationZipcode, classification, nmfc, quantity, weight, itemdesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And(string.Format("I enter value in Insured Value {0}", insuredValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And(string.Format("I select the Insured Type from  {0} drop down", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.When("I click on View rates button in add shipment ltl page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.Then("the new verbiage Carrier’s Legal Liability per Pound without Insurance and Carrie" +
                    "r’s Max Liability if Shipment is Not Insured fields should be displayed for carr" +
                    "ier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("29167-VerifyVerbiage above Cost per Pound New and Used fields in the Shipment Res" +
            "ults when Insured type is New for shipentry user: ShipEntry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LiabilityCoverage_VerbiageChange_ShipmentsResults")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentResultsLiabilityCoverageVerbiageChange")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29167")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ShipEntry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "ShipEntry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originName", "test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originAddr1", "test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originZipcode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationName", "fdgf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationAddr1", "Dngtr ame")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationZipcode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:itemdesc", "item")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValue", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void _29167_VerifyVerbiageAboveCostPerPoundNewAndUsedFieldsInTheShipmentResultsWhenInsuredTypeIsNewForShipentryUser_ShipEntry()
        {
#line 31
this._29167_VerifyVerbiageAboveCostPerPoundNewAndUsedFieldsInTheShipmentResultsWhenInsuredTypeIsNewForShipentryUser("ShipEntry", "", "", "", "test", "test", "33126", "fdgf", "Dngtr ame", "85282", "50", "1234", "6", "1000", "item", "1000", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyVerbiageAboveCostPerPoundNewAndUsedFieldsInTheShipmentResultsWhenInsuredTypeIsNewForStationowner(
                    string username, 
                    string password, 
                    string usertype, 
                    string customerName, 
                    string originName, 
                    string originAddr1, 
                    string originZipcode, 
                    string destinationName, 
                    string destinationAddr1, 
                    string destinationZipcode, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string itemdesc, 
                    string insuredValue, 
                    string insuredType, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Regression",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VerifyVerbiage above Cost per Pound New and Used fields in the Shipment Results w" +
                    "hen Insured type is New for stationowner", @__tags);
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
 testRunner.Given("I  login into application as StationOwner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
 testRunner.And(string.Format("I enter data in add shipment ltl page {0}, {1},{2},{3},{4},{5},{6},{7},{8},{9},{1" +
                        "0},{11},{12}", usertype, customerName, originName, originAddr1, originZipcode, destinationName, destinationAddr1, destinationZipcode, classification, nmfc, quantity, weight, itemdesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.And(string.Format("I enter value in Insured Value {0}", insuredValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And(string.Format("I select the Insured Type from  {0} drop down", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.When("I click on View rates button in add shipment ltl page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
 testRunner.Then("the new verbiage Carrier’s Legal Liability per Pound without Insurance and Carrie" +
                    "r’s Max Liability if Shipment is Not Insured fields should be displayed for carr" +
                    "ier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("VerifyVerbiage above Cost per Pound New and Used fields in the Shipment Results w" +
            "hen Insured type is New for stationowner: stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LiabilityCoverage_VerbiageChange_ShipmentsResults")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentResultsLiabilityCoverageVerbiageChange")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29167")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originName", "test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originAddr1", "Addr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originZipcode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationName", "Testing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationAddr1", "DAddr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationZipcode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:itemdesc", "Itemdesc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValue", "12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void VerifyVerbiageAboveCostPerPoundNewAndUsedFieldsInTheShipmentResultsWhenInsuredTypeIsNewForStationowner_Stationown()
        {
#line 43
this.VerifyVerbiageAboveCostPerPoundNewAndUsedFieldsInTheShipmentResultsWhenInsuredTypeIsNewForStationowner("stationown", "", "Internal", "ZZZ - GS Customer Test", "test", "Addr", "33126", "Testing", "DAddr", "85282", "50", "1234", "5", "1000", "Itemdesc", "12345", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerbiageCostPerPoundNewAndUsedFieldsInTheShipmentResultsWhenInsuredTypeIsUsedForStationowner(
                    string username, 
                    string password, 
                    string usertype, 
                    string customerName, 
                    string originName, 
                    string originAddr1, 
                    string originZipcode, 
                    string destinationName, 
                    string destinationAddr1, 
                    string destinationZipcode, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string itemdesc, 
                    string insuredValue, 
                    string insuredType, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Regression",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verbiage Cost per Pound New and Used fields in the Shipment Results when Insured " +
                    "type is Used for stationowner", @__tags);
#line 56
this.ScenarioSetup(scenarioInfo);
#line 57
 testRunner.Given("I  login into application as StationOwner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
 testRunner.And(string.Format("I enter data in add shipment ltl page {0}, {1},{2},{3},{4},{5},{6},{7},{8},{9},{1" +
                        "0},{11},{12}", usertype, customerName, originName, originAddr1, originZipcode, destinationName, destinationAddr1, destinationZipcode, classification, nmfc, quantity, weight, itemdesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And(string.Format("I enter value in Insured Value {0}", insuredValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And(string.Format("I select the Insured Type from  {0} drop down", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.When("I click on View rates button in add shipment ltl page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.Then("the new verbiage Carrier’s Legal Liability per Pound without Insurance and Carrie" +
                    "r’s Max Liability if Shipment is Not Insured fields should be displayed for carr" +
                    "ier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verbiage Cost per Pound New and Used fields in the Shipment Results when Insured " +
            "type is Used for stationowner: stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LiabilityCoverage_VerbiageChange_ShipmentsResults")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentResultsLiabilityCoverageVerbiageChange")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29167")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originName", "test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originAddr1", "Addr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originZipcode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationName", "Testing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationAddr1", "DAddr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationZipcode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:itemdesc", "Itemdesc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValue", "267")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        public virtual void VerbiageCostPerPoundNewAndUsedFieldsInTheShipmentResultsWhenInsuredTypeIsUsedForStationowner_Stationown()
        {
#line 56
this.VerbiageCostPerPoundNewAndUsedFieldsInTheShipmentResultsWhenInsuredTypeIsUsedForStationowner("stationown", "", "Internal", "ZZZ - GS Customer Test", "test", "Addr", "33126", "Testing", "DAddr", "85282", "50", "1234", "5", "1000", "Itemdesc", "267", "Used", ((string[])(null)));
#line hidden
        }
        
        public virtual void _29167_VerbiageCostPerPoundNewAndUsedFieldsInTheShipmentResultsWhenInsuredTypeIsUsedShipentryUser(
                    string username, 
                    string password, 
                    string usertype, 
                    string customerName, 
                    string originName, 
                    string originAddr1, 
                    string originZipcode, 
                    string destinationName, 
                    string destinationAddr1, 
                    string destinationZipcode, 
                    string classification, 
                    string nmfc, 
                    string quantity, 
                    string weight, 
                    string itemdesc, 
                    string insuredValue, 
                    string insuredType, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Regression",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("29167-Verbiage Cost per Pound New and Used fields in the Shipment Results when In" +
                    "sured type is Used shipentry user", @__tags);
#line 68
this.ScenarioSetup(scenarioInfo);
#line 69
 testRunner.Given("I login as Ship entry user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
 testRunner.And(string.Format("I enter data in add shipment ltl page {0}, {1},{2},{3},{4},{5},{6},{7},{8},{9},{1" +
                        "0},{11},{12}", usertype, customerName, originName, originAddr1, originZipcode, destinationName, destinationAddr1, destinationZipcode, classification, nmfc, quantity, weight, itemdesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.And(string.Format("I enter value in Insured Value {0}", insuredValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.And(string.Format("I select the Insured Type from  {0} drop down", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.When("I click on View rates button in add shipment ltl page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
 testRunner.Then("the new verbiage Carrier’s Legal Liability per Pound without Insurance and Carrie" +
                    "r’s Max Liability if Shipment is Not Insured fields should be displayed for carr" +
                    "ier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("29167-Verbiage Cost per Pound New and Used fields in the Shipment Results when In" +
            "sured type is Used shipentry user: shp.entry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LiabilityCoverage_VerbiageChange_ShipmentsResults")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentResultsLiabilityCoverageVerbiageChange")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29167")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "shp.entry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shp.entry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Usertype", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originName", "test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originAddr1", "test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:originZipcode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationName", "fdgf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationAddr1", "Dngtr ame")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:destinationZipcode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:nmfc", "1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantity", "6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:itemdesc", "item")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValue", "1999")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        public virtual void _29167_VerbiageCostPerPoundNewAndUsedFieldsInTheShipmentResultsWhenInsuredTypeIsUsedShipentryUser_Shp_Entry()
        {
#line 68
this._29167_VerbiageCostPerPoundNewAndUsedFieldsInTheShipmentResultsWhenInsuredTypeIsUsedShipentryUser("shp.entry", "", "", "", "test", "test", "33126", "fdgf", "Dngtr ame", "85282", "50", "1234", "6", "1000", "item", "1999", "Used", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
