// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Shipment.AddShipment.ShipmentServiceTilesScreen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class AddShipment_ServiceSelection_Intl_CustomerUsersFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AddShipment_ServiceSelection_Intl_CustomerUsers.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AddShipment_ServiceSelection_Intl_CustomerUsers", null, ProgrammingLanguage.CSharp, new string[] {
                        "AddShipment_ServiceSelection_Intl_CustomerUsers",
                        "Sprint69",
                        "29395"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "AddShipment_ServiceSelection_Intl_CustomerUsers")))
            {
                CRM.UITest.Scripts.Shipment.AddShipment.ShipmentServiceTilesScreen.AddShipment_ServiceSelection_Intl_CustomerUsersFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyThePresenceOfSelectAServiceTypeDropdownContinueAndCloseButton(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of select a service type dropdown, Continue and Close button", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
testRunner.And("I click on Add Shipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
testRunner.And("I will be navigated to Add Shipment Tiles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
testRunner.And("I Click on the International Tiles", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
testRunner.And("I will be able to see International Type PopUp Modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
testRunner.Then("I will be able to see service type dropdown Continue and Close button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of select a service type dropdown, Continue and Close button:" +
            " s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29395")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyThePresenceOfSelectAServiceTypeDropdownContinueAndCloseButton_S1()
        {
            this.VerifyThePresenceOfSelectAServiceTypeDropdownContinueAndCloseButton("s1", "Both@test.com", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheInternationalTypePopUpModalClosesUponClickOnTheCloseButton(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the International Type PopUp Modal closes upon click on the Close button", @__tags);
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
testRunner.And("I click on Add Shipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
testRunner.And("I will be navigated to Add Shipment Tiles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
testRunner.And("I Click on the International Tiles", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
testRunner.And("I will be able to see International Type PopUp Modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
testRunner.And("I click on the Close button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
testRunner.Then("International Type PopUp Modal will be closed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the International Type PopUp Modal closes upon click on the Close button: " +
            "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29395")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyTheInternationalTypePopUpModalClosesUponClickOnTheCloseButton_S1()
        {
            this.VerifyTheInternationalTypePopUpModalClosesUponClickOnTheCloseButton("s1", "Both@test.com", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyForTheMessagePleaseEnterAllRequiredInformationWithServiceTypeRedhighlightedUponWithoutSelectingServiceTypeAndClickOnContinueButton(string scenario, string username, string password, string _Message, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify for the Message Please Enter All Required Information with Service Type Re" +
                    "dhighlighted upon without selecting Service Type and Click on Continue button", @__tags);
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
testRunner.And("I click on Add Shipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
testRunner.And("I will be navigated to Add Shipment Tiles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
testRunner.And("I Click on the International Tiles", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
testRunner.And("I will be able to see International Type PopUp Modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
testRunner.And("I Click on Continue button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
testRunner.Then(string.Format("the Message Please Enter All Required Information appears{0} with Service Type Re" +
                        "dhighlighted", _Message), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify for the Message Please Enter All Required Information with Service Type Re" +
            "dhighlighted upon without selecting Service Type and Click on Continue button: s" +
            "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29395")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_Message", "PLEASE ENTER ALL REQUIRED INFORMATION")]
        public virtual void VerifyForTheMessagePleaseEnterAllRequiredInformationWithServiceTypeRedhighlightedUponWithoutSelectingServiceTypeAndClickOnContinueButton_S1()
        {
            this.VerifyForTheMessagePleaseEnterAllRequiredInformationWithServiceTypeRedhighlightedUponWithoutSelectingServiceTypeAndClickOnContinueButton("s1", "Both@test.com", "Te$t1234", "PLEASE ENTER ALL REQUIRED INFORMATION", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations(string scenario, string username, string password, string _ServiceType, string _ServiceLevel, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify User able to select Corresponding Service Type and Service Level Combinati" +
                    "ons", @__tags);
#line 47
this.ScenarioSetup(scenarioInfo);
#line 48
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
testRunner.And("I click on Add Shipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
testRunner.And("I will be navigated to Add Shipment Tiles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.And("I Click on the International Tiles", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
testRunner.And("I will be able to see International Type PopUp Modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
testRunner.Then(string.Format("I will be able to select Service Type {0}and Service Level{1} Combinations", _ServiceType, _ServiceLevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify User able to select Corresponding Service Type and Service Level Combinati" +
            "ons: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29395")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceType", "Air - Import")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceLevel", "Air Consolidation")]
        public virtual void VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations_S1()
        {
            this.VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations("s1", "Both@test.com", "Te$t1234", "Air - Import", "Air Consolidation", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify User able to select Corresponding Service Type and Service Level Combinati" +
            "ons: s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29395")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceType", "Air - Import")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceLevel", "Air Direct")]
        public virtual void VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations_S2()
        {
            this.VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations("s2", "Both@test.com", "Te$t1234", "Air - Import", "Air Direct", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify User able to select Corresponding Service Type and Service Level Combinati" +
            "ons: s3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29395")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceType", "Air - Export")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceLevel", "Air Consolidation")]
        public virtual void VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations_S3()
        {
            this.VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations("s3", "Both@test.com", "Te$t1234", "Air - Export", "Air Consolidation", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify User able to select Corresponding Service Type and Service Level Combinati" +
            "ons: s4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29395")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceType", "Air - Export")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceLevel", "Air Direct")]
        public virtual void VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations_S4()
        {
            this.VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations("s4", "Both@test.com", "Te$t1234", "Air - Export", "Air Direct", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify User able to select Corresponding Service Type and Service Level Combinati" +
            "ons: s5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29395")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceType", "Ocean - Import")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceLevel", "Ocean LCL")]
        public virtual void VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations_S5()
        {
            this.VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations("s5", "Both@test.com", "Te$t1234", "Ocean - Import", "Ocean LCL", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify User able to select Corresponding Service Type and Service Level Combinati" +
            "ons: s6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29395")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceType", "Ocean - Import")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceLevel", "Ocean FCL")]
        public virtual void VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations_S6()
        {
            this.VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations("s6", "Both@test.com", "Te$t1234", "Ocean - Import", "Ocean FCL", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify User able to select Corresponding Service Type and Service Level Combinati" +
            "ons: s7")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29395")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s7")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s7")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceType", "Ocean - Export")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceLevel", "Ocean LCL")]
        public virtual void VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations_S7()
        {
            this.VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations("s7", "Both@test.com", "Te$t1234", "Ocean - Export", "Ocean LCL", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify User able to select Corresponding Service Type and Service Level Combinati" +
            "ons: s8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29395")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceType", "Ocean - Export")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceLevel", "Ocean FCL")]
        public virtual void VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations_S8()
        {
            this.VerifyUserAbleToSelectCorrespondingServiceTypeAndServiceLevelCombinations("s8", "Both@test.com", "Te$t1234", "Ocean - Export", "Ocean FCL", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyUserAbleToNavigateToLocationsAndDatesPageAndAbleToSeeServiceTypeAndServiceLevelAtTopOfThePage(string scenario, string username, string password, string _ServiceType, string _ServiceLevel, string service, string _IntLocaAndDates_Header, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify User able to Navigate to Locations and Dates Page and able to see Service " +
                    "Type and Service Level at Top of the page", @__tags);
#line 67
this.ScenarioSetup(scenarioInfo);
#line 68
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
testRunner.And("I click on Add Shipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
testRunner.And("I will be navigated to Add Shipment Tiles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
testRunner.And("I Click on the International Tiles", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
testRunner.And("I will be able to see International Type PopUp Modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
testRunner.Then(string.Format("I will be able to select Service Type {0}and Service Level{1} Combinations", _ServiceType, _ServiceLevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 75
testRunner.And("I Click on Continue button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
testRunner.And(string.Format("I Navigated to the International Locations and Dates Page{0},{1}", service, _IntLocaAndDates_Header), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
testRunner.And(string.Format("I able to see Service Type and Service Level at Top of the page{0}and{1}", _ServiceType, _ServiceLevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify User able to Navigate to Locations and Dates Page and able to see Service " +
            "Type and Service Level at Top of the page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29395")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceType", "Air - Import")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceLevel", "Air Consolidation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:service", "International")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_IntLocaAndDates_Header", "Shipment Locations and Dates")]
        public virtual void VerifyUserAbleToNavigateToLocationsAndDatesPageAndAbleToSeeServiceTypeAndServiceLevelAtTopOfThePage_S1()
        {
            this.VerifyUserAbleToNavigateToLocationsAndDatesPageAndAbleToSeeServiceTypeAndServiceLevelAtTopOfThePage("s1", "Both@test.com", "Te$t1234", "Air - Import", "Air Consolidation", "International", "Shipment Locations and Dates", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify User able to Navigate to Locations and Dates Page and able to see Service " +
            "Type and Service Level at Top of the page: s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AddShipment_ServiceSelection_Intl_CustomerUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint69")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("29395")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Both@test.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceType", "Ocean - Import")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_ServiceLevel", "Ocean LCL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:service", "International")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_IntLocaAndDates_Header", "Shipment Locations and Dates")]
        public virtual void VerifyUserAbleToNavigateToLocationsAndDatesPageAndAbleToSeeServiceTypeAndServiceLevelAtTopOfThePage_S2()
        {
            this.VerifyUserAbleToNavigateToLocationsAndDatesPageAndAbleToSeeServiceTypeAndServiceLevelAtTopOfThePage("s2", "Both@test.com", "Te$t1234", "Ocean - Import", "Ocean LCL", "International", "Shipment Locations and Dates", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
