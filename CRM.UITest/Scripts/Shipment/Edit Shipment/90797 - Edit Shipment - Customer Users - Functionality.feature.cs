// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Shipment.EditShipment
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _90797_EditShipment_CustomerUsers_FunctionalityFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "90797 - Edit Shipment - Customer Users - Functionality.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "90797 - Edit Shipment - Customer Users - Functionality", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint91",
                        "90797"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "90797 - Edit Shipment - Customer Users - Functionality")))
            {
                global::CRM.UITest.Scripts.Shipment.EditShipment._90797_EditShipment_CustomerUsers_FunctionalityFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _90797_VerifyIfTheUserHasAccessToEditOptionWhenTheLTLShipmentFallsUnderTheFollowingStatusPendingPre_PlanRatedUnscheduledTenderRejectedScheduled(string statusType, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90797 - Verify if the user has access to Edit option when the LTL Shipment falls " +
                    "under the following status : Pending, Pre-Plan, Rated, Unscheduled, Tender Rejec" +
                    "ted, Scheduled", exampleTags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("I am a Shp.entry, Shp.entrynorates user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.And("I am on Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
 testRunner.When(string.Format("The displayed LTL Shipment is in {0} status", statusType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.Then("I will have the option to edit the shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90797 - Verify if the user has access to Edit option when the LTL Shipment falls " +
            "under the following status : Pending, Pre-Plan, Rated, Unscheduled, Tender Rejec" +
            "ted, Scheduled: Pending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "90797 - Edit Shipment - Customer Users - Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint91")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90797")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Pending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StatusType", "Pending")]
        public virtual void _90797_VerifyIfTheUserHasAccessToEditOptionWhenTheLTLShipmentFallsUnderTheFollowingStatusPendingPre_PlanRatedUnscheduledTenderRejectedScheduled_Pending()
        {
#line 4
this._90797_VerifyIfTheUserHasAccessToEditOptionWhenTheLTLShipmentFallsUnderTheFollowingStatusPendingPre_PlanRatedUnscheduledTenderRejectedScheduled("Pending", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90797 - Verify if the user has access to Edit option when the LTL Shipment falls " +
            "under the following status : Pending, Pre-Plan, Rated, Unscheduled, Tender Rejec" +
            "ted, Scheduled: Scheduled")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "90797 - Edit Shipment - Customer Users - Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint91")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90797")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Scheduled")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StatusType", "Scheduled")]
        public virtual void _90797_VerifyIfTheUserHasAccessToEditOptionWhenTheLTLShipmentFallsUnderTheFollowingStatusPendingPre_PlanRatedUnscheduledTenderRejectedScheduled_Scheduled()
        {
#line 4
this._90797_VerifyIfTheUserHasAccessToEditOptionWhenTheLTLShipmentFallsUnderTheFollowingStatusPendingPre_PlanRatedUnscheduledTenderRejectedScheduled("Scheduled", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90797 - Verify if the user has access to Edit option when the LTL Shipment falls " +
            "under the following status : Pending, Pre-Plan, Rated, Unscheduled, Tender Rejec" +
            "ted, Scheduled: Unscheduled")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "90797 - Edit Shipment - Customer Users - Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint91")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90797")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Unscheduled")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StatusType", "Unscheduled")]
        public virtual void _90797_VerifyIfTheUserHasAccessToEditOptionWhenTheLTLShipmentFallsUnderTheFollowingStatusPendingPre_PlanRatedUnscheduledTenderRejectedScheduled_Unscheduled()
        {
#line 4
this._90797_VerifyIfTheUserHasAccessToEditOptionWhenTheLTLShipmentFallsUnderTheFollowingStatusPendingPre_PlanRatedUnscheduledTenderRejectedScheduled("Unscheduled", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90797 - Verify the display of Add Shipment (LTL) page onclick of Edit shipment bu" +
            "tton for any eligible LTL shipment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "90797 - Edit Shipment - Customer Users - Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint91")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90797")]
        public virtual void _90797_VerifyTheDisplayOfAddShipmentLTLPageOnclickOfEditShipmentButtonForAnyEligibleLTLShipment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90797 - Verify the display of Add Shipment (LTL) page onclick of Edit shipment bu" +
                    "tton for any eligible LTL shipment", ((string[])(null)));
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("I am a shp.entry or shp.entrynorates user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
 testRunner.And("I am on Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.When("I click on the Edit button for any eligible LTL shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.Then("I will arrive on the Add Shipment (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
 testRunner.And("All of the data from the shipment will be auto-populated on the Add Shipment (LTL" +
                    ") page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("All of the fields are editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And("I will see the shipment number displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("I will see verbiage indicating that the shipment is being edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90797 - Verify the functionality of PickUp Date calander on Add Shipment (LTL) pa" +
            "ge of Edit Shipment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "90797 - Edit Shipment - Customer Users - Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint91")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90797")]
        public virtual void _90797_VerifyTheFunctionalityOfPickUpDateCalanderOnAddShipmentLTLPageOfEditShipment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90797 - Verify the functionality of PickUp Date calander on Add Shipment (LTL) pa" +
                    "ge of Edit Shipment", ((string[])(null)));
#line 38
this.ScenarioSetup(scenarioInfo);
#line 39
 testRunner.Given("I am a shp.entry or shp.entrynorates user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 40
 testRunner.And("I am on Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("I clicked on the Edit button for any eligible LTL shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("I arrive on the Add Shipment (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.When("I click on the Pickup Date calendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.Then("I am Unable to Select a date prior to the date of the original shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90797 - Verify the display of Shipment Results page when the shipment has rates -" +
            " Edit Shipment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "90797 - Edit Shipment - Customer Users - Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint91")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90797")]
        public virtual void _90797_VerifyTheDisplayOfShipmentResultsPageWhenTheShipmentHasRates_EditShipment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90797 - Verify the display of Shipment Results page when the shipment has rates -" +
                    " Edit Shipment", ((string[])(null)));
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
 testRunner.Given("I am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
 testRunner.And("I am on Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And("I clicked on the Edit button for any eligible LTL shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And("I clicked on the View Rates button on the Add Shipment (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.When("I arrive on the Shipment Results (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
 testRunner.Then("I have the option to select displayed carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
 testRunner.And("I will see a Shipment Number displayed on shipment results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.And("I will see a Verbiage on Shipment Results page indicating that the shipment is be" +
                    "ing edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.And("The Create Shipment button(s) will be renamed Update Shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And("The Create Insured Shipment button will be renamed Update Insured Shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void _90797_VerifyTheDisplayOfReviewAndSubmitPageWhenTheShipmentHasRates_EditShipment(string shipmentType, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90797 - Verify the display of Review and Submit Page when the shipment has rates " +
                    "- Edit Shipment", exampleTags);
#line 59
this.ScenarioSetup(scenarioInfo);
#line 60
 testRunner.Given("I am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
 testRunner.And("I am on Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.And("I clicked on the Edit button for any eligible LTL shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.And("I clicked on the View Rates button on the Add Shipment (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.And("I am on Shipment Results (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.When(string.Format("I click on either of the following buttons for any displayed carrier - {0}", shipmentType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.Then("I will arrive on the Review and Submit (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 67
 testRunner.And("I will see the shipment number displayed on Review and Shipment page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And("I will see verbiage on Review and Submit page indicating that the shipment is bei" +
                    "ng edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And("The Submit Shipment button will be renamed to Submit Updated Shipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90797 - Verify the display of Review and Submit Page when the shipment has rates " +
            "- Edit Shipment: Update Shipment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "90797 - Edit Shipment - Customer Users - Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint91")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90797")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Update Shipment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentType", "Update Shipment")]
        public virtual void _90797_VerifyTheDisplayOfReviewAndSubmitPageWhenTheShipmentHasRates_EditShipment_UpdateShipment()
        {
#line 59
this._90797_VerifyTheDisplayOfReviewAndSubmitPageWhenTheShipmentHasRates_EditShipment("Update Shipment", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90797 - Verify the display of Review and Submit Page when the shipment has rates " +
            "- Edit Shipment: Update Insured Shipment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "90797 - Edit Shipment - Customer Users - Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint91")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90797")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Update Insured Shipment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentType", "Update Insured Shipment")]
        public virtual void _90797_VerifyTheDisplayOfReviewAndSubmitPageWhenTheShipmentHasRates_EditShipment_UpdateInsuredShipment()
        {
#line 59
this._90797_VerifyTheDisplayOfReviewAndSubmitPageWhenTheShipmentHasRates_EditShipment("Update Insured Shipment", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90797 - Verify the display of Shipment Results page when the shipment has no rate" +
            "s - Edit Shipment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "90797 - Edit Shipment - Customer Users - Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint91")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90797")]
        public virtual void _90797_VerifyTheDisplayOfShipmentResultsPageWhenTheShipmentHasNoRates_EditShipment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90797 - Verify the display of Shipment Results page when the shipment has no rate" +
                    "s - Edit Shipment", ((string[])(null)));
#line 76
this.ScenarioSetup(scenarioInfo);
#line 77
 testRunner.Given("I am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 78
 testRunner.And("I am on Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("I clicked on Edit button for any eligible LTL shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.And("I clicked on the View Rates button on the Add Shipment (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.And("I arrived on the Shipment Results (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.When("There are no rates available for the shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
 testRunner.Then("I have the option to update the shipment without carrier rates", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 84
 testRunner.And("Create Shipment without Carrier rate button will be renamed Update Shipment witho" +
                    "ut Carrier rate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90797 - Verify the display of Review and Submit page when the shipment has no rat" +
            "es - Edit Shipment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "90797 - Edit Shipment - Customer Users - Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint91")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90797")]
        public virtual void _90797_VerifyTheDisplayOfReviewAndSubmitPageWhenTheShipmentHasNoRates_EditShipment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90797 - Verify the display of Review and Submit page when the shipment has no rat" +
                    "es - Edit Shipment", ((string[])(null)));
#line 87
this.ScenarioSetup(scenarioInfo);
#line 88
 testRunner.Given("I am a shp.entrynorates user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 89
 testRunner.And("I am on Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.And("I clicked on the Edit button for any eligible LTL shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.When("I click on View Rates button on the Add Shipment (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
 testRunner.Then("I will arrive on the Review and Submit (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 93
 testRunner.And("I will see the shipment number displayed on Review and Shipment page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And("I will see verbiage on Review and Submit page indicating that the shipment is bei" +
                    "ng edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.And("The Submit Shipment button will be renamed to Submit Updated Shipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90797 - Verify if the verbiage \"You will receive a confirmation email shortly wit" +
            "h the Bill of Lading attached.\" is displayed on Shipment Confirmation Page - Edi" +
            "t Shipment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "90797 - Edit Shipment - Customer Users - Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint91")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90797")]
        public virtual void _90797_VerifyIfTheVerbiageYouWillReceiveAConfirmationEmailShortlyWithTheBillOfLadingAttached_IsDisplayedOnShipmentConfirmationPage_EditShipment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90797 - Verify if the verbiage \"You will receive a confirmation email shortly wit" +
                    "h the Bill of Lading attached.\" is displayed on Shipment Confirmation Page - Edi" +
                    "t Shipment", ((string[])(null)));
#line 97
this.ScenarioSetup(scenarioInfo);
#line 98
 testRunner.Given("I am a shp.entry or shp.entrynorates user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 99
 testRunner.And("I am on Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
 testRunner.And("I clicked on the Edit button for any eligible LTL shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.And("I am on the Review and Submit (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.And("I Clicked on Submit Updated Shipment Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.When("I arrive on the Shipment Confirmation (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
 testRunner.Then("I will not see the Verbiage <You will receive a confirmation email shortly with t" +
                    "he Bill of Lading attached.> on Shipment confirmation page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
