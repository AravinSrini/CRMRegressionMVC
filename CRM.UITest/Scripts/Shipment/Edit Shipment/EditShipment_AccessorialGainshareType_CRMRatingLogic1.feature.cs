// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Shipment.EditShipment
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class EditShipment_AccessorialGainshareType_CRMRatingLogicFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "EditShipment_AccessorialGainshareType_CRMRatingLogic.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "EditShipment_AccessorialGainshareType_CRMRatingLogic", null, ProgrammingLanguage.CSharp, new string[] {
                        "51434"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "EditShipment_AccessorialGainshareType_CRMRatingLogic")))
            {
                global::CRM.UITest.Scripts.Shipment.EditShipment.EditShipment_AccessorialGainshareType_CRMRatingLogicFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("51434 Verify that the CRM will apply accessorial cost as per % over cost calculat" +
            "ion when the gain share type is % over cost and customer of the Shipment has a S" +
            "et Individual Accessorial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EditShipment_AccessorialGainshareType_CRMRatingLogic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("51434")]
        public virtual void _51434VerifyThatTheCRMWillApplyAccessorialCostAsPerOverCostCalculationWhenTheGainShareTypeIsOverCostAndCustomerOfTheShipmentHasASetIndividualAccessorial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("51434 Verify that the CRM will apply accessorial cost as per % over cost calculat" +
                    "ion when the gain share type is % over cost and customer of the Shipment has a S" +
                    "et Individual Accessorial", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
testRunner.Given("I am a sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
testRunner.And("I am Editing an LTL shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
testRunner.And("the customer of the shipment being edited has a Set Individual Accessorial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
testRunner.And("the CRM Rating Logic = Yes for the customer of the shipment being edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
testRunner.And("the Accessorial Gainshare Type is \"% over cost\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
testRunner.When("CRM receives a rate request response from MG that includes the Set Individual Acc" +
                    "essorial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
testRunner.Then("CRM will calculate the accessorial-cost using the formula \"CRM accessorial cost =" +
                    " MG accessorial cost + (MG accessorial cost * <% over cost>(%))\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("51434 Verify that the CRM will apply accessorial cost as per flat over cost calcu" +
            "lation when the gain share type is flat over cost and customer of the Shipment h" +
            "as a Set Individual Accessorial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EditShipment_AccessorialGainshareType_CRMRatingLogic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("51434")]
        public virtual void _51434VerifyThatTheCRMWillApplyAccessorialCostAsPerFlatOverCostCalculationWhenTheGainShareTypeIsFlatOverCostAndCustomerOfTheShipmentHasASetIndividualAccessorial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("51434 Verify that the CRM will apply accessorial cost as per flat over cost calcu" +
                    "lation when the gain share type is flat over cost and customer of the Shipment h" +
                    "as a Set Individual Accessorial", ((string[])(null)));
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
testRunner.Given("I am a sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
testRunner.And("I am Editing an LTL shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
testRunner.And("the customer of the shipment being edited has a Set Individual Accessorial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
testRunner.And("the CRM Rating Logic = Yes for the customer of the shipment being edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
testRunner.And("the Accessorial Gainshare Type is \"Flat over cost\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
testRunner.When("CRM receives a rate request response from MG that includes the Set Individual Acc" +
                    "essorial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
testRunner.Then("CRM will calculate the accessorial-cost using the formula \"CRM accessorial cost =" +
                    " MG accessorial cost + flat over cost\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("51434 Verify that the CRM will apply accessorial cost as Set flat amount when the" +
            " gain share type is Set flat amount and customer of the Shipment has a Set Indiv" +
            "idual Accessorial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EditShipment_AccessorialGainshareType_CRMRatingLogic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("51434")]
        public virtual void _51434VerifyThatTheCRMWillApplyAccessorialCostAsSetFlatAmountWhenTheGainShareTypeIsSetFlatAmountAndCustomerOfTheShipmentHasASetIndividualAccessorial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("51434 Verify that the CRM will apply accessorial cost as Set flat amount when the" +
                    " gain share type is Set flat amount and customer of the Shipment has a Set Indiv" +
                    "idual Accessorial", ((string[])(null)));
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
testRunner.Given("I am a sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
testRunner.And("I am Editing an LTL shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
testRunner.And("the customer of the shipment being edited has a Set Individual Accessorial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
testRunner.And("the CRM Rating Logic = Yes for the customer of the shipment being edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
testRunner.And("the Accessorial Gainshare Type is \"Set flat amount\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
testRunner.When("CRM receives a rate request response from MG that includes the Set Individual Acc" +
                    "essorial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
testRunner.Then("CRM will apply the \"Set flat amount\" as the accessorial cost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("51434 Verify that the CRM will apply accessorial cost as per % over cost calculat" +
            "ion when the gain share type is % over cost and customer of the Shipment has car" +
            "rier-specific set individual accessorial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EditShipment_AccessorialGainshareType_CRMRatingLogic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("51434")]
        public virtual void _51434VerifyThatTheCRMWillApplyAccessorialCostAsPerOverCostCalculationWhenTheGainShareTypeIsOverCostAndCustomerOfTheShipmentHasCarrier_SpecificSetIndividualAccessorial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("51434 Verify that the CRM will apply accessorial cost as per % over cost calculat" +
                    "ion when the gain share type is % over cost and customer of the Shipment has car" +
                    "rier-specific set individual accessorial", ((string[])(null)));
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
testRunner.Given("I am a sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 33
testRunner.And("I am Editing an LTL shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
testRunner.And("the customer of the shipment being edited has a Carrier-Specific Set Individual A" +
                    "ccessorial,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
testRunner.And("the CRM Rating Logic = Yes for the customer of the shipment being edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
testRunner.And("the Accessorial Gainshare Type is \"% over cost\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
testRunner.When("CRM receives a rate request response from MG for the carrier with specific pricin" +
                    "g that includes the Set Individual Accessorial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
testRunner.Then("CRM will calculate the accessorial-cost using the formula \"CRM accessorial cost =" +
                    " MG accessorial cost + (MG accessorial cost * <% over cost>(%))\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("51434 Verify that the CRM will apply accessorial cost as per Flat over cost calcu" +
            "lation when the gain share type is Flat over cost and customer of the Shipment h" +
            "as carrier-specific set individual accessorial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EditShipment_AccessorialGainshareType_CRMRatingLogic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("51434")]
        public virtual void _51434VerifyThatTheCRMWillApplyAccessorialCostAsPerFlatOverCostCalculationWhenTheGainShareTypeIsFlatOverCostAndCustomerOfTheShipmentHasCarrier_SpecificSetIndividualAccessorial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("51434 Verify that the CRM will apply accessorial cost as per Flat over cost calcu" +
                    "lation when the gain share type is Flat over cost and customer of the Shipment h" +
                    "as carrier-specific set individual accessorial", ((string[])(null)));
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
testRunner.Given("I am a sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
testRunner.And("I am Editing an LTL shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
testRunner.And("the customer of the shipment being edited has a Carrier-Specific Set Individual A" +
                    "ccessorial,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
testRunner.And("the CRM Rating Logic = Yes for the customer of the shipment being edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
testRunner.And("the Accessorial Gainshare Type is \"Flat over cost\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
testRunner.When("CRM receives a rate request response from MG for the carrier with specific pricin" +
                    "g that includes the Set Individual Accessorial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
testRunner.Then("CRM will calculate the accessorial-cost using the formula \"CRM accessorial cost =" +
                    " MG accessorial cost + flat over cost\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("51434 Verify that the CRM will apply accessorial cost as Set flat amount when the" +
            " gain share type is Set flat amount and customer of the Shipment has carrier-spe" +
            "cific set individual accessorial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EditShipment_AccessorialGainshareType_CRMRatingLogic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("51434")]
        public virtual void _51434VerifyThatTheCRMWillApplyAccessorialCostAsSetFlatAmountWhenTheGainShareTypeIsSetFlatAmountAndCustomerOfTheShipmentHasCarrier_SpecificSetIndividualAccessorial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("51434 Verify that the CRM will apply accessorial cost as Set flat amount when the" +
                    " gain share type is Set flat amount and customer of the Shipment has carrier-spe" +
                    "cific set individual accessorial", ((string[])(null)));
#line 49
this.ScenarioSetup(scenarioInfo);
#line 50
testRunner.Given("I am a sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 51
testRunner.And("I am Editing an LTL shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.And("the customer of the shipment being edited has a Carrier-Specific Set Individual A" +
                    "ccessorial,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
testRunner.And("the CRM Rating Logic = Yes for the customer of the shipment being edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
testRunner.And("the Accessorial Gainshare Type is \"Set flat amount\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
testRunner.When("CRM receives a rate request response from MG for the carrier with specific pricin" +
                    "g that includes the Set Individual Accessorial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
testRunner.Then("CRM will apply the \"Set flat amount\" as the accessorial cost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
