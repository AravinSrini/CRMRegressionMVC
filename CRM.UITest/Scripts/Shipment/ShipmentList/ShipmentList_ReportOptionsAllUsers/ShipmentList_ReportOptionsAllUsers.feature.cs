// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Shipment.ShipmentList.ShipmentList_ReportOptionsAllUsers
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ShipmentList_ReportOptionsAllUsersFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ShipmentList_ReportOptionsAllUsers.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ShipmentList_ReportOptionsAllUsers", null, ProgrammingLanguage.CSharp, new string[] {
                        "ShipmentList_ReportOptionsAllUsers",
                        "26790",
                        "Sprint68"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "ShipmentList_ReportOptionsAllUsers")))
            {
                CRM.UITest.Scripts.Shipment.ShipmentList.ShipmentList_ReportOptionsAllUsers.ShipmentList_ReportOptionsAllUsersFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyThePresenceOfStandardReportListForInternalAndExternalUsers(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Standard report list for Internal  and External Users", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
testRunner.And("I clicked on the Select a Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
testRunner.Then("I will see Standard report list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Standard report list for Internal  and External Users: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyThePresenceOfStandardReportListForInternalAndExternalUsers_S1()
        {
            this.VerifyThePresenceOfStandardReportListForInternalAndExternalUsers("s1", "jennifer.k.fitzgerald", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyInternalAndExternalUserAbleToSelectAnyOfStandardReports(string scenario, string username, string password, string stdReport, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Internal and External User able to select any of Standard Reports", @__tags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
testRunner.And("I clicked on the Select a Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
testRunner.Then(string.Format("I will be able to select any of the Standard report{0}", stdReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Internal and External User able to select any of Standard Reports: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StdReport", "Shipments Scheduled not Rated")]
        public virtual void VerifyInternalAndExternalUserAbleToSelectAnyOfStandardReports_S1()
        {
            this.VerifyInternalAndExternalUserAbleToSelectAnyOfStandardReports("s1", "jennifer.k.fitzgerald", "Te$t1234", "Shipments Scheduled not Rated", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfPrivateCustomReportListForInternalUsers(string scenario, string userEmail, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Private Custom report list for Internal Users", @__tags);
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", userEmail, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
testRunner.And("I clicked on the Select a Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
testRunner.Then(string.Format("I will be able to see Custom report list{0}", userEmail), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Private Custom report list for Internal Users: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEmail", "jennifer.k.fitzgerald@rrd.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyThePresenceOfPrivateCustomReportListForInternalUsers_S1()
        {
            this.VerifyThePresenceOfPrivateCustomReportListForInternalUsers("s1", "jennifer.k.fitzgerald@rrd.com", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfCustomReportListForExternalUsers(string scenario, string userEmail, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Custom report list for External Users", @__tags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", userEmail, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
testRunner.And("I clicked on the Select a Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
testRunner.Then(string.Format("I will be able to see Custom report list{0}", userEmail), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Custom report list for External Users: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEmail", "zzzext@user.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyThePresenceOfCustomReportListForExternalUsers_S1()
        {
            this.VerifyThePresenceOfCustomReportListForExternalUsers("s1", "zzzext@user.com", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyInternalUserAbleToSelectAnyOfCustomReports(string scenario, string username, string password, string customReport, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Internal User able to select any of Custom Reports", @__tags);
#line 55
this.ScenarioSetup(scenarioInfo);
#line 56
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
testRunner.And("I clicked on the Select a Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
testRunner.Then(string.Format("I will be able to select any of the Custom report{0}", customReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Internal User able to select any of Custom Reports: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald@rrd.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomReport", "checkcity")]
        public virtual void VerifyInternalUserAbleToSelectAnyOfCustomReports_S1()
        {
            this.VerifyInternalUserAbleToSelectAnyOfCustomReports("s1", "jennifer.k.fitzgerald@rrd.com", "Te$t1234", "checkcity", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyExternalUserAbleToSelectAnyOfCustomReports(string scenario, string username, string password, string customReport, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify External User able to select any of Custom Reports", @__tags);
#line 68
this.ScenarioSetup(scenarioInfo);
#line 69
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
testRunner.And("I clicked on the Select a Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
testRunner.Then(string.Format("I will be able to select any of the Custom report{0}", customReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify External User able to select any of Custom Reports: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzzext@user.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomReport", "amtest")]
        public virtual void VerifyExternalUserAbleToSelectAnyOfCustomReports_S1()
        {
            this.VerifyExternalUserAbleToSelectAnyOfCustomReports("s1", "zzzext@user.com", "Te$t1234", "amtest", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfDateGridSection(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Date Grid section", @__tags);
#line 80
this.ScenarioSetup(scenarioInfo);
#line 81
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 82
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
testRunner.And("I Clicked on Show Filter link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
testRunner.Then("I will be able to see Date Grid section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Date Grid section: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzzext@user.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyThePresenceOfDateGridSection_S1()
        {
            this.VerifyThePresenceOfDateGridSection("s1", "zzzext@user.com", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfDeleteAndUpdateButtonActiveWhenCustomReportsAreSelectedForExternalUsers(string scenario, string username, string password, string customReport, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Delete and Update button active when Custom Reports are se" +
                    "lected for External Users", @__tags);
#line 91
this.ScenarioSetup(scenarioInfo);
#line 92
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
testRunner.And("I clicked on the Select a Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
testRunner.Then(string.Format("delete and update becomes active upon selecting any Custom Report{0}", customReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Delete and Update button active when Custom Reports are se" +
            "lected for External Users: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzzext@user.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomReport", "amtest")]
        public virtual void VerifyThePresenceOfDeleteAndUpdateButtonActiveWhenCustomReportsAreSelectedForExternalUsers_S1()
        {
            this.VerifyThePresenceOfDeleteAndUpdateButtonActiveWhenCustomReportsAreSelectedForExternalUsers("s1", "zzzext@user.com", "Te$t1234", "amtest", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfDeleteAndUpdateButtonActiveWhenCustomReportsAreSelectedForInternalUsers(string scenario, string username, string password, string customReport, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Delete and Update button active when Custom Reports are se" +
                    "lected for Internal Users", @__tags);
#line 104
this.ScenarioSetup(scenarioInfo);
#line 105
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 106
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
testRunner.And("I clicked on the Select a Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
testRunner.Then(string.Format("delete and update becomes active upon selecting any Custom Report{0}", customReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Delete and Update button active when Custom Reports are se" +
            "lected for Internal Users: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald@rrd.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomReport", "checkcity")]
        public virtual void VerifyThePresenceOfDeleteAndUpdateButtonActiveWhenCustomReportsAreSelectedForInternalUsers_S1()
        {
            this.VerifyThePresenceOfDeleteAndUpdateButtonActiveWhenCustomReportsAreSelectedForInternalUsers("s1", "jennifer.k.fitzgerald@rrd.com", "Te$t1234", "checkcity", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfSelectAllClearAllSaveAsNewButtonOrgCityDestCityReferenceNumberStatusTextbox(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Select All, Clear All, Save as New button, OrgCity, DestCi" +
                    "ty, Reference Number, Status Textbox", @__tags);
#line 117
this.ScenarioSetup(scenarioInfo);
#line 118
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 119
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 120
testRunner.And("I Clicked on Show Filter link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
testRunner.Then("I will see UI elements in Show Filter section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Select All, Clear All, Save as New button, OrgCity, DestCi" +
            "ty, Reference Number, Status Textbox: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzzext@user.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyThePresenceOfSelectAllClearAllSaveAsNewButtonOrgCityDestCityReferenceNumberStatusTextbox_S1()
        {
            this.VerifyThePresenceOfSelectAllClearAllSaveAsNewButtonOrgCityDestCityReferenceNumberStatusTextbox("s1", "zzzext@user.com", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfServiceTypeForInternalUsers(string scenario, string username, string password, string stationID, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Service Type for Internal users", @__tags);
#line 129
this.ScenarioSetup(scenarioInfo);
#line 130
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 131
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 132
testRunner.And("I Clicked on Show Filter link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
testRunner.Then(string.Format("I will be able to see different Service Types{0}", stationID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Service Type for Internal users: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationID", "99,FAR,MEM,PIT,SLC,ZZZ")]
        public virtual void VerifyThePresenceOfServiceTypeForInternalUsers_S1()
        {
            this.VerifyThePresenceOfServiceTypeForInternalUsers("s1", "jennifer.k.fitzgerald", "Te$t1234", "99,FAR,MEM,PIT,SLC,ZZZ", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheMGStandardReportsForMGAndBothTMSTypeCustomerAccountSelected(string scenario, string username, string password, string stationID, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the MG standard Reports for MG and Both TMS Type Customer Account selected" +
                    "", @__tags);
#line 141
this.ScenarioSetup(scenarioInfo);
#line 142
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 143
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 144
testRunner.And("I clicked on the Select a Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
testRunner.Then(string.Format("i will be seeing standard reports to MG only{0}", stationID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the MG standard Reports for MG and Both TMS Type Customer Account selected" +
            ": s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationID", "99,FAR,MEM,PIT,SLC,ZZZ")]
        public virtual void VerifyTheMGStandardReportsForMGAndBothTMSTypeCustomerAccountSelected_S1()
        {
            this.VerifyTheMGStandardReportsForMGAndBothTMSTypeCustomerAccountSelected("s1", "jennifer.k.fitzgerald", "Te$t1234", "99,FAR,MEM,PIT,SLC,ZZZ", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheMGStandardReportsForMGAndBothTMSTypeUserForExternalUsers(string scenario, string username, string password, string _CustomerAccount, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GuI",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the MG standard Reports for MG and Both TMS Type User for External users", @__tags);
#line 154
this.ScenarioSetup(scenarioInfo);
#line 155
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 156
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 157
testRunner.And("I clicked on the Select a Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
testRunner.Then(string.Format("I will see MG standard Reports{0}", _CustomerAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the MG standard Reports for MG and Both TMS Type User for External users: " +
            "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GuI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzzext@user.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:_CustomerAccount", "ZZZ - GS Customer Test")]
        public virtual void VerifyTheMGStandardReportsForMGAndBothTMSTypeUserForExternalUsers_S1()
        {
            this.VerifyTheMGStandardReportsForMGAndBothTMSTypeUserForExternalUsers("s1", "zzzext@user.com", "Te$t1234", "ZZZ - GS Customer Test", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheSavedReportParametersAreMatchedWithUI(string scenario, string username, string password, string customReport, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Saved Report Parameters are matched with UI", @__tags);
#line 164
this.ScenarioSetup(scenarioInfo);
#line 165
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 166
testRunner.When("I clicked on the Shipment Module will be navigated to Shipment List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 167
testRunner.And("I clicked on the Select a Report dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 168
testRunner.When(string.Format("I select any Custom Report from Report Dropdown{0}", customReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 169
testRunner.Then(string.Format("the Report parameter of Database should match with UI{0}", customReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Saved Report Parameters are matched with UI: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzzext@user.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomReport", "Gvcity")]
        public virtual void VerifyTheSavedReportParametersAreMatchedWithUI_S1()
        {
            this.VerifyTheSavedReportParametersAreMatchedWithUI("s1", "zzzext@user.com", "Te$t1234", "Gvcity", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Saved Report Parameters are matched with UI: s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ShipmentList_ReportOptionsAllUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26790")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint68")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "jennifer.k.fitzgerald@rrd.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomReport", "tastvast")]
        public virtual void VerifyTheSavedReportParametersAreMatchedWithUI_S2()
        {
            this.VerifyTheSavedReportParametersAreMatchedWithUI("s2", "jennifer.k.fitzgerald@rrd.com", "Te$t1234", "tastvast", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
