// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.CustomerInvoices.CustomReport
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CustomerInvoice_CustomReportSaveEditsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Customer Invoice - Custom Report Save Edits.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Customer Invoice - Custom Report Save Edits", null, ProgrammingLanguage.CSharp, new string[] {
                        "38918",
                        "NinjaSprint23"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Customer Invoice - Custom Report Save Edits")))
            {
                global::CRM.UITest.Scripts.CustomerInvoices.CustomReport.CustomerInvoice_CustomReportSaveEditsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("38918 - Verify that the save edits button is inactive when the create or edit cus" +
            "tomer report section is opened")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Customer Invoice - Custom Report Save Edits")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("38918")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _38918_VerifyThatTheSaveEditsButtonIsInactiveWhenTheCreateOrEditCustomerReportSectionIsOpened()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38918 - Verify that the save edits button is inactive when the create or edit cus" +
                    "tomer report section is opened", new string[] {
                        "GUI"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given("I am a shp.entry, shp.entrynortes, shp.inquiry, shp.inquirynorates, operations, s" +
                    "ales, sales management, station owner, or access rrd user who can access the sav" +
                    "e edits feature", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.And("I am on the Customer Invoice page as an accepted user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
testRunner.And("I selected a Custom Report from the Select Standard or Existing Custom Report lis" +
                    "t", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
testRunner.When("I expand the Create or Edit Custom Report section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
testRunner.Then("I will see a Save Edits button for the report", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
testRunner.And("the Save Edits button for the report will be inactive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("38918 - Verify that the save edits button is hidden when the create or edit custo" +
            "mer report section is opened on page load")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Customer Invoice - Custom Report Save Edits")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("38918")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _38918_VerifyThatTheSaveEditsButtonIsHiddenWhenTheCreateOrEditCustomerReportSectionIsOpenedOnPageLoad()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38918 - Verify that the save edits button is hidden when the create or edit custo" +
                    "mer report section is opened on page load", new string[] {
                        "GUI"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
testRunner.Given("I am a shp.entry, shp.entrynortes, shp.inquiry, shp.inquirynorates, operations, s" +
                    "ales, sales management, station owner, or access rrd user who can access the sav" +
                    "e edits feature", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
testRunner.And("I am on the Customer Invoice page as an accepted user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
testRunner.When("I expand the Create or Edit Custom Report section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
testRunner.Then("I will not see a Save Edits button for the  custom reports section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("38918 - Verify that the save edits button becomes active when the invoice type in" +
            " the custom report is edited")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Customer Invoice - Custom Report Save Edits")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("38918")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _38918_VerifyThatTheSaveEditsButtonBecomesActiveWhenTheInvoiceTypeInTheCustomReportIsEdited()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38918 - Verify that the save edits button becomes active when the invoice type in" +
                    " the custom report is edited", new string[] {
                        "GUI"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
testRunner.Given("I am a shp.entry, shp.entrynortes, shp.inquiry, shp.inquirynorates, operations, s" +
                    "ales, sales management, station owner, or access rrd user who can access the sav" +
                    "e edits feature", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 23
testRunner.And("I am on the Customer Invoice page as an accepted user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
testRunner.And("I selected a Custom Report from the Select Standard or Existing Custom Report lis" +
                    "t", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
testRunner.And("I expand the Create or Edit Custom Report section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
testRunner.When("I edit the invoice type of the custom report", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
testRunner.Then("the Save Edits button for the report will be active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("38918 - Verify that the save edits button becomes active when the days past due s" +
            "ection is edited using the text field")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Customer Invoice - Custom Report Save Edits")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("38918")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _38918_VerifyThatTheSaveEditsButtonBecomesActiveWhenTheDaysPastDueSectionIsEditedUsingTheTextField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38918 - Verify that the save edits button becomes active when the days past due s" +
                    "ection is edited using the text field", new string[] {
                        "GUI"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
testRunner.Given("I am a shp.entry, shp.entrynortes, shp.inquiry, shp.inquirynorates, operations, s" +
                    "ales, sales management, station owner, or access rrd user who can access the sav" +
                    "e edits feature", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 32
testRunner.And("I am on the Customer Invoice page as an accepted user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
testRunner.And("I selected a Custom Report from the Select Standard or Existing Custom Report lis" +
                    "t", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
testRunner.And("I expand the Create or Edit Custom Report section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
testRunner.When("I edit the days past due of the custom report using the text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
testRunner.Then("the Save Edits button for the report will be active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("38918 - Verify that the save edits button becomes active when the date range sect" +
            "ion is edited")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Customer Invoice - Custom Report Save Edits")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("38918")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _38918_VerifyThatTheSaveEditsButtonBecomesActiveWhenTheDateRangeSectionIsEdited()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38918 - Verify that the save edits button becomes active when the date range sect" +
                    "ion is edited", new string[] {
                        "GUI"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
testRunner.Given("I am a shp.entry, shp.entrynortes, shp.inquiry, shp.inquirynorates, operations, s" +
                    "ales, sales management, station owner, or access rrd user who can access the sav" +
                    "e edits feature", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
testRunner.And("I am on the Customer Invoice page as an accepted user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
testRunner.And("I selected a Custom Report from the Select Standard or Existing Custom Report lis" +
                    "t", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
testRunner.And("I expand the Create or Edit Custom Report section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
testRunner.When("I edit the date range of the custom report", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
testRunner.Then("the Save Edits button for the report will be active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("38918 - Verify that the save edits button becomes active when the invoice value i" +
            "s edited using the text field")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Customer Invoice - Custom Report Save Edits")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("38918")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _38918_VerifyThatTheSaveEditsButtonBecomesActiveWhenTheInvoiceValueIsEditedUsingTheTextField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38918 - Verify that the save edits button becomes active when the invoice value i" +
                    "s edited using the text field", new string[] {
                        "GUI"});
#line 48
this.ScenarioSetup(scenarioInfo);
#line 49
testRunner.Given("I am a shp.entry, shp.entrynortes, shp.inquiry, shp.inquirynorates, operations, s" +
                    "ales, sales management, station owner, or access rrd user who can access the sav" +
                    "e edits feature", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 50
testRunner.And("I am on the Customer Invoice page as an accepted user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
testRunner.And("I selected a Custom Report from the Select Standard or Existing Custom Report lis" +
                    "t", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.And("I expand the Create or Edit Custom Report section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
testRunner.When("I edit the invoice value of the custom report by using the text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
testRunner.Then("the Save Edits button for the report will be active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("38918 - Verify that the save edits button becomes active when the invoice value i" +
            "s edited using the drop down menu")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Customer Invoice - Custom Report Save Edits")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("38918")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _38918_VerifyThatTheSaveEditsButtonBecomesActiveWhenTheInvoiceValueIsEditedUsingTheDropDownMenu()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38918 - Verify that the save edits button becomes active when the invoice value i" +
                    "s edited using the drop down menu", new string[] {
                        "GUI"});
#line 57
this.ScenarioSetup(scenarioInfo);
#line 58
testRunner.Given("I am a shp.entry, shp.entrynortes, shp.inquiry, shp.inquirynorates, operations, s" +
                    "ales, sales management, station owner, or access rrd user who can access the sav" +
                    "e edits feature", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
testRunner.And("I am on the Customer Invoice page as an accepted user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
testRunner.And("I selected a Custom Report from the Select Standard or Existing Custom Report lis" +
                    "t", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
testRunner.And("I expand the Create or Edit Custom Report section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
testRunner.When("I edit the invoice value of the custom report by using the drop down menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
testRunner.Then("the Save Edits button for the report will be active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("38918 -  Verify that the save edits button becomes active when a station is added" +
            " to the custom report")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Customer Invoice - Custom Report Save Edits")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("38918")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _38918_VerifyThatTheSaveEditsButtonBecomesActiveWhenAStationIsAddedToTheCustomReport()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38918 -  Verify that the save edits button becomes active when a station is added" +
                    " to the custom report", new string[] {
                        "GUI"});
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
testRunner.Given("I am a shp.entry, shp.entrynortes, shp.inquiry, shp.inquirynorates, operations, s" +
                    "ales, sales management, station owner, or access rrd user who can access the sav" +
                    "e edits feature", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
testRunner.And("I am on the Customer Invoice page as an accepted user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
testRunner.And("I selected a Custom Report from the Select Standard or Existing Custom Report lis" +
                    "t", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
testRunner.And("I expand the Create or Edit Custom Report section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
testRunner.When("I edit the station of the custom report by adding a station", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
testRunner.Then("the Save Edits button for the report will be active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("38918 - Verify that the save edits button becomes active when an account is added" +
            " to the custom report")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Customer Invoice - Custom Report Save Edits")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("38918")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _38918_VerifyThatTheSaveEditsButtonBecomesActiveWhenAnAccountIsAddedToTheCustomReport()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38918 - Verify that the save edits button becomes active when an account is added" +
                    " to the custom report", new string[] {
                        "GUI"});
#line 75
this.ScenarioSetup(scenarioInfo);
#line 76
testRunner.Given("I am a shp.entry, shp.entrynortes, shp.inquiry, shp.inquirynorates, operations, s" +
                    "ales, sales management, station owner, or access rrd user who can access the sav" +
                    "e edits feature", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 77
testRunner.And("I am on the Customer Invoice page as an accepted user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
testRunner.And("I selected a Custom Report from the Select Standard or Existing Custom Report lis" +
                    "t", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
testRunner.And("I expand the Create or Edit Custom Report section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
testRunner.When("I edit the account of the custom report by adding an account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
testRunner.Then("the Save Edits button for the report will be active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("38918 - Verify that the save edits button remains inactive when the report name f" +
            "ield is edited")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Customer Invoice - Custom Report Save Edits")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("38918")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _38918_VerifyThatTheSaveEditsButtonRemainsInactiveWhenTheReportNameFieldIsEdited()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38918 - Verify that the save edits button remains inactive when the report name f" +
                    "ield is edited", new string[] {
                        "GUI"});
#line 84
this.ScenarioSetup(scenarioInfo);
#line 85
testRunner.Given("I am a shp.entry, shp.entrynortes, shp.inquiry, shp.inquirynorates, operations, s" +
                    "ales, sales management, station owner, or access rrd user who can access the sav" +
                    "e edits feature", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
testRunner.And("I am on the Customer Invoice page as an accepted user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
testRunner.And("I selected a Custom Report from the Select Standard or Existing Custom Report lis" +
                    "t", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
testRunner.And("I expand the Create or Edit Custom Report section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
testRunner.When("I edit the custom Report Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
testRunner.Then("the Save Edits button for the report will be inactive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("38918 - Verify that when the save edits button is clicked the edits will be saved" +
            " to the custom report and the grid is updated to display invoice matching the ne" +
            "w criteria")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Customer Invoice - Custom Report Save Edits")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("38918")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _38918_VerifyThatWhenTheSaveEditsButtonIsClickedTheEditsWillBeSavedToTheCustomReportAndTheGridIsUpdatedToDisplayInvoiceMatchingTheNewCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38918 - Verify that when the save edits button is clicked the edits will be saved" +
                    " to the custom report and the grid is updated to display invoice matching the ne" +
                    "w criteria", new string[] {
                        "GUI"});
#line 93
this.ScenarioSetup(scenarioInfo);
#line 94
testRunner.Given("I am a shp.entry, shp.entrynortes, shp.inquiry, shp.inquirynorates, operations, s" +
                    "ales, sales management, station owner, or access rrd user who can access the sav" +
                    "e edits feature zzzext", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 95
testRunner.And("I am on the Customer Invoice page as an accepted user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
testRunner.And("I selected a Custom Report from the Select Standard or Existing Custom Report lis" +
                    "t for zzzext", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
testRunner.And("I expand the Create or Edit Custom Report section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
testRunner.And("I edited Any field or sections of the CUSTOM REPORT with the exception of the fol" +
                    "lowing REPORT NAME", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
testRunner.When("I click on the Save Edits button for the report", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 100
testRunner.Then("the edits will be saved to the custom report", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 101
testRunner.And("the grid will update to display invoices matching the new criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
