// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Tracking.Tracking_ExportFunctionality
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class TrackingDetailsPage_ExportFunctionalityFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Tracking Details Page - Export Functionality.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Tracking Details Page - Export Functionality", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint60",
                        "TrackingDetailsPage-ExportFunctionality",
                        "18408"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Tracking Details Page - Export Functionality")))
            {
                global::CRM.UITest.Scripts.Tracking.Tracking_ExportFunctionality.TrackingDetailsPage_ExportFunctionalityFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyTheExistenceOfExportButtonInTheTrackingDetailsPage(string multipleValidReferenceNumbers, string tracking, string export, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Fixed"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the existence of Export button in the Tracking details page", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given("I am a DLS user and login into application with valid Username and Password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.And("I click on Tracking Details icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
testRunner.When(string.Format("I enter \'{0}\' in the search box", multipleValidReferenceNumbers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
testRunner.And("I click on search button in the Tracking page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
testRunner.And(string.Format("I navigate to {0} Details page", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
testRunner.Then(string.Format("I must be able to view {0} Button", export), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the existence of Export button in the Tracking details page: MKE30128897,P" +
            "IT01172270,PIT01172271,ZZX00204206")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking Details Page - Export Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingDetailsPage-ExportFunctionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18408")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Fixed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MKE30128897,PIT01172270,PIT01172271,ZZX00204206")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MultipleValidReferenceNumbers", "MKE30128897,PIT01172270,PIT01172271,ZZX00204206")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Export", "Export")]
        public virtual void VerifyTheExistenceOfExportButtonInTheTrackingDetailsPage_MKE30128897PIT01172270PIT01172271ZZX00204206()
        {
#line 5
this.VerifyTheExistenceOfExportButtonInTheTrackingDetailsPage("MKE30128897,PIT01172270,PIT01172271,ZZX00204206", "Tracking", "Export", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyDropdownMenuForExportButtonInTheTrackingDetailsPage(string tracking, string all, string displayed, string multipleValidReferenceNumbers, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Fixed"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify dropdown menu for export button in the Tracking details page", @__tags);
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
testRunner.Given("I am a DLS user and login into application with valid Username and Password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
testRunner.And("I click on Tracking Details icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
testRunner.And(string.Format("I enter the multi\'{0}\' in the search box", multipleValidReferenceNumbers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
testRunner.And(string.Format("I navigate to {0} details page", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
testRunner.When("I click on Export button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
testRunner.Then(string.Format("I must be able to view a dropdown with option to select {0} or {1}", all, displayed), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify dropdown menu for export button in the Tracking details page: Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking Details Page - Export Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingDetailsPage-ExportFunctionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18408")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Fixed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:All", "All")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Displayed", "Displayed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MultipleValidReferenceNumbers", "MKE30128897,PIT01172270,PIT01172271,ZZX00204206")]
        public virtual void VerifyDropdownMenuForExportButtonInTheTrackingDetailsPage_Tracking()
        {
#line 18
this.VerifyDropdownMenuForExportButtonInTheTrackingDetailsPage("Tracking", "All", "Displayed", "MKE30128897,PIT01172270,PIT01172271,ZZX00204206", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyAndCompareTheFunctionalityOfExportButtonWhenAllOptionIsSelectedFromTheDropdown(string tracking, string multipleValidReferenceNumbers, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "Regression",
                    "Fixed"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify and compare the functionality of export button when \'All\' option is select" +
                    "ed from the Dropdown", @__tags);
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
testRunner.Given("I am a DLS user and login into application with valid Username and Password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 33
testRunner.And("I click on Tracking Details icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
testRunner.And(string.Format("I enter the multi\'{0}\' in the search box", multipleValidReferenceNumbers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
testRunner.And(string.Format("I navigate to {0} details page", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
testRunner.When("I click on Export button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
testRunner.And("I click on All option from the export dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
testRunner.Then("An Excel file of .xls format containing all the tracking results should get downl" +
                    "oaded and verified", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify and compare the functionality of export button when \'All\' option is select" +
            "ed from the Dropdown: Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking Details Page - Export Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingDetailsPage-ExportFunctionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18408")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Fixed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MultipleValidReferenceNumbers", "MKE30128897,PIT01172270,PIT01172271,ZZX00204206")]
        public virtual void VerifyAndCompareTheFunctionalityOfExportButtonWhenAllOptionIsSelectedFromTheDropdown_Tracking()
        {
#line 31
this.VerifyAndCompareTheFunctionalityOfExportButtonWhenAllOptionIsSelectedFromTheDropdown("Tracking", "MKE30128897,PIT01172270,PIT01172271,ZZX00204206", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyAndCompareTheFunctionalityOfExportButtonWhenDisplayedOptionIsSelectedFromTheDropdown(string tracking, string multipleValidReferenceNumbers, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "Regression",
                    "Fixed"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify and compare the functionality of export button when \'Displayed\' option is " +
                    "selected from the dropdown", @__tags);
#line 45
this.ScenarioSetup(scenarioInfo);
#line 46
testRunner.Given("I am a DLS user and login into application with valid Username and Password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 47
testRunner.And("I click on Tracking Details icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
testRunner.And(string.Format("I enter the multi\'{0}\' in the search box", multipleValidReferenceNumbers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
testRunner.And(string.Format("I navigate to {0} details page", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
testRunner.When("I click on Export button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
testRunner.And("I click on Displayed option from the export dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.Then("An Excel file of .xls format containing all the tracking results of the current p" +
                    "age should get downloaded and verified", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify and compare the functionality of export button when \'Displayed\' option is " +
            "selected from the dropdown: Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking Details Page - Export Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingDetailsPage-ExportFunctionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18408")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Fixed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MultipleValidReferenceNumbers", "MKE30128897,PIT01172270,PIT01172271,ZZX00204206")]
        public virtual void VerifyAndCompareTheFunctionalityOfExportButtonWhenDisplayedOptionIsSelectedFromTheDropdown_Tracking()
        {
#line 45
this.VerifyAndCompareTheFunctionalityOfExportButtonWhenDisplayedOptionIsSelectedFromTheDropdown("Tracking", "MKE30128897,PIT01172270,PIT01172271,ZZX00204206", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatTheExportButtonIsUnavailableForMobileDevices_(string tracking, string export, string windowWidth, string windowHeight, string multipleValidReferenceNumbers, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance",
                    "Fixed"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that the Export button is unavailable for Mobile devices.", @__tags);
#line 59
this.ScenarioSetup(scenarioInfo);
#line 60
testRunner.Given("I am a DLS user and login into application with valid Username and Password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
testRunner.And(string.Format("I re-size the browser to the mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
testRunner.And("I click on Tracking Details icon for mobile device", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
testRunner.And(string.Format("I enter the multi\'{0}\' in the search box", multipleValidReferenceNumbers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
testRunner.When(string.Format("I navigate to {0} Details page", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
testRunner.Then(string.Format("I should not be able to view {0} Button in the tracking details page", export), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that the Export button is unavailable for Mobile devices.: Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking Details Page - Export Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingDetailsPage-ExportFunctionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18408")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Fixed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Export", "Export")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "360")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "640")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MultipleValidReferenceNumbers", "MKE30128897,PIT01172270,PIT01172271,ZZX00204206")]
        public virtual void VerifyThatTheExportButtonIsUnavailableForMobileDevices__Tracking()
        {
#line 59
this.VerifyThatTheExportButtonIsUnavailableForMobileDevices_("Tracking", "Export", "360", "640", "MKE30128897,PIT01172270,PIT01172271,ZZX00204206", ((string[])(null)));
#line hidden
        }
        
        public virtual void CompareMoreInformationTrackingDetailsWithExportedExcel(string tracking, string multipleValidReferenceNumbers, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "Fixed"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare More information tracking details with exported excel", @__tags);
#line 72
this.ScenarioSetup(scenarioInfo);
#line 73
testRunner.Given("I am a DLS user and login into application with valid Username and Password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 74
testRunner.And("I click on Tracking Details icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
testRunner.And(string.Format("I enter the multi\'{0}\' in the search box", multipleValidReferenceNumbers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
testRunner.And(string.Format("I navigate to {0} details page", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
testRunner.When("I click on Export button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
testRunner.And("I click on Displayed option from the export dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
testRunner.And("I click on More Information Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
testRunner.Then("I should be able to compare the more information details with the exported tracki" +
                    "ng details file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Compare More information tracking details with exported excel: Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking Details Page - Export Functionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingDetailsPage-ExportFunctionality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18408")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Fixed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MultipleValidReferenceNumbers", "MKE30128897,PIT01172270,PIT01172271,ZZX00204206")]
        public virtual void CompareMoreInformationTrackingDetailsWithExportedExcel_Tracking()
        {
#line 72
this.CompareMoreInformationTrackingDetailsWithExportedExcel("Tracking", "MKE30128897,PIT01172270,PIT01172271,ZZX00204206", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
