// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Dashboard.ResponsiveNavigation
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class BuildResponsiveNavigation_DesktopFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "BuildResponsiveNavigation_Desktop.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "BuildResponsiveNavigation_Desktop", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint59",
                        "17389",
                        "BuildResponsiveNavigation"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "BuildResponsiveNavigation_Desktop")))
            {
                CRM.UITest.Scripts.Dashboard.ResponsiveNavigation.BuildResponsiveNavigation_DesktopFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyThatUserCanAbleToNavigateToTheDashboardModuleWhenUserHasRequiredPriviliges(string scenario, string username, string password, string dLSWorldwidetext, string userDropdown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to navigate to the Dashboard module when user has requi" +
                    "red Priviliges", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And(string.Format("I am able to see the \'{0}\'", userDropdown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.When(string.Format("I should see Dashboard icon in the left navigation menu of Landing Page if \'{0}\' " +
                        "have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then(string.Format("I click on the Dashboard Menu available in the Landing Page navigate to Dashboard" +
                        " landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to navigate to the Dashboard module when user has requi" +
            "red Priviliges: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildResponsiveNavigation_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17389")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildResponsiveNavigation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzz")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWorldwidetext", "DLS Worldwide")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserDropdown", "ZZZ TEST")]
        public virtual void VerifyThatUserCanAbleToNavigateToTheDashboardModuleWhenUserHasRequiredPriviliges_S1()
        {
            this.VerifyThatUserCanAbleToNavigateToTheDashboardModuleWhenUserHasRequiredPriviliges("S1", "zzz", "Te$t1234", "DLS Worldwide", "ZZZ TEST", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToNavigateToTheQuotesModuleWhenUserHasRequiredPriviliges(string scenario, string username, string password, string userDropdown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to navigate to the Quotes  module when user has require" +
                    "d Priviliges", @__tags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And(string.Format("I am able to see the \'{0}\'", userDropdown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.When(string.Format("I should see Quotes icon in the left navigation menu of Landing Page if \'{0}\' hav" +
                        "e claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.Then(string.Format("I click on the Quotes Menu available in the Landing Page navigate to Quotes landi" +
                        "ng page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to navigate to the Quotes  module when user has require" +
            "d Priviliges: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildResponsiveNavigation_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17389")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildResponsiveNavigation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzz")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserDropdown", "ZZZ TEST")]
        public virtual void VerifyThatUserCanAbleToNavigateToTheQuotesModuleWhenUserHasRequiredPriviliges_S1()
        {
            this.VerifyThatUserCanAbleToNavigateToTheQuotesModuleWhenUserHasRequiredPriviliges("S1", "zzz", "Te$t1234", "ZZZ TEST", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToNavigateToTheShipmentsModuleWhenUserHasRequiredPriviliges(string scenario, string username, string password, string userDropdown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to navigate to the Shipments module when user has requi" +
                    "red Priviliges", @__tags);
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And(string.Format("I am able to see the \'{0}\'", userDropdown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.When(string.Format("I should see Shipments icon in the left navigation menu of Landing Page if \'{0}\' " +
                        "have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.Then(string.Format("I click on the Shipments Menu available in the Landing Page navigate to Shipments" +
                        " landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to navigate to the Shipments module when user has requi" +
            "red Priviliges: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildResponsiveNavigation_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17389")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildResponsiveNavigation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzz")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserDropdown", "ZZZ TEST")]
        public virtual void VerifyThatUserCanAbleToNavigateToTheShipmentsModuleWhenUserHasRequiredPriviliges_S1()
        {
            this.VerifyThatUserCanAbleToNavigateToTheShipmentsModuleWhenUserHasRequiredPriviliges("S1", "zzz", "Te$t1234", "ZZZ TEST", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatEveryUserCanAbleToSeeTheTrackingIconAndAbleToNavigate(string scenario, string username, string password, string userDropdown, string trackingtext, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that every user can able to see the Tracking icon and able to navigate", @__tags);
#line 41
this.ScenarioSetup(scenarioInfo);
#line 42
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 43
 testRunner.And("I am landing on DLS Worldwide homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.And(string.Format("I am able to see the \'{0}\'", userDropdown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.When("I should see Tracking icon in the left navigation menu of Landing Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
 testRunner.Then("I Click on the Tracking icon available in the menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 47
 testRunner.And(string.Format("I should see the text \'{0}\' in the Tracking landing page", trackingtext), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that every user can able to see the Tracking icon and able to navigate: S1" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildResponsiveNavigation_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17389")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildResponsiveNavigation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzz")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserDropdown", "ZZZ TEST")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Trackingtext", "Tracking")]
        public virtual void VerifyThatEveryUserCanAbleToSeeTheTrackingIconAndAbleToNavigate_S1()
        {
            this.VerifyThatEveryUserCanAbleToSeeTheTrackingIconAndAbleToNavigate("S1", "zzz", "Te$t1234", "ZZZ TEST", "Tracking", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToNavigateToTheCommissionsModuleWhenUserHasRequiredPriviliges(string scenario, string username, string password, string userDropdown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to navigate to the Commissions module when user has req" +
                    "uired Priviliges", @__tags);
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.And(string.Format("I am able to see the \'{0}\'", userDropdown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.When(string.Format("I should see Commissions icon in the left navigation menu of Landing Page if \'{0}" +
                        "\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
 testRunner.Then(string.Format("I click on the Commissions Menu available in the Landing Page navigate to Commiss" +
                        "ions landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to navigate to the Commissions module when user has req" +
            "uired Priviliges: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildResponsiveNavigation_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17389")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildResponsiveNavigation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "mem")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserDropdown", "TEST MEM")]
        public virtual void VerifyThatUserCanAbleToNavigateToTheCommissionsModuleWhenUserHasRequiredPriviliges_S1()
        {
            this.VerifyThatUserCanAbleToNavigateToTheCommissionsModuleWhenUserHasRequiredPriviliges("S1", "mem", "Te$t1234", "TEST MEM", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToNavigateToTheDocumentRepositoryModuleWhenUserHasRequiredPriviliges(string scenario, string username, string password, string userDropdown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to navigate to the Document Repository module when user" +
                    " has required Priviliges", @__tags);
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And(string.Format("I am able to see the \'{0}\'", userDropdown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.When(string.Format("I should see Document Repository icon in the left navigation menu of Landing Page" +
                        " if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
 testRunner.Then(string.Format("I click on the Document Repository Menu available in the Landing Page navigate to" +
                        " Document Repository landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to navigate to the Document Repository module when user" +
            " has required Priviliges: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildResponsiveNavigation_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17389")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildResponsiveNavigation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzz")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserDropdown", "ZZZ TEST")]
        public virtual void VerifyThatUserCanAbleToNavigateToTheDocumentRepositoryModuleWhenUserHasRequiredPriviliges_S1()
        {
            this.VerifyThatUserCanAbleToNavigateToTheDocumentRepositoryModuleWhenUserHasRequiredPriviliges("S1", "zzz", "Te$t1234", "ZZZ TEST", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToNavigateToTheRatingToolsModuleWhenUserHasRequiredPriviliges(string scenario, string username, string password, string userDropdown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to navigate to the Rating Tools module when user has re" +
                    "quired Priviliges", @__tags);
#line 78
this.ScenarioSetup(scenarioInfo);
#line 79
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 80
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.And(string.Format("I am able to see the \'{0}\'", userDropdown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.When(string.Format("I should see Rating Tools icon in the left navigation menu of Landing Page if \'{0" +
                        "}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
 testRunner.Then(string.Format("I click on the Rating Tools Menu available in the Landing Page navigate to Rating" +
                        " Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to navigate to the Rating Tools module when user has re" +
            "quired Priviliges: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildResponsiveNavigation_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17389")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildResponsiveNavigation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "globalentryuser")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserDropdown", "DSASD SDSADD")]
        public virtual void VerifyThatUserCanAbleToNavigateToTheRatingToolsModuleWhenUserHasRequiredPriviliges_S1()
        {
            this.VerifyThatUserCanAbleToNavigateToTheRatingToolsModuleWhenUserHasRequiredPriviliges("S1", "globalentryuser", "Te$t1234", "DSASD SDSADD", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToNavigateToTheReportsModuleWhenUserHasRequiredPriviliges(string scenario, string username, string password, string userDropdown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to navigate to the Reports module when user has require" +
                    "d Priviliges", @__tags);
#line 90
this.ScenarioSetup(scenarioInfo);
#line 91
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And(string.Format("I am able to see the \'{0}\'", userDropdown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.When(string.Format("I should see Reports icon in the left navigation menu of Landing Page if \'{0}\' ha" +
                        "ve claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
 testRunner.Then(string.Format("I click on the Reports Menu available in the Landing Page navigate to Reports lan" +
                        "ding page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to navigate to the Reports module when user has require" +
            "d Priviliges: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildResponsiveNavigation_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17389")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildResponsiveNavigation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "mem")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserDropdown", "TEST MEM")]
        public virtual void VerifyThatUserCanAbleToNavigateToTheReportsModuleWhenUserHasRequiredPriviliges_S1()
        {
            this.VerifyThatUserCanAbleToNavigateToTheReportsModuleWhenUserHasRequiredPriviliges("S1", "mem", "Te$t1234", "TEST MEM", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToNavigateToTheUserManagementModuleWhenUserHasRequiredPriviliges(string scenario, string username, string password, string userDropdown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to navigate to the User Management module when user has" +
                    " required Priviliges", @__tags);
#line 102
this.ScenarioSetup(scenarioInfo);
#line 103
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 104
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.And(string.Format("I am able to see the \'{0}\'", userDropdown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.When(string.Format("I should see User Management icon in the left navigation menu of Landing Page if " +
                        "\'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
 testRunner.Then(string.Format("I click on the User Management Menu available in the Landing Page navigate to Use" +
                        "r Management landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to navigate to the User Management module when user has" +
            " required Priviliges: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildResponsiveNavigation_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17389")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildResponsiveNavigation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "mem")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserDropdown", "TEST MEM")]
        public virtual void VerifyThatUserCanAbleToNavigateToTheUserManagementModuleWhenUserHasRequiredPriviliges_S1()
        {
            this.VerifyThatUserCanAbleToNavigateToTheUserManagementModuleWhenUserHasRequiredPriviliges("S1", "mem", "Te$t1234", "TEST MEM", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToNavigateToTheTrainingModuleWhenUserHasRequiredPriviliges(string scenario, string username, string password, string userDropdown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to navigate to the Training module when user has requir" +
                    "ed Priviliges", @__tags);
#line 114
this.ScenarioSetup(scenarioInfo);
#line 115
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 116
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.And(string.Format("I am able to see the \'{0}\'", userDropdown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
 testRunner.When(string.Format("I should see Training icon in the left navigation menu of Landing Page if \'{0}\' h" +
                        "ave claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 119
 testRunner.Then(string.Format("I click on the Training Menu available in the Landing Page navigate to Training l" +
                        "anding page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to navigate to the Training module when user has requir" +
            "ed Priviliges: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildResponsiveNavigation_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17389")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildResponsiveNavigation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "mem")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserDropdown", "TEST MEM")]
        public virtual void VerifyThatUserCanAbleToNavigateToTheTrainingModuleWhenUserHasRequiredPriviliges_S1()
        {
            this.VerifyThatUserCanAbleToNavigateToTheTrainingModuleWhenUserHasRequiredPriviliges("S1", "mem", "Te$t1234", "TEST MEM", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToNavigateToTheMaintenanceToolsModuleWhenUserHasRequiredPriviliges(string scenario, string username, string password, string userDropdown, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to navigate to the Maintenance Tools module when user h" +
                    "as required Priviliges", @__tags);
#line 126
this.ScenarioSetup(scenarioInfo);
#line 127
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 128
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.And(string.Format("I am able to see the \'{0}\'", userDropdown), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
 testRunner.When(string.Format("I should see Maintenance Tools icon in the left navigation menu of Landing Page i" +
                        "f \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
 testRunner.Then(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to navigate to the Maintenance Tools module when user h" +
            "as required Priviliges: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildResponsiveNavigation_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17389")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildResponsiveNavigation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserDropdown", "SYSTEM ADMIN")]
        public virtual void VerifyThatUserCanAbleToNavigateToTheMaintenanceToolsModuleWhenUserHasRequiredPriviliges_S1()
        {
            this.VerifyThatUserCanAbleToNavigateToTheMaintenanceToolsModuleWhenUserHasRequiredPriviliges("S1", "crmSystemAdmin", "Te$t1234", "SYSTEM ADMIN", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
