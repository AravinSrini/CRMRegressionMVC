// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Dashboard.Dashboard_StationSummary
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSRFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR", null, ProgrammingLanguage.CSharp, new string[] {
                        "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR",
                        "21567",
                        "Sprint63"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")))
            {
                CRM.UITest.Scripts.Dashboard.Dashboard_StationSummary.Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSRFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyThePresenceOfViewAccountMetricsButton(string scenario, string username, string password, string viewAccountMetrics, string userType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of View Account Metrics button", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
testRunner.Then(string.Format("I will be see View Account Metrics button{0}based on User types{1}", viewAccountMetrics, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of View Account Metrics button: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Stationtest@rrd.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ViewAccountMetrics", "View Account Metrics")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "StationUser")]
        public virtual void VerifyThePresenceOfViewAccountMetricsButton_S1()
        {
            this.VerifyThePresenceOfViewAccountMetricsButton("s1", "Stationtest@rrd.com", "Te$t1234", "View Account Metrics", "StationUser", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of View Account Metrics button: s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst0011.sysadmn@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ViewAccountMetrics", "View Account Metrics")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "NonStationUser")]
        public virtual void VerifyThePresenceOfViewAccountMetricsButton_S2()
        {
            this.VerifyThePresenceOfViewAccountMetricsButton("s2", "tst0011.sysadmn@gmail.com", "Te$t1234", "View Account Metrics", "NonStationUser", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfCreateCSRButton(string scenario, string username, string password, string createCSR_Text, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Create CSR button", @__tags);
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.Then(string.Format("I will be able to see Create CSR button{0}", createCSR_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Create CSR button: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst0011.sysadmn@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CreateCSR_text", "Create CSR")]
        public virtual void VerifyThePresenceOfCreateCSRButton_S1()
        {
            this.VerifyThePresenceOfCreateCSRButton("s1", "tst0011.sysadmn@gmail.com", "Te$t1234", "Create CSR", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfSelectACSRTextInTheDropdownField(string scenario, string username, string password, string selectAcsr_Text, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of select a CSR text in the dropdown field", @__tags);
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then(string.Format("I will be able to see select a CSR text in the dropdown field {0}", selectAcsr_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of select a CSR text in the dropdown field: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst0011.sysadmn@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SelectAcsr_text", "Select a CSR...")]
        public virtual void VerifyThePresenceOfSelectACSRTextInTheDropdownField_S1()
        {
            this.VerifyThePresenceOfSelectACSRTextInTheDropdownField("s1", "tst0011.sysadmn@gmail.com", "Te$t1234", "Select a CSR...", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfGoToACSRText(string scenario, string username, string password, string goToACsr_Text, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Go to a CSR Text", @__tags);
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
 testRunner.Then(string.Format("I will be able to see Go to a CSR Text{0}", goToACsr_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Go to a CSR Text: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst0011.sysadmn@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GoToACsr_text", "Go to a CSR:")]
        public virtual void VerifyThePresenceOfGoToACSRText_S1()
        {
            this.VerifyThePresenceOfGoToACSRText("s1", "tst0011.sysadmn@gmail.com", "Te$t1234", "Go to a CSR:", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCustomerNameFromTheDropdownMatchesWithTheDatabaseCustomerName(string scenario, string username, string password, string userType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "Acceptance",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Customer Name from the dropdown matches with the Database Customer nam" +
                    "e", @__tags);
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
 testRunner.Then(string.Format("the Customer Names from the dropdown matches with Database Customer Names{0}based" +
                        " on the{1}", username, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Customer Name from the dropdown matches with the Database Customer nam" +
            "e: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "OP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "NonAdmins")]
        public virtual void VerifyTheCustomerNameFromTheDropdownMatchesWithTheDatabaseCustomerName_S1()
        {
            this.VerifyTheCustomerNameFromTheDropdownMatchesWithTheDatabaseCustomerName("s1", "OP", "Te$t1234", "NonAdmins", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Customer Name from the dropdown matches with the Database Customer nam" +
            "e: s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst0011.sysadmn")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "SYSAdmins")]
        public virtual void VerifyTheCustomerNameFromTheDropdownMatchesWithTheDatabaseCustomerName_S2()
        {
            this.VerifyTheCustomerNameFromTheDropdownMatchesWithTheDatabaseCustomerName("s2", "tst0011.sysadmn", "Te$t1234", "SYSAdmins", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCountOfCSRFromTheDropdownEqualsThePieChartTotalCount(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the count of CSR from the dropdown equals the PieChart total count", @__tags);
#line 59
this.ScenarioSetup(scenarioInfo);
#line 60
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.Then("the count of CSR from the dropdown matches with total PieChart count", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the count of CSR from the dropdown equals the PieChart total count: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst0011.sysadmn@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyTheCountOfCSRFromTheDropdownEqualsThePieChartTotalCount_S1()
        {
            this.VerifyTheCountOfCSRFromTheDropdownEqualsThePieChartTotalCount("s1", "tst0011.sysadmn@gmail.com", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheOnClickFunctionalityOfCreateCSRButtonWillBeNavigatedToAccountInformationPage(string scenario, string username, string password, string accountInformation_Text, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the on click functionality of create CSR button will be navigated to Accou" +
                    "nt Information page", @__tags);
#line 69
this.ScenarioSetup(scenarioInfo);
#line 70
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 71
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
 testRunner.And("I click on the create CSr button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.Then(string.Format("I will be navigated to the Account Information page{0}", accountInformation_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the on click functionality of create CSR button will be navigated to Accou" +
            "nt Information page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst0011.sysadmn@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountInformation_text", "Account Information")]
        public virtual void VerifyTheOnClickFunctionalityOfCreateCSRButtonWillBeNavigatedToAccountInformationPage_S1()
        {
            this.VerifyTheOnClickFunctionalityOfCreateCSRButtonWillBeNavigatedToAccountInformationPage("s1", "tst0011.sysadmn@gmail.com", "Te$t1234", "Account Information", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCustomerNameDisplayedForTheSearchCriteriaAppliedUnderACSRDropdown(string scenario, string username, string password, string search_Text, string userType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Customer Name displayed for the search criteria applied under a CSR dr" +
                    "opdown", @__tags);
#line 81
this.ScenarioSetup(scenarioInfo);
#line 82
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 83
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
 testRunner.Then(string.Format("I able to search the CSR from the dropdown{0}and{1}", search_Text, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Customer Name displayed for the search criteria applied under a CSR dr" +
            "opdown: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationtest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Search_text", "g")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "NonAdmins")]
        public virtual void VerifyTheCustomerNameDisplayedForTheSearchCriteriaAppliedUnderACSRDropdown_S1()
        {
            this.VerifyTheCustomerNameDisplayedForTheSearchCriteriaAppliedUnderACSRDropdown("s1", "stationtest", "Te$t1234", "g", "NonAdmins", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Customer Name displayed for the search criteria applied under a CSR dr" +
            "opdown: s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst0011.sysadmn@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Search_text", "vasa")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "Admins")]
        public virtual void VerifyTheCustomerNameDisplayedForTheSearchCriteriaAppliedUnderACSRDropdown_S2()
        {
            this.VerifyTheCustomerNameDisplayedForTheSearchCriteriaAppliedUnderACSRDropdown("s2", "tst0011.sysadmn@gmail.com", "Te$t1234", "vasa", "Admins", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheOnClickFunctionalityOfViewAccountMetricsButtonWillBeNavigatedToAccountMetricsPage(string scenario, string username, string password, string accountMetrics_Text, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the on click functionality of View Account Metrics button will be navigate" +
                    "d to Account Metrics page", @__tags);
#line 92
this.ScenarioSetup(scenarioInfo);
#line 93
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 94
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
 testRunner.And("I Click on the View Account Metrics button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.Then(string.Format("I will be navigated to the Account Metrics page{0}", accountMetrics_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the on click functionality of View Account Metrics button will be navigate" +
            "d to Account Metrics page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationtest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountMetrics_text", "Account Metrics")]
        public virtual void VerifyTheOnClickFunctionalityOfViewAccountMetricsButtonWillBeNavigatedToAccountMetricsPage_S1()
        {
            this.VerifyTheOnClickFunctionalityOfViewAccountMetricsButtonWillBeNavigatedToAccountMetricsPage("s1", "stationtest", "Te$t1234", "Account Metrics", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheSelectionCSRFromTheDropdownWillBeNavigatedToTheCorrespondingCSRDetailsPage(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the selection CSR from the dropdown will be navigated to the corresponding" +
                    " CSR Details page", @__tags);
#line 103
this.ScenarioSetup(scenarioInfo);
#line 104
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 105
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 106
 testRunner.Then("selecting of any CSR from the dropdown will be navigated to the corresponding CSR" +
                    " Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the selection CSR from the dropdown will be navigated to the corresponding" +
            " CSR Details page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Dashboard_AddbuttonsinDashboard_GoToCsrs_ViewAccountMetrics_CreateCSR")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst0011.sysadmn@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyTheSelectionCSRFromTheDropdownWillBeNavigatedToTheCorrespondingCSRDetailsPage_S1()
        {
            this.VerifyTheSelectionCSRFromTheDropdownWillBeNavigatedToTheCorrespondingCSRDetailsPage("s1", "tst0011.sysadmn@gmail.com", "Te$t1234", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
