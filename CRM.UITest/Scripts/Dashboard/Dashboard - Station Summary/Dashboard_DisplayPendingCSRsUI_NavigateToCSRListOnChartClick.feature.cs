// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Dashboard.Dashboard_StationSummary
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClickFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint63",
                        "21568",
                        "DashboardCSRChart"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")))
            {
                global::CRM.UITest.Scripts.Dashboard.Dashboard_StationSummary.Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClickFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the display a chart of the CSR statuses for Station Owner, Operations, Sal" +
            "es and Sales Management User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("fixed")]
        public virtual void VerifyTheDisplayAChartOfTheCSRStatusesForStationOwnerOperationsSalesAndSalesManagementUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the display a chart of the CSR statuses for Station Owner, Operations, Sal" +
                    "es and Sales Management User", new string[] {
                        "Functional",
                        "DBVerification",
                        "Regression",
                        "fixed"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("I am sales user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.Then("I will see a Pending CSR section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 9
 testRunner.And("Pending CSR section will display a chart of the CSR statuses of all open CSR’s fo" +
                    "r which <Username> Station Owner, Operations, Sales and Sales Management Users i" +
                    "s assosiated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("Total assosiated CSR\'s count will be displayed in the center of the chart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void VerifyTheDisplayAChartOfTheCSRStatusesForSystemConfigurationUser(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "DBVerification",
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the display a chart of the CSR statuses for system configuration user", @__tags);
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("I will see a Pending CSR section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
 testRunner.And("Pending CSR section will display a chart of the CSR statuses of all open CSR’s fo" +
                    "r which system configuration user is assosiated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("Total assosiated CSR\'s count will be displayed in the center of the chart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the display a chart of the CSR statuses for system configuration user: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "Arunmanikumar1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Password@123")]
        public virtual void VerifyTheDisplayAChartOfTheCSRStatusesForSystemConfigurationUser_S1()
        {
#line 13
this.VerifyTheDisplayAChartOfTheCSRStatusesForSystemConfigurationUser("S1", "Arunmanikumar1234", "Password@123", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheDisplayAChartOfTheCSRStatusesForPricingConfigurationUser(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the display a chart of the CSR statuses for pricing configuration user", @__tags);
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.Then("I will see a Pending CSR section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 29
 testRunner.And("Pending CSR section will display a chart of the CSR statuses of all open CSR’s fo" +
                    "r which pricing configuration user is assosiated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("Total assosiated CSR\'s count will be displayed in the center of the chart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the display a chart of the CSR statuses for pricing configuration user: S1" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "pricuser")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyTheDisplayAChartOfTheCSRStatusesForPricingConfigurationUser_S1()
        {
#line 25
this.VerifyTheDisplayAChartOfTheCSRStatusesForPricingConfigurationUser("S1", "pricuser", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheDisplayAChartOfTheCSRStatusesForSystemAdminUser(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the display a chart of the CSR statuses for system admin user", @__tags);
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.Then("I will see a Pending CSR section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 41
 testRunner.And("Pending CSR section will display a chart of the CSR statuses of all open CSR’s fo" +
                    "r which system admin user is assosiated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("Total assosiated CSR\'s count will be displayed in the center of the chart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the display a chart of the CSR statuses for system admin user: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "kavya.suryanarayanarao")]
        public virtual void VerifyTheDisplayAChartOfTheCSRStatusesForSystemAdminUser_S1()
        {
#line 37
this.VerifyTheDisplayAChartOfTheCSRStatusesForSystemAdminUser("S1", "kavya.suryanarayanarao", "kavya.suryanarayanarao", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheHoverOverFunctionalityOnStatusChart(string scenario, string username, string password, string status, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the hover over functionality on status chart", @__tags);
#line 49
this.ScenarioSetup(scenarioInfo);
#line 50
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 51
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
 testRunner.Then("I will see a Pending CSR section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
 testRunner.And(string.Format("I hover over a CSR status on the chart for the {0}", status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.And("the corresponding portion of data within the chart will be enlarged slightly to i" +
                    "llustrate the connection and the data displayed in the center will reflect the n" +
                    "umber of CSR\'s for the corresponding CSR status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the hover over functionality on status chart: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "In Progress")]
        public virtual void VerifyTheHoverOverFunctionalityOnStatusChart_S1()
        {
#line 49
this.VerifyTheHoverOverFunctionalityOnStatusChart("S1", "kavya.suryanarayanarao", "kavya.suryanarayanarao", "In Progress", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the hover over functionality on status chart: S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Pending Regional Manager Approval")]
        public virtual void VerifyTheHoverOverFunctionalityOnStatusChart_S2()
        {
#line 49
this.VerifyTheHoverOverFunctionalityOnStatusChart("S2", "kavya.suryanarayanarao", "kavya.suryanarayanarao", "Pending Regional Manager Approval", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the hover over functionality on status chart: S3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Pending System Configuration")]
        public virtual void VerifyTheHoverOverFunctionalityOnStatusChart_S3()
        {
#line 49
this.VerifyTheHoverOverFunctionalityOnStatusChart("S3", "kavya.suryanarayanarao", "kavya.suryanarayanarao", "Pending System Configuration", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the hover over functionality on status chart: S4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Pending Pricing Configuration")]
        public virtual void VerifyTheHoverOverFunctionalityOnStatusChart_S4()
        {
#line 49
this.VerifyTheHoverOverFunctionalityOnStatusChart("S4", "kavya.suryanarayanarao", "kavya.suryanarayanarao", "Pending Pricing Configuration", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the hover over functionality on status chart: S5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Denied")]
        public virtual void VerifyTheHoverOverFunctionalityOnStatusChart_S5()
        {
#line 49
this.VerifyTheHoverOverFunctionalityOnStatusChart("S5", "kavya.suryanarayanarao", "kavya.suryanarayanarao", "Denied", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCSRListWhenPendingRegionalManagerStatusIsSelectedFromDashboard(string scenario, string username, string password, string status, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the CSR list when Pending regional manager status is selected from dashboa" +
                    "rd", @__tags);
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
 testRunner.And("I click on Pending regional manager status from the chart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.Then("I will navigate to CSR list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 70
 testRunner.And(string.Format("CSR’s of the selected status {0} will be displayed and count should match from da" +
                        "shboard", status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the CSR list when Pending regional manager status is selected from dashboa" +
            "rd: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Pending Regional Manager Approval")]
        public virtual void VerifyTheCSRListWhenPendingRegionalManagerStatusIsSelectedFromDashboard_S1()
        {
#line 65
this.VerifyTheCSRListWhenPendingRegionalManagerStatusIsSelectedFromDashboard("S1", "kavya.suryanarayanarao", "kavya.suryanarayanarao", "Pending Regional Manager Approval", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCSRListWhenInProgressStatusIsSelectedFromDashboard(string scenario, string username, string password, string status, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the CSR list when In Progress status is selected from dashboard", @__tags);
#line 77
this.ScenarioSetup(scenarioInfo);
#line 78
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 79
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
 testRunner.And("I click on In Progress status from the chart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.Then("I will navigate to CSR list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 82
 testRunner.And(string.Format("CSR’s of the selected status {0} will be displayed and count should match from da" +
                        "shboard", status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the CSR list when In Progress status is selected from dashboard: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "In Progress")]
        public virtual void VerifyTheCSRListWhenInProgressStatusIsSelectedFromDashboard_S1()
        {
#line 77
this.VerifyTheCSRListWhenInProgressStatusIsSelectedFromDashboard("S1", "kavya.suryanarayanarao", "kavya.suryanarayanarao", "In Progress", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCSRListWhenDeniedStatusIsSelectedFromDashboard(string scenario, string username, string password, string status, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the CSR list when Denied status is selected from dashboard", @__tags);
#line 89
this.ScenarioSetup(scenarioInfo);
#line 90
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 91
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
 testRunner.And("I click on Denied status from the chart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.Then("I will navigate to CSR list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 94
 testRunner.And(string.Format("CSR’s of the selected status {0} will be displayed and count should match from da" +
                        "shboard", status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the CSR list when Denied status is selected from dashboard: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Denied")]
        public virtual void VerifyTheCSRListWhenDeniedStatusIsSelectedFromDashboard_S1()
        {
#line 89
this.VerifyTheCSRListWhenDeniedStatusIsSelectedFromDashboard("S1", "kavya.suryanarayanarao", "kavya.suryanarayanarao", "Denied", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCSRListWhenWaitingToProcessStatusIsSelectedFromDashboard(string scenario, string username, string password, string status, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the CSR list when Waiting to Process status is selected from dashboard", @__tags);
#line 101
this.ScenarioSetup(scenarioInfo);
#line 102
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 103
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
 testRunner.And("I click on Waiting to Process status from the chart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.Then("I will navigate to CSR list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 106
 testRunner.And(string.Format("CSR’s of the selected status {0} will be displayed and count should match from da" +
                        "shboard", status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the CSR list when Waiting to Process status is selected from dashboard: S1" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Waiting to Process")]
        public virtual void VerifyTheCSRListWhenWaitingToProcessStatusIsSelectedFromDashboard_S1()
        {
#line 101
this.VerifyTheCSRListWhenWaitingToProcessStatusIsSelectedFromDashboard("S1", "kavya.suryanarayanarao", "kavya.suryanarayanarao", "Waiting to Process", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCSRListWhenPendingSystemConfigurationStatusIsSelectedFromDashboard(string scenario, string username, string password, string status, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the CSR list when Pending System Configuration status is selected from das" +
                    "hboard", @__tags);
#line 113
this.ScenarioSetup(scenarioInfo);
#line 114
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 115
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 116
 testRunner.And("I click on Pending System Configuration status from the chart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.Then("I will navigate to CSR list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 118
 testRunner.And(string.Format("CSR’s of the selected status {0} will be displayed and count should match from da" +
                        "shboard", status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the CSR list when Pending System Configuration status is selected from das" +
            "hboard: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Pending System Configuration")]
        public virtual void VerifyTheCSRListWhenPendingSystemConfigurationStatusIsSelectedFromDashboard_S1()
        {
#line 113
this.VerifyTheCSRListWhenPendingSystemConfigurationStatusIsSelectedFromDashboard("S1", "kavya.suryanarayanarao", "kavya.suryanarayanarao", "Pending System Configuration", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCSRListWhenPendingPricingConfigurationStatusIsSelectedFromDashboard(string scenario, string username, string password, string status, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the CSR list when Pending Pricing Configuration status is selected from da" +
                    "shboard", @__tags);
#line 125
this.ScenarioSetup(scenarioInfo);
#line 126
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 127
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 128
 testRunner.And("I click on Pending Pricing Configuration status from the chart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.Then("I will navigate to CSR list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 130
 testRunner.And(string.Format("CSR’s of the selected status {0} will be displayed and count should match from da" +
                        "shboard", status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the CSR list when Pending Pricing Configuration status is selected from da" +
            "shboard: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "kavya.suryanarayanarao")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Pending Pricing Configuration")]
        public virtual void VerifyTheCSRListWhenPendingPricingConfigurationStatusIsSelectedFromDashboard_S1()
        {
#line 125
this.VerifyTheCSRListWhenPendingPricingConfigurationStatusIsSelectedFromDashboard("S1", "kavya.suryanarayanarao", "kavya.suryanarayanarao", "Pending Pricing Configuration", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCSRChartWhenNoCSRExistsForTheUser(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the CSR chart when no CSR exists for the user", @__tags);
#line 137
this.ScenarioSetup(scenarioInfo);
#line 138
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 139
 testRunner.When("I arrive on the Dashboard landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 140
 testRunner.Then("zero will be displayed in the center of the chart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 141
 testRunner.And("pie circle will display in gray color", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the CSR chart when no CSR exists for the user: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Dashboard_DisplayPendingCSRsUI_NavigateToCSRListOnChartClick")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint63")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("21568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DashboardCSRChart")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "noacc123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyTheCSRChartWhenNoCSRExistsForTheUser_S1()
        {
#line 137
this.VerifyTheCSRChartWhenNoCSRExistsForTheUser("S1", "noacc123", "Te$t1234", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
