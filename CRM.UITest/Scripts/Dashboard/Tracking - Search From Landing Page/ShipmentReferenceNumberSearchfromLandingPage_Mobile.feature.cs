// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Dashboard.Tracking_SearchFromLandingPage
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class Tracking_ShipmentReferenceNumberSearchfromLandingPage_MobileFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "ShipmentReferenceNumberSearchfromLandingPage_Mobile.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Mobile", null, ProgrammingLanguage.CSharp, new string[] {
                        "TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage",
                        "18391",
                        "Sprint60"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Mobile")))
            {
                global::CRM.UITest.Scripts.Dashboard.Tracking_SearchFromLandingPage.Tracking_ShipmentReferenceNumberSearchfromLandingPage_MobileFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void TestToVerifyTheErrorMessageWhenUserNotEnteredReferenceNumber(string scenario, string windowWidth, string windowHeight, string enterReferenceNumberText, string errormsg, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the error message when user not entered Reference Number", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
testRunner.When(string.Format("I have not entered the \'{0}\' values in the search box", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
testRunner.And("I click on Search arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
testRunner.Then(string.Format("I see the \'{0}\' message in the pop up", errormsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the error message when user not entered Reference Number: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "768")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "640")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Errormsg", "Please enter tracking numbers.")]
        public virtual void TestToVerifyTheErrorMessageWhenUserNotEnteredReferenceNumber_S1()
        {
#line 5
this.TestToVerifyTheErrorMessageWhenUserNotEnteredReferenceNumber("s1", "768", "640", "", "Please enter tracking numbers.", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringOneValidReferenceNumber(string scenario, string windowWidth, string windowHeight, string enterReferenceNumberText, string tracking, string refno, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Acceptance@Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Reference Number Search by entering one valid Reference Number" +
                    "", @__tags);
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
testRunner.And(string.Format("I enter the tracking numbers \'{0}\'", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
testRunner.When("I click on Search arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
testRunner.Then(string.Format("I navigate to \'{0}\' Details page", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 25
testRunner.And(string.Format("I see the results for the entered single reference number in mobile device \'{0}\'", refno), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Reference Number Search by entering one valid Reference Number" +
            ": s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance@Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "768")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "640")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "PIT01172271")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Refno", "PIT01172271")]
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringOneValidReferenceNumber_S1()
        {
#line 18
this.TestToVerifyTheReferenceNumberSearchByEnteringOneValidReferenceNumber("s1", "768", "640", "PIT01172271", "Tracking", "PIT01172271", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringMoreThanOneValidReferenceNumber(string scenario, string windowWidth, string windowHeight, string enterReferenceNumberText, string tracking, string @ref, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Acceptance@Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Reference Number Search by entering more than one valid Refere" +
                    "nce Number", @__tags);
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
testRunner.And(string.Format("I enter the tracking numbers \'{0}\'", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
testRunner.When("I click on Search arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
testRunner.Then(string.Format("I navigate to \'{0}\' Details page", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
testRunner.And(string.Format("I see the results for the entered reference numbers in mobile device \'{0}\'", @ref), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Reference Number Search by entering more than one valid Refere" +
            "nce Number: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance@Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "768")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "640")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "9900003,9900002,9900001,PIT01172238,9919838")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Ref", "9900003,9900002,9900001,PIT01172238,9919838")]
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringMoreThanOneValidReferenceNumber_S1()
        {
#line 32
this.TestToVerifyTheReferenceNumberSearchByEnteringMoreThanOneValidReferenceNumber("s1", "768", "640", "9900003,9900002,9900001,PIT01172238,9919838", "Tracking", "9900003,9900002,9900001,PIT01172238,9919838", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheErrorMessageForEnteringOneInvalidReferenceNumbers(string scenario, string windowWidth, string windowHeight, string enterReferenceNumberText, string errormsg_Invalid, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Error message for entering one invalid Reference Numbers", @__tags);
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
testRunner.When(string.Format("I pass the \'{0}\' values in the search box", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
testRunner.And("I click on Search arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.Then(string.Format("I can see the \'{0}\' message in the pop up for entering invalid numbers", errormsg_Invalid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
testRunner.And("I click on close button in the pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
testRunner.And("I should be displayed with Tracking search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Error message for entering one invalid Reference Numbers: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "768")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "640")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "3453534535")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Errormsg_invalid", "No data found for entered reference number(s).")]
        public virtual void TestToVerifyTheErrorMessageForEnteringOneInvalidReferenceNumbers_S1()
        {
#line 46
this.TestToVerifyTheErrorMessageForEnteringOneInvalidReferenceNumbers("s1", "768", "640", "3453534535", "No data found for entered reference number(s).", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheErrorMessageForEnteringMoreThanOneInvalidReferenceNumbers(string scenario, string windowWidth, string windowHeight, string enterReferenceNumberText, string errormsg_Invalid, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Error message for entering more than one invalid Reference Num" +
                    "bers", @__tags);
#line 61
this.ScenarioSetup(scenarioInfo);
#line 62
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 63
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
testRunner.When(string.Format("I pass the \'{0}\' values in the search box", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
testRunner.And("I click on Search arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
testRunner.Then(string.Format("I can see the \'{0}\' message in the pop up for entering invalid numbers", errormsg_Invalid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 68
testRunner.And("I click on close button in the pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
testRunner.And("I should be displayed with Tracking search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Error message for entering more than one invalid Reference Num" +
            "bers: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "768")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "640")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "5.35345E+20,3.34535E+14,345354535,3453534535")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Errormsg_invalid", "No data found for entered reference number(s).")]
        public virtual void TestToVerifyTheErrorMessageForEnteringMoreThanOneInvalidReferenceNumbers_S1()
        {
#line 61
this.TestToVerifyTheErrorMessageForEnteringMoreThanOneInvalidReferenceNumbers("s1", "768", "640", "5.35345E+20,3.34535E+14,345354535,3453534535", "No data found for entered reference number(s).", ((string[])(null)));
#line hidden
        }
        
        public virtual void TrackingWithTheCombinationOfBothValidAndInvalidReferenceNumbers(string windowWidth, string windowHeight, string enterReferenceNumberText, string tracking, string warningmsg, string @ref, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional@Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Tracking with the combination of both valid and invalid Reference Numbers", @__tags);
#line 76
this.ScenarioSetup(scenarioInfo);
#line 77
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 78
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
testRunner.When(string.Format("I enter the \'{0}\' values in the search box", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
testRunner.And("I click on Search arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
testRunner.Then(string.Format("I should be displayed with the \'{0}\' message in the pop up", warningmsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 83
testRunner.And(string.Format("Pop up displays all the list of tracking numbers that not exist \'{0}\'", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
testRunner.And("I clicked on close button in the warning pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
testRunner.And(string.Format("I navigate to \'{0}\' Details page", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
testRunner.And(string.Format("I see the results for the entered reference numbers in mobile device \'{0}\'", @ref), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Tracking with the combination of both valid and invalid Reference Numbers: 768")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional@Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "768")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "768")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "640")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "MKE30128897,PIT01172270,PIT01172271,5.35345E+20,3.34535E+14,345354535,3453534535")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:warningmsg", "Tracking details were not found for the following tracking numbers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Ref", "MKE30128897,PIT01172270,PIT01172271")]
        public virtual void TrackingWithTheCombinationOfBothValidAndInvalidReferenceNumbers_768()
        {
#line 76
this.TrackingWithTheCombinationOfBothValidAndInvalidReferenceNumbers("768", "640", "MKE30128897,PIT01172270,PIT01172271,5.35345E+20,3.34535E+14,345354535,3453534535", "Tracking", "Tracking details were not found for the following tracking numbers", "MKE30128897,PIT01172270,PIT01172271", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringMoreThan10ValidReferenceNumbers(string scenario, string windowWidth, string windowHeight, string enterReferenceNumberText, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Reference Number Search by entering more than 10 valid Referen" +
                    "ce Numbers", @__tags);
#line 93
this.ScenarioSetup(scenarioInfo);
#line 94
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 95
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
testRunner.And(string.Format("I enter the tracking numbers \'{0}\'", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
testRunner.When("I verify the entered tracking numbers searchbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
testRunner.Then(string.Format("I should be able to enter only ten tracking reference numbers \'{0}\'", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Reference Number Search by entering more than 10 valid Referen" +
            "ce Numbers: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "768")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "640")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "123456789,MKE30128897,PIT01172270,PIT01172271,AWG005017348,9900003,9900002,990000" +
            "1,PIT01172238,9919838,9919837")]
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringMoreThan10ValidReferenceNumbers_S1()
        {
#line 93
this.TestToVerifyTheReferenceNumberSearchByEnteringMoreThan10ValidReferenceNumbers("s1", "768", "640", "123456789,MKE30128897,PIT01172270,PIT01172271,AWG005017348,9900003,9900002,990000" +
                    "1,PIT01172238,9919838,9919837", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheNavigationMenuForTrackingWithoutLogin(string scenario, string windowWidth, string windowHeight, string enterReferenceNumberText, string tracking, string refno, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional@Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Navigation menu for Tracking without login", @__tags);
#line 106
this.ScenarioSetup(scenarioInfo);
#line 107
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 108
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
testRunner.And(string.Format("I enter the tracking numbers \'{0}\'", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
testRunner.When("I click on Search arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
testRunner.Then(string.Format("I navigate to \'{0}\' Details page", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 113
testRunner.And(string.Format("I see the results for the entered single reference number \'{0}\'", refno), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
testRunner.And("I click on the on hamburger menu icon in the mobile device", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
testRunner.And("Navigation menu have only Tracking icon on left wizard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
testRunner.And("I should not display with any other icons on left wizard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Navigation menu for Tracking without login: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional@Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "768")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "640")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "PIT01172271")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Refno", "PIT01172271")]
        public virtual void TestToVerifyTheNavigationMenuForTrackingWithoutLogin_S1()
        {
#line 106
this.TestToVerifyTheNavigationMenuForTrackingWithoutLogin("s1", "768", "640", "PIT01172271", "Tracking", "PIT01172271", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyFileUploadAreaIsHidden(string scenario, string windowWidth, string windowHeight, string upload, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify file upload area is hidden", @__tags);
#line 123
this.ScenarioSetup(scenarioInfo);
#line 124
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 125
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
testRunner.When(string.Format("I Re-size the browser to mobile device \'{0}\' and \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 127
testRunner.Then(string.Format("I should not be displayed with Upload Button in landing page {0}", upload), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify file upload area is hidden: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "768")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "640")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Upload", "")]
        public virtual void TestToVerifyFileUploadAreaIsHidden_S1()
        {
#line 123
this.TestToVerifyFileUploadAreaIsHidden("s1", "768", "640", "", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
