// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Dashboard.Tracking_SearchFromLandingPage
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class Tracking_ShipmentReferenceNumberSearchfromLandingPage_DesktopFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "ShipmentReferenceNumberSearchfromLandingPage_Desktop.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop", null, ProgrammingLanguage.CSharp, new string[] {
                        "TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage",
                        "18391",
                        "Sprint60"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop")))
            {
                global::CRM.UITest.Scripts.Dashboard.Tracking_SearchFromLandingPage.Tracking_ShipmentReferenceNumberSearchfromLandingPage_DesktopFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void TestToVerifyTheErrorMessageWhenUserNotEnteredReferenceNumber(string scenario, string enterReferenceNumberText, string errormsg, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the error message when user not entered Reference Number", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
testRunner.When(string.Format("I have not entered the \'{0}\' values in the search box", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
testRunner.And("I click on Search arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
testRunner.Then(string.Format("I see the \'{0}\' message in the pop up", errormsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the error message when user not entered Reference Number: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Errormsg", "Please enter tracking numbers.")]
        public virtual void TestToVerifyTheErrorMessageWhenUserNotEnteredReferenceNumber_S1()
        {
#line 5
this.TestToVerifyTheErrorMessageWhenUserNotEnteredReferenceNumber("s1", "", "Please enter tracking numbers.", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringOneValidReferenceNumber(string scenario, string enterReferenceNumberText, string tracking, string refno, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Acceptance@Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Reference Number Search by entering one valid Reference Number" +
                    "", @__tags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
testRunner.And(string.Format("I enter the tracking numbers \'{0}\'", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
testRunner.When("I click on Search arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
testRunner.Then(string.Format("I navigate to \'{0}\' Details page", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
testRunner.And(string.Format("I see the results for the entered single reference number \'{0}\'", refno), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Reference Number Search by entering one valid Reference Number" +
            ": s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance@Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "9919838")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Refno", "9919838")]
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringOneValidReferenceNumber_S1()
        {
#line 17
this.TestToVerifyTheReferenceNumberSearchByEnteringOneValidReferenceNumber("s1", "9919838", "Tracking", "9919838", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringMoreThanOneValidReferenceNumbers(string scenario, string enterReferenceNumberText, string tracking, string @ref, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Acceptance@Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Reference Number Search by entering more than one valid Refere" +
                    "nce Numbers", @__tags);
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 32
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
testRunner.And(string.Format("I enter the tracking numbers \'{0}\'", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
testRunner.When("I click on Search arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
testRunner.Then(string.Format("I navigate to \'{0}\' Details page", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 36
testRunner.And(string.Format("I see the results for the entered reference numbers \'{0}\'", @ref), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Reference Number Search by entering more than one valid Refere" +
            "nce Numbers: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance@Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "123456789,MKE30128897,PIT01172270,PIT01172271,AWG005017348,9900003,9900002,990000" +
            "1,PIT01172238,9919838")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Ref", "123456789,MKE30128897,PIT01172270,PIT01172271,AWG005017348,9900003,9900002,990000" +
            "1,PIT01172238,9919838")]
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringMoreThanOneValidReferenceNumbers_S1()
        {
#line 30
this.TestToVerifyTheReferenceNumberSearchByEnteringMoreThanOneValidReferenceNumbers("s1", "123456789,MKE30128897,PIT01172270,PIT01172271,AWG005017348,9900003,9900002,990000" +
                    "1,PIT01172238,9919838", "Tracking", "123456789,MKE30128897,PIT01172270,PIT01172271,AWG005017348,9900003,9900002,990000" +
                    "1,PIT01172238,9919838", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringOneInvalidReferenceNumber(string scenario, string enterReferenceNumberText, string tracking, string errormsg_Invalid, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Reference Number Search by entering one invalid Reference Numb" +
                    "er", @__tags);
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
testRunner.And(string.Format("I enter the tracking numbers \'{0}\'", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
testRunner.When("I click on Search arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
testRunner.Then(string.Format("I can see the \'{0}\' message in the pop up for entering invalid numbers", errormsg_Invalid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 49
testRunner.And("I click on close button in the pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
testRunner.And("I should be displayed with Tracking search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Reference Number Search by entering one invalid Reference Numb" +
            "er: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "3453534535")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Errormsg_invalid", "No data found for entered reference number(s).")]
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringOneInvalidReferenceNumber_S1()
        {
#line 43
this.TestToVerifyTheReferenceNumberSearchByEnteringOneInvalidReferenceNumber("s1", "3453534535", "Tracking", "No data found for entered reference number(s).", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringMoreThanOneInvalidReferenceNumber(string scenario, string enterReferenceNumberText, string errormsg_Invalid, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Reference Number Search by entering more than one invalid Refe" +
                    "rence Number", @__tags);
#line 57
this.ScenarioSetup(scenarioInfo);
#line 58
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
testRunner.When(string.Format("I pass the \'{0}\' values in the search box", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
testRunner.And("I click on Search arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
testRunner.Then(string.Format("I can see the \'{0}\' message in the pop up for entering invalid numbers", errormsg_Invalid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
testRunner.And("I click on close button in the pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
testRunner.And("I should be displayed with Tracking search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Reference Number Search by entering more than one invalid Refe" +
            "rence Number: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "5.35345E+20,3.34535E+14,345354535,3453534535")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Errormsg_invalid", "No data found for entered reference number(s).")]
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringMoreThanOneInvalidReferenceNumber_S1()
        {
#line 57
this.TestToVerifyTheReferenceNumberSearchByEnteringMoreThanOneInvalidReferenceNumber("s1", "5.35345E+20,3.34535E+14,345354535,3453534535", "No data found for entered reference number(s).", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheTrackingWithTheCombinationOfBothValidAndInvalidReferenceNumbers(string enterReferenceNumberText, string warningmsg, string @ref, string tracking, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional@Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Tracking with the combination of both valid and invalid Reference Numb" +
                    "ers", @__tags);
#line 71
this.ScenarioSetup(scenarioInfo);
#line 72
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 73
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
testRunner.When(string.Format("I enter the \'{0}\' values in the search box", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
testRunner.And("I click on Search arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
testRunner.Then(string.Format("I should be displayed with the \'{0}\' message in the pop up", warningmsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 77
testRunner.And(string.Format("Pop up displays all the list of tracking numbers that not exist \'{0}\'", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
testRunner.And("I clicked on close button in the warning pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
testRunner.And(string.Format("I navigate to \'{0}\' Details page", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
testRunner.And(string.Format("I see list of Tracking Results based on the entered valid numbers \'{0}\'", @ref), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Tracking with the combination of both valid and invalid Reference Numb" +
            "ers: MKE30128897,PIT01172270,PIT01172271,5.35345E+20,3.34535E+14,345354535,34535" +
            "34535")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional@Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MKE30128897,PIT01172270,PIT01172271,5.35345E+20,3.34535E+14,345354535,3453534535")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "MKE30128897,PIT01172270,PIT01172271,5.35345E+20,3.34535E+14,345354535,3453534535")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:warningmsg", "Tracking details were not found for the following tracking numbers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Ref", "MKE30128897,PIT01172270,PIT01172271")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        public virtual void VerifyTheTrackingWithTheCombinationOfBothValidAndInvalidReferenceNumbers_MKE30128897PIT01172270PIT011722715_35345E203_34535E143453545353453534535()
        {
#line 71
this.VerifyTheTrackingWithTheCombinationOfBothValidAndInvalidReferenceNumbers("MKE30128897,PIT01172270,PIT01172271,5.35345E+20,3.34535E+14,345354535,3453534535", "Tracking details were not found for the following tracking numbers", "MKE30128897,PIT01172270,PIT01172271", "Tracking", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringMoreThan10ValidReferenceNumbers(string scenario, string enterReferenceNumberText, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Reference Number Search by entering more than 10 valid Referen" +
                    "ce Numbers", @__tags);
#line 87
this.ScenarioSetup(scenarioInfo);
#line 88
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 89
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
testRunner.And(string.Format("I enter the tracking numbers \'{0}\'", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
testRunner.When("I verify the entered tracking numbers searchbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
testRunner.Then(string.Format("I should be able to enter only ten tracking reference numbers \'{0}\'", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Reference Number Search by entering more than 10 valid Referen" +
            "ce Numbers: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "123456789,MKE30128897,PIT01172270,PIT01172271,AWG005017348,9900003,9900002,990000" +
            "1,PIT01172238,9919838,9919837")]
        public virtual void TestToVerifyTheReferenceNumberSearchByEnteringMoreThan10ValidReferenceNumbers_S1()
        {
#line 87
this.TestToVerifyTheReferenceNumberSearchByEnteringMoreThan10ValidReferenceNumbers("s1", "123456789,MKE30128897,PIT01172270,PIT01172271,AWG005017348,9900003,9900002,990000" +
                    "1,PIT01172238,9919838,9919837", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheTrackingIconInTheNavigationMenuWithoutLogin(string scenario, string enterReferenceNumberText, string tracking, string @ref, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional@Acceptance@EndtoEnd"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Tracking icon in the navigation menu without login", @__tags);
#line 99
this.ScenarioSetup(scenarioInfo);
#line 100
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 101
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
testRunner.And(string.Format("I enter the tracking numbers \'{0}\'", enterReferenceNumberText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
testRunner.When("I click on Search arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
testRunner.Then(string.Format("I navigate to \'{0}\' Details page", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 105
testRunner.And(string.Format("I see the results for the entered reference numbers \'{0}\'", @ref), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
testRunner.And("Navigation menu have only Tracking icon on left wizard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
testRunner.And("I should not display with any other icons on left wizard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Tracking icon in the navigation menu without login: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional@Acceptance@EndtoEnd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumberText", "PIT01172271")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Ref", "PIT01172271")]
        public virtual void TestToVerifyTheTrackingIconInTheNavigationMenuWithoutLogin_S1()
        {
#line 99
this.TestToVerifyTheTrackingIconInTheNavigationMenuWithoutLogin("s1", "PIT01172271", "Tracking", "PIT01172271", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheErrorMessageOfUploadTrackingButtonFunctionalityWhenUserNotHavingAnyTrackingNumbersInTheUploadedFile(string scenario, string errormsg, string path, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Error message of Upload Tracking button Functionality when use" +
                    "r not having any tracking numbers in the uploaded file", @__tags);
#line 114
this.ScenarioSetup(scenarioInfo);
#line 115
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 116
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
testRunner.When("I click on upload button from homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 118
testRunner.And(string.Format("I have attached the template using \"{0}\"", path), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
testRunner.And("I click on submit button from landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
testRunner.Then(string.Format("I should be displayed with the \"{0}\"", errormsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Error message of Upload Tracking button Functionality when use" +
            "r not having any tracking numbers in the uploaded file: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Errormsg", "Uploaded file does not contain any tracking numbers. Enter tracking number and up" +
            "load file.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:path", "\\Emptyfile\\ShipmentTrackingTemplate.xlsx")]
        public virtual void TestToVerifyTheErrorMessageOfUploadTrackingButtonFunctionalityWhenUserNotHavingAnyTrackingNumbersInTheUploadedFile_S1()
        {
#line 114
this.TestToVerifyTheErrorMessageOfUploadTrackingButtonFunctionalityWhenUserNotHavingAnyTrackingNumbersInTheUploadedFile("s1", "Uploaded file does not contain any tracking numbers. Enter tracking number and up" +
                    "load file.", "\\Emptyfile\\ShipmentTrackingTemplate.xlsx", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheUploadTrackingButtonFunctionalityWhenUserHavingValidReferenceNumbersInTheUploadedFile(string scenario, string tracking, string path, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Acceptance@Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Upload Tracking button Functionality when user having valid re" +
                    "ference numbers in the uploaded file", @__tags);
#line 127
this.ScenarioSetup(scenarioInfo);
#line 128
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 129
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
testRunner.When("I click on upload button from homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
testRunner.And(string.Format("I have attached the template using \"{0}\"", path), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
testRunner.And("I click on submit button from landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
testRunner.Then("I should navigate to tracking details screen for uploadedfile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 134
testRunner.And(string.Format("Ishould be able to see the results of tracking numbers for \'{0}\'", path), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Upload Tracking button Functionality when user having valid re" +
            "ference numbers in the uploaded file: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance@Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:path", "..\\..\\Scripts\\TestData\\Testfiles_trackingupload\\Allvalidreferences\\ShipmentTracki" +
            "ngTemplate.xlsx")]
        public virtual void TestToVerifyTheUploadTrackingButtonFunctionalityWhenUserHavingValidReferenceNumbersInTheUploadedFile_S1()
        {
#line 127
this.TestToVerifyTheUploadTrackingButtonFunctionalityWhenUserHavingValidReferenceNumbersInTheUploadedFile("s1", "Tracking", "..\\..\\Scripts\\TestData\\Testfiles_trackingupload\\Allvalidreferences\\ShipmentTracki" +
                    "ngTemplate.xlsx", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheUploadTrackingButtonFunctionalityWhenUserHavingInvalidReferenceNumbersInTheUploadedFile(string scenario, string path, string errormsgforallinvalid, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Acceptance@Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Upload Tracking button Functionality when user having invalid " +
                    "reference numbers in the uploaded file", @__tags);
#line 141
this.ScenarioSetup(scenarioInfo);
#line 142
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 143
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
testRunner.When("I click on upload button from homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 145
testRunner.And(string.Format("I have attached the template using \"{0}\"", path), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
testRunner.And("I click on submit button from landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
testRunner.Then(string.Format("Ishould bedisplaying with \'{0}\' popup for all invaliddata", errormsgforallinvalid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Upload Tracking button Functionality when user having invalid " +
            "reference numbers in the uploaded file: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance@Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:path", "\\Allinvalidrefernces\\ShipmentTrackingTemplate.xlsx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:errormsgforallinvalid", "No data found for entered reference number(s).")]
        public virtual void TestToVerifyTheUploadTrackingButtonFunctionalityWhenUserHavingInvalidReferenceNumbersInTheUploadedFile_S1()
        {
#line 141
this.TestToVerifyTheUploadTrackingButtonFunctionalityWhenUserHavingInvalidReferenceNumbersInTheUploadedFile("s1", "\\Allinvalidrefernces\\ShipmentTrackingTemplate.xlsx", "No data found for entered reference number(s).", ((string[])(null)));
#line hidden
        }
        
        public virtual void UploadTrackingButtonFunctionalityWhenUserHavingCombinationOfBothValidAndInvalidReferenceNumbersInTheUploadedFile(string scenario, string path, string warningmessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional@Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Upload Tracking button Functionality when user having combination of both valid a" +
                    "nd invalid reference numbers in the uploaded file", @__tags);
#line 154
this.ScenarioSetup(scenarioInfo);
#line 155
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 156
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 157
testRunner.When("I click on upload button from homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 158
testRunner.And(string.Format("I have attached the template using \"{0}\"", path), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
testRunner.And("I click on submit button from landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
testRunner.Then(string.Format("I should be displayed with \'{0}\' for invalid tracking numbers and results for val" +
                        "id refrences \"{1}\" from homepage upload", warningmessage, path), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Upload Tracking button Functionality when user having combination of both valid a" +
            "nd invalid reference numbers in the uploaded file: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional@Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:path", "..\\..\\Scripts\\TestData\\Testfiles_trackingupload\\Combinationofvalidandinvalid\\Ship" +
            "mentTrackingTemplate.xlsx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:warningmessage", "Tracking details were not found for the following tracking numbers")]
        public virtual void UploadTrackingButtonFunctionalityWhenUserHavingCombinationOfBothValidAndInvalidReferenceNumbersInTheUploadedFile_S1()
        {
#line 154
this.UploadTrackingButtonFunctionalityWhenUserHavingCombinationOfBothValidAndInvalidReferenceNumbersInTheUploadedFile("s1", "..\\..\\Scripts\\TestData\\Testfiles_trackingupload\\Combinationofvalidandinvalid\\Ship" +
                    "mentTrackingTemplate.xlsx", "Tracking details were not found for the following tracking numbers", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheUploadFunctionalityByEnteringMoreThan25RefenceNumbersInTheTemplate(string scenario, string path, string messageformaxnumbers, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the upload functionality by entering more than 25 refence numbers " +
                    "in the template", @__tags);
#line 167
this.ScenarioSetup(scenarioInfo);
#line 168
testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 169
testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
testRunner.When("I click on upload button from homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 171
testRunner.And(string.Format("I have attached the template using \"{0}\"", path), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
testRunner.And("I click on submit button from landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
testRunner.Then(string.Format("I should be displayed with the error poup for more than maximum \"{0}\"", messageformaxnumbers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the upload functionality by entering more than 25 refence numbers " +
            "in the template: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Tracking_ShipmentReferenceNumberSearchfromLandingPage_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TrackingShipmentReferenceNumberSearchformCRMMVCLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:path", "..\\..\\Scripts\\TestData\\Testfiles_trackingupload\\Morethan25refernces\\ShipmentTrack" +
            "ingTemplate.xlsx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:messageformaxnumbers", "This file exceeds the maximum of 25 tracking numbers")]
        public virtual void TestToVerifyTheUploadFunctionalityByEnteringMoreThan25RefenceNumbersInTheTemplate_S1()
        {
#line 167
this.TestToVerifyTheUploadFunctionalityByEnteringMoreThan25RefenceNumbersInTheTemplate("s1", "..\\..\\Scripts\\TestData\\Testfiles_trackingupload\\Morethan25refernces\\ShipmentTrack" +
                    "ingTemplate.xlsx", "This file exceeds the maximum of 25 tracking numbers", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
