// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Dashboard.LandingPage
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class BuildLandingPageFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "BuildLandingPage.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "BuildLandingPage", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint59",
                        "17431",
                        "BuildLandingPage"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "BuildLandingPage")))
            {
                global::CRM.UITest.Scripts.Dashboard.LandingPage.BuildLandingPageFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyThatDLSWorldwideTextAndSignInButtonInTheHomepage(string scenario, string dLSWorldwidetext, string signIn, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that DLS Worldwide text and Sign In button in the homepage", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.When("I am landing on the signin page homepage with DLS Worldwide logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.And(string.Format("I must see the \'{0}\' in the logo", dLSWorldwidetext), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.Then(string.Format("I must see the Sign In button must appear on the top right corner with the text \'" +
                        "{0}\'", signIn), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that DLS Worldwide text and Sign In button in the homepage: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17431")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWorldwidetext", "DLS Worldwide")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SignIn", "Sign In")]
        public virtual void VerifyThatDLSWorldwideTextAndSignInButtonInTheHomepage_S1()
        {
#line 5
this.VerifyThatDLSWorldwideTextAndSignInButtonInTheHomepage("S1", "DLS Worldwide", "Sign In", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatBodyTextIsVisibleAndTruckImageIsLoadedInTheMiddleOfTheHomepage(string scenario, string dLSWorldwidetext, string bodytext, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that body text is visible and truck Image is loaded in the middle of the h" +
                    "omepage", @__tags);
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.When("I am landing on the signin page homepage with DLS Worldwide logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.Then(string.Format("I must see the \'{0}\'", bodytext), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
 testRunner.And("Truck image should loaded middle of the homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that body text is visible and truck Image is loaded in the middle of the h" +
            "omepage: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17431")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWorldwidetext", "DLS Worldwide")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:bodytext", "Please sign in above or track your shipments below.")]
        public virtual void VerifyThatBodyTextIsVisibleAndTruckImageIsLoadedInTheMiddleOfTheHomepage_S1()
        {
#line 16
this.VerifyThatBodyTextIsVisibleAndTruckImageIsLoadedInTheMiddleOfTheHomepage("S1", "DLS Worldwide", "Please sign in above or track your shipments below.", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatTrackUpTo10ShipmentsByReferenceNumberTextAndEnterReferenceNumberSearchBox(string scenario, string dLSWorldwidetext, string trackUpTo10ShipmentsByReferenceNumbertext, string paragraphtext, string enterReferenceNumbertext, string validReferenceNumber, string tracking, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional",
                    "104746"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that Track Up To 10 Shipments By Reference Number text and Enter Reference" +
                    " Number Search box", @__tags);
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
 testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.When("I am landing on the signin page homepage with DLS Worldwide logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.Then(string.Format("I must see the Track info by Reference number heading \'{0}\'", trackUpTo10ShipmentsByReferenceNumbertext), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
 testRunner.And(string.Format("I must see the Track info by Reference number paragraph \'{0}\'", paragraphtext), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And(string.Format("I must see the search box button with text \'{0}\'", enterReferenceNumbertext), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And(string.Format("I must able to enter \'{0}\' into the search box and able to click the search butto" +
                        "n", validReferenceNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And(string.Format("User  able to navigate to the \'{0}\' module", tracking), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that Track Up To 10 Shipments By Reference Number text and Enter Reference" +
            " Number Search box: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17431")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("104746")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWorldwidetext", "DLS Worldwide")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TrackUpTo10ShipmentsByReferenceNumbertext", "Perform an additional search. Enter up to 10 comma separated reference numbers – " +
            "case sensitive.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Paragraphtext", "Perform an additional search. Enter up to 10 comma separated reference numbers – " +
            "case sensitive.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumbertext", "Enter Reference Number(s) Here")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ValidReferenceNumber", "9919838")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        public virtual void VerifyThatTrackUpTo10ShipmentsByReferenceNumberTextAndEnterReferenceNumberSearchBox_S1()
        {
#line 27
this.VerifyThatTrackUpTo10ShipmentsByReferenceNumberTextAndEnterReferenceNumberSearchBox("S1", "DLS Worldwide", "Perform an additional search. Enter up to 10 comma separated reference numbers – " +
                    "case sensitive.", "Perform an additional search. Enter up to 10 comma separated reference numbers – " +
                    "case sensitive.", "Enter Reference Number(s) Here", "9919838", "Tracking", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatTrackMultipleShipmentsByFileUploadTextDownloadTemplateButtonAndUploadButtons(string scenario, string dLSWorldwidetext, string trackMultipleShipmentsbyFileUploadtext, string paragraphtext, string downloadTemplate, string upload, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that Track Multiple Shipments by File Upload text, Download Template butto" +
                    "n and Upload buttons", @__tags);
#line 41
this.ScenarioSetup(scenarioInfo);
#line 42
 testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 43
 testRunner.When("I am landing on the signin page homepage with DLS Worldwide logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.Then(string.Format("I must see the Track info by shipments by file upload heading \'{0}\'", trackMultipleShipmentsbyFileUploadtext), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
 testRunner.And(string.Format("I must see the Track info by shipments by file upload paragraph \'{0}\'", paragraphtext), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.And(string.Format("I must see the \'{0}\' button and able to click the DownloadTemplate button", downloadTemplate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And(string.Format("I must see the \'{0}\' button and able to click the Upload button", upload), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that Track Multiple Shipments by File Upload text, Download Template butto" +
            "n and Upload buttons: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17431")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWorldwidetext", "DLS Worldwide")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TrackMultipleShipmentsbyFileUploadtext", "Track Multiple Shipments by File Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Paragraphtext", "To track up to 25 shipments, click the Upload button below. Excel is the only acc" +
            "eptable file type. If you have never uploaded a file before, you must first down" +
            "load and use the template below.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DownloadTemplate", "Download Template")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Upload", "Upload")]
        public virtual void VerifyThatTrackMultipleShipmentsByFileUploadTextDownloadTemplateButtonAndUploadButtons_S1()
        {
#line 41
this.VerifyThatTrackMultipleShipmentsByFileUploadTextDownloadTemplateButtonAndUploadButtons("S1", "DLS Worldwide", "Track Multiple Shipments by File Upload", "To track up to 25 shipments, click the Upload button below. Excel is the only acc" +
                    "eptable file type. If you have never uploaded a file before, you must first down" +
                    "load and use the template below.", "Download Template", "Upload", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatFooterOfTheHomepage(string scenario, string privacyPolicy, string temsofUse, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that Footer of the homepage", @__tags);
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
 testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
 testRunner.When("I am landing on the signin page homepage with DLS Worldwide logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.Then("I must see the RRD logo in the footer of the homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 58
 testRunner.And(string.Format("I must see PrivacyPolicy \'{0}\' link in the footer of the homepage", privacyPolicy), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And(string.Format("I must see TemsofUse \'{0}\' link in the footer of the homepage", temsofUse), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I must see RRDInformation in the footer of the homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that Footer of the homepage: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17431")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "PRIVACY POLICY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TemsofUse", "TERMS OF USE")]
        public virtual void VerifyThatFooterOfTheHomepage_S1()
        {
#line 54
this.VerifyThatFooterOfTheHomepage("S1", "PRIVACY POLICY", "TERMS OF USE", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToSeeTheErrorMessageWhenEntersInvalidOrUnfoundReferenceNumber(string scenario, string enterReferenceNumbertext, string invalidReferenceNumber, string tracking, string errormessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to see the error message when enters invalid  or unfoun" +
                    "d reference number", @__tags);
#line 67
this.ScenarioSetup(scenarioInfo);
#line 68
 testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
 testRunner.When(string.Format("I must see the search box button with text \'{0}\'", enterReferenceNumbertext), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
 testRunner.And(string.Format("I enter \'{0}\' into the search box and able to click the search button", invalidReferenceNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.Then(string.Format("I must see the \'{0}\' saying no data found for reference number", errormessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 72
 testRunner.And("I click on the close button in the error pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to see the error message when enters invalid  or unfoun" +
            "d reference number: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17431")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterReferenceNumbertext", "Enter Reference Number(s) here")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidReferenceNumber", "ghgfg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Tracking", "Tracking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:errormessage", "No data found for entered reference number(s).")]
        public virtual void VerifyThatUserCanAbleToSeeTheErrorMessageWhenEntersInvalidOrUnfoundReferenceNumber_S1()
        {
#line 67
this.VerifyThatUserCanAbleToSeeTheErrorMessageWhenEntersInvalidOrUnfoundReferenceNumber("S1", "Enter Reference Number(s) here", "ghgfg", "Tracking", "No data found for entered reference number(s).", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserIsAbleToExportTheDownloadShipmentTrackingTemplateFileByClickingOnTheDownloadTemplateButton(string shipmentTrackingTemplatefilename, string sheetname, string alldata, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional",
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user is able to export the download shipment tracking template file b" +
                    "y clicking on the Download Template Button", @__tags);
#line 79
this.ScenarioSetup(scenarioInfo);
#line 80
 testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
 testRunner.And("I am landing on the signin homepage with DLS Worldwide logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.When("I click the Download Template button in the homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
 testRunner.Then(string.Format("The file must be Downloaded with \'{0}\' and open the sheet with the name \'{1}\' and" +
                        " also with \'{2}\'", shipmentTrackingTemplatefilename, sheetname, alldata), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user is able to export the download shipment tracking template file b" +
            "y clicking on the Download Template Button: ShipmentTrackingTemplate.xlsx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17431")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ShipmentTrackingTemplate.xlsx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentTrackingTemplatefilename", "ShipmentTrackingTemplate.xlsx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sheetname", "Tracking Details")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:alldata", "Shipment Tracking Template;The following types are acceptable: Bill of Lading, PO" +
            " Number or PRO Number.;One entry per row required. No comma separated entries;No" +
            "te: Maximum of 25 Tracking Numbers can be tracked;Tracking  Numbers")]
        public virtual void VerifyThatUserIsAbleToExportTheDownloadShipmentTrackingTemplateFileByClickingOnTheDownloadTemplateButton_ShipmentTrackingTemplate_Xlsx()
        {
#line 79
this.VerifyThatUserIsAbleToExportTheDownloadShipmentTrackingTemplateFileByClickingOnTheDownloadTemplateButton("ShipmentTrackingTemplate.xlsx", "Tracking Details", "Shipment Tracking Template;The following types are acceptable: Bill of Lading, PO" +
                    " Number or PRO Number.;One entry per row required. No comma separated entries;No" +
                    "te: Maximum of 25 Tracking Numbers can be tracked;Tracking  Numbers", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToSeeTheUploadShipmentsModalWithOptionsToSelectFileCancelAndSubmit(string scenario, string uploadShipmentsTitle, string subtitle, string selectFile, string cancel, string submit, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to see the \'Upload Shipments\' modal with options to Sel" +
                    "ect File, Cancel and Submit", @__tags);
#line 90
this.ScenarioSetup(scenarioInfo);
#line 91
 testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
 testRunner.And("I am landing on the signin homepage with DLS Worldwide logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.When("I click on the Upload button in the homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
 testRunner.Then(string.Format("I can able to see the \'{0}\' and \'{1}\' in the modal", uploadShipmentsTitle, subtitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 95
 testRunner.And(string.Format("Upload Shipment modal should have the option to select a file \'{0}\' button and \'{" +
                        "1}\', \'{2}\' buttons", selectFile, cancel, submit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to see the \'Upload Shipments\' modal with options to Sel" +
            "ect File, Cancel and Submit: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17431")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UploadShipmentsTitle", "Upload Shipments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subtitle", "Select an Excel file to track up to 25 shipments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SelectFile", "SELECT FILE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Cancel", "Cancel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Submit", "Submit")]
        public virtual void VerifyThatUserCanAbleToSeeTheUploadShipmentsModalWithOptionsToSelectFileCancelAndSubmit_S1()
        {
#line 90
this.VerifyThatUserCanAbleToSeeTheUploadShipmentsModalWithOptionsToSelectFileCancelAndSubmit("S1", "Upload Shipments", "Select an Excel file to track up to 25 shipments", "SELECT FILE", "Cancel", "Submit", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToSelectAFileThroughFileExplorerInUploadShipmentsModal(string scenario, string uploadShipments, string filename, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to select a file through file explorer in Upload Shipme" +
                    "nts modal", @__tags);
#line 102
this.ScenarioSetup(scenarioInfo);
#line 103
 testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 104
 testRunner.And("I am landing on the signin homepage with DLS Worldwide logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.When("I click on the Upload button in the homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 106
 testRunner.And(string.Format("I can able to see the \'{0}\' modal", uploadShipments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
 testRunner.Then("User can able to select a valid file through file explorer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 109
 testRunner.And(string.Format("User can able to see the selected \'{0}\' name in the Upload Shipments modal", filename), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to select a file through file explorer in Upload Shipme" +
            "nts modal: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17431")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UploadShipments", "Upload Shipments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:filename", "ShipmentTrackingTemplate.xlsx")]
        public virtual void VerifyThatUserCanAbleToSelectAFileThroughFileExplorerInUploadShipmentsModal_S1()
        {
#line 102
this.VerifyThatUserCanAbleToSelectAFileThroughFileExplorerInUploadShipmentsModal("S1", "Upload Shipments", "ShipmentTrackingTemplate.xlsx", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToCloseTheUploadShipmentsModalByClickingOnTheCancelButton(string scenario, string uploadShipments, string upload, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to close the Upload Shipments modal by clicking on the " +
                    "Cancel button", @__tags);
#line 116
this.ScenarioSetup(scenarioInfo);
#line 117
 testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 118
 testRunner.And("I am landing on the signin homepage with DLS Worldwide logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
 testRunner.When("I click on the Upload button in the homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 120
 testRunner.And(string.Format("I can able to see the \'{0}\' modal", uploadShipments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
 testRunner.And("I click the Cancel button in the Upload Shipment modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
 testRunner.Then(string.Format("User should not able to see the \'{0}\'modal", uploadShipments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 123
 testRunner.And(string.Format("I must see the \'{0}\' button and able to click the Upload button", upload), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to close the Upload Shipments modal by clicking on the " +
            "Cancel button: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17431")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UploadShipments", "Upload Shipments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Upload", "Upload")]
        public virtual void VerifyThatUserCanAbleToCloseTheUploadShipmentsModalByClickingOnTheCancelButton_S1()
        {
#line 116
this.VerifyThatUserCanAbleToCloseTheUploadShipmentsModalByClickingOnTheCancelButton("S1", "Upload Shipments", "Upload", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToSeeTheErrorMessageByClickingOnTheSubmitButtonWithOutSelectingAnyFile(string scenario, string uploadShipments, string errormessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to see the error message by clicking on the submit butt" +
                    "on with out selecting any file", @__tags);
#line 130
this.ScenarioSetup(scenarioInfo);
#line 131
 testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 132
 testRunner.And("I am landing on the signin homepage with DLS Worldwide logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
 testRunner.When("I click on the Upload button in the homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 134
 testRunner.And(string.Format("I can able to see the \'{0}\' modal", uploadShipments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
 testRunner.And("I click on the Submit button in the Upload Shipment modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
 testRunner.Then(string.Format("I must see the \'{0}\' in the Upload Shipment modal", errormessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to see the error message by clicking on the submit butt" +
            "on with out selecting any file: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17431")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UploadShipments", "Upload Shipments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:errormessage", "PLEASE SELECT THE FILE")]
        public virtual void VerifyThatUserCanAbleToSeeTheErrorMessageByClickingOnTheSubmitButtonWithOutSelectingAnyFile_S1()
        {
#line 130
this.VerifyThatUserCanAbleToSeeTheErrorMessageByClickingOnTheSubmitButtonWithOutSelectingAnyFile("S1", "Upload Shipments", "PLEASE SELECT THE FILE", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToSeeTheInvalidInputFileErrorMessageByClickingOnTheSubmitButtonIfInvalidFileNameSelected(string scenario, string uploadShipments, string popuptitle, string invalidinputerrormessage, string close, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to see the invalid input file error message by clicking" +
                    " on the submit button if invalid file name selected", @__tags);
#line 143
this.ScenarioSetup(scenarioInfo);
#line 144
 testRunner.Given("I enter the url for CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 145
 testRunner.And("I am landing on the signin homepage with DLS Worldwide logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
 testRunner.When("I click on the Upload button in the homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 147
 testRunner.And(string.Format("I can able to see the \'{0}\' modal", uploadShipments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.And("User select a Invalid file through file explorer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
 testRunner.And("I click on the Submit button in the Upload Shipment modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.Then(string.Format("User must see the invalid input file pop up \'{0}\', \'{1}\', \'{2}\' button", popuptitle, invalidinputerrormessage, close), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to see the invalid input file error message by clicking" +
            " on the submit button if invalid file name selected: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17431")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BuildLandingPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UploadShipments", "Upload Shipments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:popuptitle", "Error")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:invalidinputerrormessage", "Invalid input file.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Close", "Close")]
        public virtual void VerifyThatUserCanAbleToSeeTheInvalidInputFileErrorMessageByClickingOnTheSubmitButtonIfInvalidFileNameSelected_S1()
        {
#line 143
this.VerifyThatUserCanAbleToSeeTheInvalidInputFileErrorMessageByClickingOnTheSubmitButtonIfInvalidFileNameSelected("S1", "Upload Shipments", "Error", "Invalid input file.", "Close", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
