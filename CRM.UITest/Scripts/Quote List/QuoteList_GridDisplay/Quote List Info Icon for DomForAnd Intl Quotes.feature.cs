// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.QuoteList.QuoteList_GridDisplay
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class QuoteListInfoIconForDomForAndIntlQuotesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Quote List Info Icon for DomForAnd Intl Quotes.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Quote List Info Icon for DomForAnd Intl Quotes", null, ProgrammingLanguage.CSharp, new string[] {
                        "26679",
                        "Sprint67"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Quote List Info Icon for DomForAnd Intl Quotes")))
            {
                CRM.UITest.Scripts.QuoteList.QuoteList_GridDisplay.QuoteListInfoIconForDomForAndIntlQuotesFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyExistenceOfInformationIconInTheQuoteListGridForServiceTypeInTheServiceColumn(string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify existence of Information icon in the quote list grid for service type in t" +
                    "he Service column", @__tags);
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
testRunner.And("I have access to Quotes button for external users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
testRunner.When("I arrive on quotes list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
testRunner.Then("I must be able to view Information icon displayed next to the service type in the" +
                    " Service column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify existence of Information icon in the quote list grid for service type in t" +
            "he Service column: zzzcsa@stage.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote List Info Icon for DomForAnd Intl Quotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26679")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint67")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "zzzcsa@stage.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzzcsa@stage.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyExistenceOfInformationIconInTheQuoteListGridForServiceTypeInTheServiceColumn_ZzzcsaStage_Com()
        {
            this.VerifyExistenceOfInformationIconInTheQuoteListGridForServiceTypeInTheServiceColumn("zzzcsa@stage.com", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyDisplayOfServiceTypeAndServiceLevelValuesOnClickOfInformationIconForServiceTypeDomesticForwardingOrInternational(string username, string password, string serviceType, string serviceLevel, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify display of Service type and Service level values on click of Information i" +
                    "con for service type Domestic Forwarding or International", @__tags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
testRunner.And("I have access to Quotes button for external users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
testRunner.When("I arrive on quotes list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
testRunner.And("I click on Information icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
testRunner.Then(string.Format("I must be able to view a pop-up modal with {0} and {1} values", serviceType, serviceLevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify display of Service type and Service level values on click of Information i" +
            "con for service type Domestic Forwarding or International: zzzcsa@stage.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote List Info Icon for DomForAnd Intl Quotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26679")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint67")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "zzzcsa@stage.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzzcsa@stage.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ServiceType", "Next Flight Out")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ServiceLevel", "N/A")]
        public virtual void VerifyDisplayOfServiceTypeAndServiceLevelValuesOnClickOfInformationIconForServiceTypeDomesticForwardingOrInternational_ZzzcsaStage_Com()
        {
            this.VerifyDisplayOfServiceTypeAndServiceLevelValuesOnClickOfInformationIconForServiceTypeDomesticForwardingOrInternational("zzzcsa@stage.com", "Te$t1234", "Next Flight Out", "N/A", ((string[])(null)));
#line hidden
        }
        
        public virtual void CompareAndVerifyServiceTypeAndServiceLevelValuesDisplayedInUIWithAPI(string username, string password, string account, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare and verify Service type and Service level values displayed in UI with API" +
                    "", @__tags);
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
testRunner.And("I have access to Quotes button for external users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
testRunner.When("I arrive on quotes list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
testRunner.And("I click on Information icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
testRunner.Then(string.Format("The values in UI should match the API values {0}", account), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Compare and verify Service type and Service level values displayed in UI with API" +
            ": zzzcsa@stage.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote List Info Icon for DomForAnd Intl Quotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26679")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint67")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "zzzcsa@stage.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzzcsa@stage.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account", "Kim Manufacturing")]
        public virtual void CompareAndVerifyServiceTypeAndServiceLevelValuesDisplayedInUIWithAPI_ZzzcsaStage_Com()
        {
            this.CompareAndVerifyServiceTypeAndServiceLevelValuesDisplayedInUIWithAPI("zzzcsa@stage.com", "Te$t1234", "Kim Manufacturing", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatTheInfoIconIsNotPresentForMGUsers(string username, string password, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that the Info icon is not present for MG Users", exampleTags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
testRunner.And("I have access to Quotes button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
testRunner.When("I arrive on quotes list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
testRunner.Then("I should not be able to view Information Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that the Info icon is not present for MG Users: zzzext@user.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote List Info Icon for DomForAnd Intl Quotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26679")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint67")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "zzzext@user.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzzext@user.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyThatTheInfoIconIsNotPresentForMGUsers_ZzzextUser_Com()
        {
            this.VerifyThatTheInfoIconIsNotPresentForMGUsers("zzzext@user.com", "Te$t1234", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
