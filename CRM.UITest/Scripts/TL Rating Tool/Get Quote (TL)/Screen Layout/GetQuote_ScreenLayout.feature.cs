// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.TLRatingTool.GetQuoteTL.ScreenLayout
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class GetQuote_ScreenLayoutFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GetQuote_ScreenLayout.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GetQuote_ScreenLayout", null, ProgrammingLanguage.CSharp, new string[] {
                        "24133",
                        "Sprint65"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "GetQuote_ScreenLayout")))
            {
                CRM.UITest.Scripts.TLRatingTool.GetQuoteTL.ScreenLayout.GetQuote_ScreenLayoutFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyNavigationPageFunctionalityWhenUserClicksOnTheGetQuoteNowButtonInRatingToolPage(string scenario, string username, string password, string originZipCode, string destinationZipCode, string weight, string pickupDate, string getQuoteText, string backToRatingTools_Button, string requiredField_Text, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify navigation page functionality when user clicks on the Get Quote Now button" +
                    " in Rating Tool page", @__tags);
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.And("I clicked on Rating Tool icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.When(string.Format("I enter required fields {0},{1},{2} in rating tool page", originZipCode, destinationZipCode, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.And(string.Format("I click on the calender to select the {0}", pickupDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And("Click on Get Rate button in rating tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("I have click on Get Quote Now button in rating tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.Then(string.Format("I should be navigated to the Get Quote TL page with text as {0}", getQuoteText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
 testRunner.And(string.Format("I should be able to see the \'{0}\'", backToRatingTools_Button), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And(string.Format("I should be able to see the \'{0}\' for required fields", requiredField_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify navigation page functionality when user clicks on the Get Quote Now button" +
            " in Rating Tool page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "GetQuote_ScreenLayout")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("24133")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationtest@rrd.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZipCode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZipCode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "45000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PickupDate", "0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetQuoteText", "Get Quote (Truckload)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BackToRatingTools_Button", "Back to Rating Tools")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RequiredField_Text", "Fields outlined in orange are required")]
        public virtual void VerifyNavigationPageFunctionalityWhenUserClicksOnTheGetQuoteNowButtonInRatingToolPage_S1()
        {
            this.VerifyNavigationPageFunctionalityWhenUserClicksOnTheGetQuoteNowButtonInRatingToolPage("S1", "stationtest@rrd.com", "Te$t1234", "33126", "85282", "45000", "0", "Get Quote (Truckload)", "Back to Rating Tools", "Fields outlined in orange are required", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePageElementsOnTheGetQuoteTruckloadScreenLayout(
                    string scenario, 
                    string username, 
                    string password, 
                    string originZipCode, 
                    string destinationZipCode, 
                    string weight, 
                    string pickupDate, 
                    string specialInstructions, 
                    string shippingFrom_Zipcode_Postal, 
                    string shippingFrom_Country, 
                    string shippingFrom_City, 
                    string shippingFrom_SelectState_Province, 
                    string shippingFromLable, 
                    string shippingToLable, 
                    string shippingTo_Zipcode_Postal, 
                    string shippingTo_Country, 
                    string shippingTo_City, 
                    string shippingTo_SelectState_Province, 
                    string pickUpDate_Lable, 
                    string dropOffDate_Lable, 
                    string freightDescription_Lable, 
                    string freightDescription, 
                    string hazardousMaterial_Yes_RadioButton, 
                    string hazardousMaterial_No_RadioButton, 
                    string quanity, 
                    string quanity_Type, 
                    string freight_Weight, 
                    string weight_Type, 
                    string insuredValue, 
                    string questionMark_Information, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the page elements on the Get Quote Truckload screen layout", @__tags);
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
 testRunner.And("I clicked on Rating Tool icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.When(string.Format("I enter required fields {0},{1},{2} in rating tool page", originZipCode, destinationZipCode, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.And(string.Format("I click on the calender to select the {0}", pickupDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("Click on Get Rate button in rating tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("I have click on Get Quote Now button in rating tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.Then(string.Format("I should be able to see the StationName, EquipmentType and {0} fields", specialInstructions), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 30
 testRunner.And(string.Format("I should be able to see the {0}, {1}, {2}, {3} in the Shipping From Section with " +
                        "{4}", shippingFrom_Zipcode_Postal, shippingFrom_Country, shippingFrom_City, shippingFrom_SelectState_Province, shippingFromLable), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And(string.Format("I should be able to see the {0}, {1}, {2}, {3} in the Shipping To Section with {4" +
                        "}", shippingTo_Zipcode_Postal, shippingTo_Country, shippingTo_City, shippingTo_SelectState_Province, shippingToLable), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And(string.Format("I should be able to see the Pick_upDate, PickUp_FromTime, PickUp_ToTime with {0} " +
                        " in Pick up Date Picker section", pickUpDate_Lable), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And(string.Format("I should be able to see the DropOffDate, DropOff_FromTime , DropOff_ToTime with {" +
                        "0} in DropOff Date Picker section", dropOffDate_Lable), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And(string.Format("I should be able to {0},{1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, with Add_Addition" +
                        "al_Item and Get Live Quote Button", freightDescription_Lable, freightDescription, hazardousMaterial_Yes_RadioButton, hazardousMaterial_No_RadioButton, quanity, quanity_Type, freight_Weight, weight_Type, insuredValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And(string.Format("I should be able to see the Question Mark with tool tip as {0}", questionMark_Information), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the page elements on the Get Quote Truckload screen layout: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "GetQuote_ScreenLayout")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("24133")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationtest@rrd.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZipCode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZipCode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "45000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PickupDate", "0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SpecialInstructions", "Enter any special instructions or comments...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShippingFrom_Zipcode_Postal", "Enter zip/postal code...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShippingFrom_Country", "United States")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShippingFrom_City", "Enter city...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShippingFrom_SelectState_Province", "Select state/province...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShippingFromLable", "Shipping From")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShippingToLable", "Shipping To")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShippingTo_Zipcode_Postal", "Enter zip/postal code...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShippingTo_Country", "United States")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShippingTo_City", "Enter city...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShippingTo_SelectState_Province", "Select state/province...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PickUpDate_Lable", "Pickup Date")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DropOffDate_Lable", "Dropoff Date")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightDescription_Lable", "Freight Description")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightDescription", "Enter a description...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazardousMaterial_Yes_RadioButton", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazardousMaterial_No_RadioButton", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quanity", "Enter quantity...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quanity_Type", "Skids")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Freight_Weight", "Enter weight...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight_Type", "LBS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValue", "Enter insured value...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuestionMark_Information", "Normal method to determine insured value: Invoice Cost, Plus Insurance Cost, Plus" +
            " Any Prepaid Freight Charges, All Plus 10%")]
        public virtual void VerifyThePageElementsOnTheGetQuoteTruckloadScreenLayout_S1()
        {
            this.VerifyThePageElementsOnTheGetQuoteTruckloadScreenLayout("S1", "stationtest@rrd.com", "Te$t1234", "33126", "85282", "45000", "0", "Enter any special instructions or comments...", "Enter zip/postal code...", "United States", "Enter city...", "Select state/province...", "Shipping From", "Shipping To", "Enter zip/postal code...", "United States", "Enter city...", "Select state/province...", "Pickup Date", "Dropoff Date", "Freight Description", "Enter a description...", "Yes", "No", "Enter quantity...", "Skids", "Enter weight...", "LBS", "Enter insured value...", "Normal method to determine insured value: Invoice Cost, Plus Insurance Cost, Plus" +
                    " Any Prepaid Freight Charges, All Plus 10%", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheRequiredFieldsAreOutlinedInOrangeColorInGetQuoteTLPage(string scenario, string username, string password, string originZipCode, string destinationZipCode, string weight, string getQuoteText, string pickupDate, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the required fields are outlined in orange color in Get Quote TL page", @__tags);
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
 testRunner.And("I clicked on Rating Tool icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.When(string.Format("I enter required fields {0},{1},{2} in rating tool page", originZipCode, destinationZipCode, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
 testRunner.And(string.Format("I click on the calender to select the {0}", pickupDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And("Click on Get Rate button in rating tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And("I have click on Get Quote Now button in rating tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.Then(string.Format("I should be navigated to the Get Quote TL page with text as {0}", getQuoteText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
 testRunner.Then("all the required fields must be highlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the required fields are outlined in orange color in Get Quote TL page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "GetQuote_ScreenLayout")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("24133")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationtest@rrd.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZipCode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZipCode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "45000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetQuoteText", "Get Quote (Truckload)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PickupDate", "0")]
        public virtual void VerifyTheRequiredFieldsAreOutlinedInOrangeColorInGetQuoteTLPage_S1()
        {
            this.VerifyTheRequiredFieldsAreOutlinedInOrangeColorInGetQuoteTLPage("S1", "stationtest@rrd.com", "Te$t1234", "33126", "85282", "45000", "Get Quote (Truckload)", "0", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheFunctionalityOfTheBackToRatingToolsInGetQuoteTLPage(string scenario, string username, string password, string originZipCode, string destinationZipCode, string weight, string pickupDate, string ratingTools, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the functionality of the Back To Rating Tools in Get Quote TL page", @__tags);
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
 testRunner.And("I clicked on Rating Tool icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.When(string.Format("I enter required fields {0},{1},{2} in rating tool page", originZipCode, destinationZipCode, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
 testRunner.And(string.Format("I click on the calender to select the {0}", pickupDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.And("Click on Get Rate button in rating tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.And("I have click on Get Quote Now button in rating tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.And("I click on Back to Rating Tools button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.Then(string.Format("I must be naviagted back to \'{0}\' page", ratingTools), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the functionality of the Back To Rating Tools in Get Quote TL page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "GetQuote_ScreenLayout")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("24133")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "stationtest@rrd.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZipCode", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZipCode", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "45000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PickupDate", "0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RatingTools", "Projected Amount")]
        public virtual void VerifyTheFunctionalityOfTheBackToRatingToolsInGetQuoteTLPage_S1()
        {
            this.VerifyTheFunctionalityOfTheBackToRatingToolsInGetQuoteTLPage("S1", "stationtest@rrd.com", "Te$t1234", "33126", "85282", "45000", "0", "Projected Amount", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
