// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.RateToShipment.LTL.ShipmentInformationScreen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class RateRequestToShipment_SavedItemDetailsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "RateRequestToShipment_SavedItemDetails.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "RateRequestToShipment_SavedItemDetails", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "RateRequestToShipment_SavedItemDetails")))
            {
                global::CRM.UITest.Scripts.RateToShipment.LTL.ShipmentInformationScreen.RateRequestToShipment_SavedItemDetailsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemContainingHazMatForExternalUser(string scenario, string userType, string customerName, string item, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " standard shipment from Rate with saved item containing HazMat for External user" +
                    "", @__tags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given(string.Format("I am Shp.Inquiry, Shp.Entry user logged in to CRM Application {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.And("I arrive at external user Get Quote screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("I click on Create Shipment button for External User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.When("I arrive on the Add Shipment LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 13
 testRunner.And(string.Format("Hazardous material details are auto-populated in the Freight Description Hazmat s" +
                        "ection {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " standard shipment from Rate with saved item containing HazMat for External user" +
            ": s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "TEST-HAZARDOUS")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemContainingHazMatForExternalUser_S1()
        {
#line 4
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemContainingHazMatForExternalUser("s1", "shipentry", "ZZZ - Czar Customer Test", "TEST-HAZARDOUS", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemContainingHazMatForExternalUser(string scenario, string userType, string customerName, string item, string shipmentValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " Insured shipment from Rate with saved item containing HazMat for External user", @__tags);
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given(string.Format("I am Shp.Inquiry, Shp.Entry user logged in to CRM Application {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.And("I arrive at external user Get Quote screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And(string.Format("I enter Insured Value {0}", shipmentValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I click on Create Insured Shipment button for External User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.When("I arrive on the LTL Add Shipment page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 30
 testRunner.And(string.Format("Hazardous material details are auto-populated in the Freight Description Hazmat s" +
                        "ection {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " Insured shipment from Rate with saved item containing HazMat for External user:" +
            " s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "TEST-HAZARDOUS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "1000")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemContainingHazMatForExternalUser_S1()
        {
#line 20
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemContainingHazMatForExternalUser("s1", "shipentry", "ZZZ - Czar Customer Test", "TEST-HAZARDOUS", "1000", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemNotContainingHazMatForExternalUser(string scenario, string userType, string customerName, string item, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " standard shipment from Rate with saved item not containing HazMat for External " +
                    "user", @__tags);
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
 testRunner.Given(string.Format("I am Shp.Inquiry, Shp.Entry user logged in to CRM Application {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
 testRunner.And("I arrive at external user Get Quote screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I click on Create Shipment button for External User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.When("I arrive on the Add Shipment LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
 testRunner.And("Hazardous material is selected as NO", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " standard shipment from Rate with saved item not containing HazMat for External " +
            "user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "NOHAZ")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemNotContainingHazMatForExternalUser_S1()
        {
#line 37
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemNotContainingHazMatForExternalUser("s1", "shipentry", "ZZZ - Czar Customer Test", "NOHAZ", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemNotContainingHazMatForExternalUser(string scenario, string userType, string customerName, string item, string shipmentValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " Insured shipment from Rate with saved item not containing HazMat for External u" +
                    "ser", @__tags);
#line 53
this.ScenarioSetup(scenarioInfo);
#line 54
 testRunner.Given(string.Format("I am Shp.Inquiry, Shp.Entry user logged in to CRM Application {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
 testRunner.And("I arrive at external user Get Quote screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.And(string.Format("I enter Insured Value {0}", shipmentValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I click on Create Insured Shipment button for External User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.When("I arrive on the LTL Add Shipment page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
 testRunner.And("Hazardous material is selected as NO", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " Insured shipment from Rate with saved item not containing HazMat for External u" +
            "ser: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "NOHAZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "1000")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemNotContainingHazMatForExternalUser_S1()
        {
#line 53
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemNotContainingHazMatForExternalUser("s1", "shipentry", "ZZZ - Czar Customer Test", "NOHAZ", "1000", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemContainingHazMatAndWeightValueIsModifiedForExternalUser(string scenario, string userType, string customerName, string item, string dimensionValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " standard shipment from Rate with saved item containing HazMat and Weight value " +
                    "is modified for External user", @__tags);
#line 71
this.ScenarioSetup(scenarioInfo);
#line 72
 testRunner.Given(string.Format("I am Shp.Inquiry, Shp.Entry user logged in to CRM Application {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 73
 testRunner.And("I arrive at external user Get Quote screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.And(string.Format("I Modify Weight field {0}", dimensionValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.And("I click on Create Shipment button for External User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.When("I arrive on the Add Shipment LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 81
 testRunner.And(string.Format("Hazardous material details are auto-populated in the Freight Description Hazmat s" +
                        "ection {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " standard shipment from Rate with saved item containing HazMat and Weight value " +
            "is modified for External user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "TEST-HAZARDOUS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DimensionValue", "10")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemContainingHazMatAndWeightValueIsModifiedForExternalUser_S1()
        {
#line 71
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemContainingHazMatAndWeightValueIsModifiedForExternalUser("s1", "shipentry", "ZZZ - Czar Customer Test", "TEST-HAZARDOUS", "10", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemContainingHazMatAndQuantityValueIsModifiedForExternalUser(string scenario, string userType, string customerName, string item, string shipmentValue, string dimensionValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " Insured shipment from Rate with saved item containing HazMat and Quantity value" +
                    " is modified for External user", @__tags);
#line 88
this.ScenarioSetup(scenarioInfo);
#line 89
 testRunner.Given(string.Format("I am Shp.Inquiry, Shp.Entry user logged in to CRM Application {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 90
 testRunner.And("I arrive at external user Get Quote screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And(string.Format("I Modify Quantity field {0}", dimensionValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And(string.Format("I enter Insured Value {0}", shipmentValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.And("I click on Create Insured Shipment button for External User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
 testRunner.When("I arrive on the LTL Add Shipment page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 98
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 99
 testRunner.And(string.Format("Hazardous material details are auto-populated in the Freight Description Hazmat s" +
                        "ection {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " Insured shipment from Rate with saved item containing HazMat and Quantity value" +
            " is modified for External user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "TEST-HAZARDOUS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DimensionValue", "10")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemContainingHazMatAndQuantityValueIsModifiedForExternalUser_S1()
        {
#line 88
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemContainingHazMatAndQuantityValueIsModifiedForExternalUser("s1", "shipentry", "ZZZ - Czar Customer Test", "TEST-HAZARDOUS", "1000", "10", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemNotContainingHazMatAndWeightValueIsModifiedForExternalUser(string scenario, string userType, string customerName, string item, string dimensionValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " standard shipment from Rate with saved item not containing HazMat and Weight va" +
                    "lue is modified for External user", @__tags);
#line 106
this.ScenarioSetup(scenarioInfo);
#line 107
 testRunner.Given(string.Format("I am Shp.Inquiry, Shp.Entry user logged in to CRM Application {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 108
 testRunner.And("I arrive at external user Get Quote screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
 testRunner.And(string.Format("I Modify Weight field {0}", dimensionValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
 testRunner.And("I click on Create Shipment button for External User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
 testRunner.When("I arrive on the Add Shipment LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 115
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 116
 testRunner.And("Hazardous material is selected as NO", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " standard shipment from Rate with saved item not containing HazMat and Weight va" +
            "lue is modified for External user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "NOHAZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DimensionValue", "10")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemNotContainingHazMatAndWeightValueIsModifiedForExternalUser_S1()
        {
#line 106
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemNotContainingHazMatAndWeightValueIsModifiedForExternalUser("s1", "shipentry", "ZZZ - Czar Customer Test", "NOHAZ", "10", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemNotContainingHazMatAndQuantityValueIsModifiedForExternalUser(string scenario, string userType, string customerName, string item, string shipmentValue, string dimensionValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " Insured shipment from Rate with saved item not containing HazMat and Quantity v" +
                    "alue is modified for External user", @__tags);
#line 123
this.ScenarioSetup(scenarioInfo);
#line 124
 testRunner.Given(string.Format("I am Shp.Inquiry, Shp.Entry user logged in to CRM Application {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 125
 testRunner.And("I arrive at external user Get Quote screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And(string.Format("I Modify Quantity field {0}", dimensionValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.And(string.Format("I enter Insured Value {0}", shipmentValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.And("I click on Create Insured Shipment button for External User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
 testRunner.When("I arrive on the LTL Add Shipment page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 134
 testRunner.And("Hazardous material is selected as NO", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " Insured shipment from Rate with saved item not containing HazMat and Quantity v" +
            "alue is modified for External user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "NOHAZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DimensionValue", "10")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemNotContainingHazMatAndQuantityValueIsModifiedForExternalUser_S1()
        {
#line 123
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemNotContainingHazMatAndQuantityValueIsModifiedForExternalUser("s1", "shipentry", "ZZZ - Czar Customer Test", "NOHAZ", "1000", "10", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemContainingHazMatForInternalUser(string scenario, string userType, string customerName, string item, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " standard shipment from Rate with saved item containing HazMat for Internal user" +
                    "", @__tags);
#line 142
this.ScenarioSetup(scenarioInfo);
#line 143
 testRunner.Given(string.Format("I am operations, sales, sales management or station owner user logged in to CRM A" +
                        "pplication {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 144
 testRunner.And(string.Format("I arrive at internal user Get Quote screen {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
 testRunner.And("I click on Create Shipment button for Internal User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.When("I arrive on the Add Shipment LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 150
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 151
 testRunner.And(string.Format("Hazardous material details are auto-populated in the Freight Description Hazmat s" +
                        "ection {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " standard shipment from Rate with saved item containing HazMat for Internal user" +
            ": s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "TEST-HAZARDOUS")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemContainingHazMatForInternalUser_S1()
        {
#line 142
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemContainingHazMatForInternalUser("s1", "stationowner", "ZZZ - Czar Customer Test", "TEST-HAZARDOUS", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemContainingHazMatForInternalUser(string scenario, string userType, string customerName, string item, string shipmentValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " Insured shipment from Rate with saved item containing HazMat for Internal user", @__tags);
#line 158
this.ScenarioSetup(scenarioInfo);
#line 159
 testRunner.Given(string.Format("I am operations, sales, sales management or station owner user logged in to CRM A" +
                        "pplication {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 160
 testRunner.And(string.Format("I arrive at internal user Get Quote screen {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.And(string.Format("I enter Insured Value {0}", shipmentValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
 testRunner.And("I click on Create Insured Shipment button for Internal User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
 testRunner.When("I arrive on the LTL Add Shipment page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 167
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 168
 testRunner.And(string.Format("Hazardous material details are auto-populated in the Freight Description Hazmat s" +
                        "ection {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " Insured shipment from Rate with saved item containing HazMat for Internal user:" +
            " s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "TEST-HAZARDOUS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "1000")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemContainingHazMatForInternalUser_S1()
        {
#line 158
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemContainingHazMatForInternalUser("s1", "stationowner", "ZZZ - Czar Customer Test", "TEST-HAZARDOUS", "1000", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemNotContainingHazMatForInternalUser(string scenario, string userType, string customerName, string item, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " standard shipment from Rate with saved item not containing HazMat for Internal " +
                    "user", @__tags);
#line 175
this.ScenarioSetup(scenarioInfo);
#line 176
 testRunner.Given(string.Format("I am operations, sales, sales management or station owner user logged in to CRM A" +
                        "pplication {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 177
 testRunner.And(string.Format("I arrive at internal user Get Quote screen {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
 testRunner.And("I click on Create Shipment button for Internal User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
 testRunner.When("I arrive on the Add Shipment LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 183
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 184
 testRunner.And("Hazardous material is selected as NO", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " standard shipment from Rate with saved item not containing HazMat for Internal " +
            "user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "NOHAZ")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemNotContainingHazMatForInternalUser_S1()
        {
#line 175
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemNotContainingHazMatForInternalUser("s1", "stationowner", "ZZZ - Czar Customer Test", "NOHAZ", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemNotContainingHazMatForInternalUser(string scenario, string userType, string customerName, string item, string shipmentValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " Insured shipment from Rate with saved item not containing HazMat for Internal u" +
                    "ser", @__tags);
#line 191
this.ScenarioSetup(scenarioInfo);
#line 192
 testRunner.Given(string.Format("I am operations, sales, sales management or station owner user logged in to CRM A" +
                        "pplication {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 193
 testRunner.And(string.Format("I arrive at internal user Get Quote screen {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
 testRunner.And(string.Format("I enter Insured Value {0}", shipmentValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.And("I click on Create Insured Shipment button for Internal User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
 testRunner.When("I arrive on the LTL Add Shipment page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 200
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 201
 testRunner.And("Hazardous material is selected as NO", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " Insured shipment from Rate with saved item not containing HazMat for Internal u" +
            "ser: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "NOHAZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "1000")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemNotContainingHazMatForInternalUser_S1()
        {
#line 191
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemNotContainingHazMatForInternalUser("s1", "stationowner", "ZZZ - Czar Customer Test", "NOHAZ", "1000", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemContainingHazMatAndWeightValueIsModifiedForInternalUser(string scenario, string userType, string customerName, string item, string dimensionValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " standard shipment from Rate with saved item containing HazMat and Weight value " +
                    "is modified for Internal user", @__tags);
#line 209
this.ScenarioSetup(scenarioInfo);
#line 210
 testRunner.Given(string.Format("I am operations, sales, sales management or station owner user logged in to CRM A" +
                        "pplication {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 211
 testRunner.And(string.Format("I arrive at internal user Get Quote screen {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
 testRunner.And(string.Format("I Modify Weight field {0}", dimensionValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
 testRunner.And("I click on Create Shipment button for Internal User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.When("I arrive on the Add Shipment LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 218
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 219
 testRunner.And(string.Format("Hazardous material details are auto-populated in the Freight Description Hazmat s" +
                        "ection {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " standard shipment from Rate with saved item containing HazMat and Weight value " +
            "is modified for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "TEST-HAZARDOUS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DimensionValue", "10")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemContainingHazMatAndWeightValueIsModifiedForInternalUser_S1()
        {
#line 209
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemContainingHazMatAndWeightValueIsModifiedForInternalUser("s1", "stationowner", "ZZZ - Czar Customer Test", "TEST-HAZARDOUS", "10", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemContainingHazMatAndQuantityValueIsModifiedForInternalUser(string scenario, string userType, string customerName, string item, string shipmentValue, string dimensionValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " Insured shipment from Rate with saved item containing HazMat and Quantity value" +
                    " is modified for Internal user", @__tags);
#line 226
this.ScenarioSetup(scenarioInfo);
#line 227
 testRunner.Given(string.Format("I am operations, sales, sales management or station owner user logged in to CRM A" +
                        "pplication {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 228
 testRunner.And(string.Format("I arrive at internal user Get Quote screen {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 231
 testRunner.And(string.Format("I Modify Quantity field {0}", dimensionValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 232
 testRunner.And(string.Format("I enter Insured Value {0}", shipmentValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 233
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 234
 testRunner.And("I click on Create Insured Shipment button for Internal User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
 testRunner.When("I arrive on the LTL Add Shipment page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 236
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 237
 testRunner.And(string.Format("Hazardous material details are auto-populated in the Freight Description Hazmat s" +
                        "ection {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " Insured shipment from Rate with saved item containing HazMat and Quantity value" +
            " is modified for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "TEST-HAZARDOUS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DimensionValue", "10")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemContainingHazMatAndQuantityValueIsModifiedForInternalUser_S1()
        {
#line 226
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemContainingHazMatAndQuantityValueIsModifiedForInternalUser("s1", "stationowner", "ZZZ - Czar Customer Test", "TEST-HAZARDOUS", "1000", "10", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemNotContainingHazMatAndWeightValueIsModifiedForInternalUser(string scenario, string userType, string customerName, string item, string dimensionValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " standard shipment from Rate with saved item not containing HazMat and Weight va" +
                    "lue is modified for Internal user", @__tags);
#line 244
this.ScenarioSetup(scenarioInfo);
#line 245
 testRunner.Given(string.Format("I am operations, sales, sales management or station owner user logged in to CRM A" +
                        "pplication {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 246
 testRunner.And(string.Format("I arrive at internal user Get Quote screen {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 247
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 248
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 249
 testRunner.And(string.Format("I Modify Weight field {0}", dimensionValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 250
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 251
 testRunner.And("I click on Create Shipment button for Internal User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 252
 testRunner.When("I arrive on the Add Shipment LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 253
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 254
 testRunner.And("Hazardous material is selected as NO", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " standard shipment from Rate with saved item not containing HazMat and Weight va" +
            "lue is modified for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "NOHAZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DimensionValue", "10")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemNotContainingHazMatAndWeightValueIsModifiedForInternalUser_S1()
        {
#line 244
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAStandardShipmentFromRateWithSavedItemNotContainingHazMatAndWeightValueIsModifiedForInternalUser("s1", "stationowner", "ZZZ - Czar Customer Test", "NOHAZ", "10", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemNotContainingHazMatAndQuantityValueIsModifiedForInternalUser(string scenario, string userType, string customerName, string item, string shipmentValue, string dimensionValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "NinjaSprint15",
                    "22177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
                    " Insured shipment from Rate with saved item not containing HazMat and Quantity v" +
                    "alue is modified for Internal user", @__tags);
#line 261
this.ScenarioSetup(scenarioInfo);
#line 262
 testRunner.Given(string.Format("I am operations, sales, sales management or station owner user logged in to CRM A" +
                        "pplication {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 263
 testRunner.And(string.Format("I arrive at internal user Get Quote screen {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
 testRunner.And(string.Format("I select a saved item {0}", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
 testRunner.And(string.Format("I Modify Quantity field {0}", dimensionValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
 testRunner.And(string.Format("I enter Insured Value {0}", shipmentValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 269
 testRunner.And("I click on Create Insured Shipment button for Internal User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
 testRunner.When("I arrive on the LTL Add Shipment page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 271
 testRunner.Then(string.Format("Saved item details are auto-populated in the Freight Description section {0} {1}", customerName, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 272
 testRunner.And("Hazardous material is selected as NO", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22177_Verify the Item details are populated in Add Shipment Page while creating a" +
            " Insured shipment from Rate with saved item not containing HazMat and Quantity v" +
            "alue is modified for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("22177")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Item", "NOHAZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DimensionValue", "10")]
        public virtual void _22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemNotContainingHazMatAndQuantityValueIsModifiedForInternalUser_S1()
        {
#line 261
this._22177_VerifyTheItemDetailsArePopulatedInAddShipmentPageWhileCreatingAInsuredShipmentFromRateWithSavedItemNotContainingHazMatAndQuantityValueIsModifiedForInternalUser("s1", "stationowner", "ZZZ - Czar Customer Test", "NOHAZ", "1000", "10", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Rate to Shipment Freight Description binding when freight Information data" +
            " entered manually in Get Quote(LTL)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequestToShipment_SavedItemDetails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("49390")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PrioritySprint")]
        public virtual void VerifyRateToShipmentFreightDescriptionBindingWhenFreightInformationDataEnteredManuallyInGetQuoteLTL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Rate to Shipment Freight Description binding when freight Information data" +
                    " entered manually in Get Quote(LTL)", new string[] {
                        "GUI",
                        "49390",
                        "PrioritySprint"});
#line 279
 this.ScenarioSetup(scenarioInfo);
#line 280
    testRunner.Given("I am User with access to Rate To Shipment Process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 281
 testRunner.And("I arrive at Get Quote(LTL) screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 282
 testRunner.And("I enter Address data in Get Quote LTL Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 283
 testRunner.And("I enter the Item details <Classification>,<Quantity>,<Weight>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 284
 testRunner.And("I arrive at Quote Results screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
 testRunner.And("I Click on Create Shipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 286
 testRunner.And("the Insured Modal popUp Appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 287
 testRunner.And("I click the Continue without Insured Rates button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
 testRunner.When("I arrive on the Add Shipment LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 289
 testRunner.Then("I will see <Classification>,<Quantity>,<Weight> will be binded in the Freight Des" +
                    "cription section with data from Get Quote(LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
