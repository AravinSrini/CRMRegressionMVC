// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.RateToShipment.LTL.ShipmentInformationScreen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class RateRequestLTLToAddShipmentLTL_NewAccessorial_NotificationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Rate Request (LTL) to Add Shipment (LTL) - New Accessorial - Notification.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Rate Request (LTL) to Add Shipment (LTL) - New Accessorial - Notification", null, ProgrammingLanguage.CSharp, new string[] {
                        "44478",
                        "Sprint83"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Rate Request (LTL) to Add Shipment (LTL) - New Accessorial - Notification")))
            {
                global::CRM.UITest.Scripts.RateToShipment.LTL.ShipmentInformationScreen.RateRequestLTLToAddShipmentLTL_NewAccessorial_NotificationFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
testRunner.Given("that I am a shp.entry, sales, sales management, operations, or station owner user" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
testRunner.And("I am on Get Quote (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44478_Test to verify autopopulate functionality and edit of accessorials on shipm" +
            "ent information page_standard Rate to Shipment _shipfrom_nofication")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Rate Request (LTL) to Add Shipment (LTL) - New Accessorial - Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44478")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _44478_TestToVerifyAutopopulateFunctionalityAndEditOfAccessorialsOnShipmentInformationPage_StandardRateToShipment_Shipfrom_Nofication()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44478_Test to verify autopopulate functionality and edit of accessorials on shipm" +
                    "ent information page_standard Rate to Shipment _shipfrom_nofication", new string[] {
                        "Functional"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 10
testRunner.Given("I have passed all mandatory fields by selecting Notification in shipfrom section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
testRunner.When("I click on create shipment on Quote Results (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
testRunner.Then("Notification accessorials should be autopoulated on Add Shipment (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 13
testRunner.And("Notification accessorials in shipfrom section should be editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44478_Test to verify autopopulate functionality and edit of accessorials on shipm" +
            "ent information page_standard Rate to Shipment _shipto_nofication")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Rate Request (LTL) to Add Shipment (LTL) - New Accessorial - Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44478")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _44478_TestToVerifyAutopopulateFunctionalityAndEditOfAccessorialsOnShipmentInformationPage_StandardRateToShipment_Shipto_Nofication()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44478_Test to verify autopopulate functionality and edit of accessorials on shipm" +
                    "ent information page_standard Rate to Shipment _shipto_nofication", new string[] {
                        "Functional"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 17
testRunner.Given("I have passed all mandatory fields by selecting Notification in shipto section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
testRunner.When("I click on create shipment on Quote Results (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
testRunner.Then("Notification accessorials in shipto should be autopoulated on Add Shipment (LTL) " +
                    "page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
testRunner.And("Notification accessorials in shipto section should be editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44478_Test to verify autopopulate functionality and edit of accessorials on shipm" +
            "ent information page_insuredRate to Shipment _shipfrom_nofication")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Rate Request (LTL) to Add Shipment (LTL) - New Accessorial - Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44478")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _44478_TestToVerifyAutopopulateFunctionalityAndEditOfAccessorialsOnShipmentInformationPage_InsuredRateToShipment_Shipfrom_Nofication()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44478_Test to verify autopopulate functionality and edit of accessorials on shipm" +
                    "ent information page_insuredRate to Shipment _shipfrom_nofication", new string[] {
                        "Functional"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 25
testRunner.Given("I have passed all mandatory fields by selecting Notification in shipfrom section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
testRunner.When("I click on create Insured shipment on Quote Results (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
testRunner.Then("Notification accessorials should be autopoulated on Add Shipment (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 28
testRunner.And("Notification accessorials in shipfrom section should be editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44478_Test to verify autopopulate functionality and edit of accessorials on shipm" +
            "ent information page_insuredRate to Shipment _shipto_nofication")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Rate Request (LTL) to Add Shipment (LTL) - New Accessorial - Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44478")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _44478_TestToVerifyAutopopulateFunctionalityAndEditOfAccessorialsOnShipmentInformationPage_InsuredRateToShipment_Shipto_Nofication()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44478_Test to verify autopopulate functionality and edit of accessorials on shipm" +
                    "ent information page_insuredRate to Shipment _shipto_nofication", new string[] {
                        "Functional"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 32
testRunner.Given("I have passed all mandatory fields by selecting Notification in shipto section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 33
testRunner.When("I click on create Insured shipment on Quote Results (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
testRunner.Then("Notification accessorials in shipto should be autopoulated on Add Shipment (LTL) " +
                    "page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 35
testRunner.And("Notification accessorials in shipto section should be editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44478_Test to verify autopopulate functionality and edit of accessorials on shipm" +
            "ent information page_Rate to Shipment_gauranteed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Rate Request (LTL) to Add Shipment (LTL) - New Accessorial - Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44478")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _44478_TestToVerifyAutopopulateFunctionalityAndEditOfAccessorialsOnShipmentInformationPage_RateToShipment_Gauranteed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44478_Test to verify autopopulate functionality and edit of accessorials on shipm" +
                    "ent information page_Rate to Shipment_gauranteed", new string[] {
                        "Functional"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 39
testRunner.Given("I have passed all mandatory fields by selecting Notification in shipto section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 40
testRunner.When("I click on create shipment for selected carrier which has gaurenteed rate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
testRunner.Then("Notification accessorials in shipto should be autopoulated on Add Shipment (LTL) " +
                    "page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 42
testRunner.And("Notification accessorials in shipto section should be editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
