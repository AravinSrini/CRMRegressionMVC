// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.InsuranceClaims
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class InsuranceClaims_SubmitClaim_DocumentUploadFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Insurance Claims - SubmitClaim_DocumentUpload.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Insurance Claims - SubmitClaim_DocumentUpload", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint",
                        "79"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Insurance Claims - SubmitClaim_DocumentUpload")))
            {
                global::CRM.UITest.Scripts.InsuranceClaims.InsuranceClaims_SubmitClaim_DocumentUploadFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify the document section on Submit A Claim page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32041_VerifyTheDocumentSectionOnSubmitAClaimPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify the document section on Submit A Claim page", new string[] {
                        "GUI"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.When("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("I will see the Documents section below the Claim Details section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify the verbiage from document section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32041_VerifyTheVerbiageFromDocumentSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify the verbiage from document section", new string[] {
                        "GUI"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.When("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then(@"the verbiage beneath the Documents section header will be, Note: Claim should be supported by the following documents.  Failure to include sufficient documentation may delay conclusion of your claim.  Acceptable file types are: .doc .docx .xls .xlsx .ppt .pptx .pdf .txt .tif .jpg .png  Individual file size must not exceed 10MB.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify the required document type displaying by default")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32041_VerifyTheRequiredDocumentTypeDisplayingByDefault()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify the required document type displaying by default", new string[] {
                        "GUI"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
 testRunner.When("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.Then("the required document displayed is <Complete Vendor Invoice>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify the information hover icon next to the <Complete Vendor Invoice> d" +
            "ocument name")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32041_VerifyTheInformationHoverIconNextToTheCompleteVendorInvoiceDocumentName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify the information hover icon next to the <Complete Vendor Invoice> d" +
                    "ocument name", new string[] {
                        "GUI"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
 testRunner.When("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.Then("I will see an information hover icon next to the <Complete Vendor Invoice> docume" +
                    "nt name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify the document upload button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32041_VerifyTheDocumentUploadButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify the document upload button", new string[] {
                        "GUI"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
 testRunner.When("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
 testRunner.Then("I will see a document upload button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify if the document upload button is active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32041_VerifyIfTheDocumentUploadButtonIsActive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify if the document upload button is active", new string[] {
                        "GUI"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
 testRunner.When("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.Then("the document upload button will be active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041- Verify the verbiage next to the document upload button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32041_VerifyTheVerbiageNextToTheDocumentUploadButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041- Verify the verbiage next to the document upload button", new string[] {
                        "GUI"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
 testRunner.When("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
 testRunner.Then("I will see the verbiage next to the document upload button: <No file currently up" +
                    "loaded>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify the Add Additional Document button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32041_VerifyTheAddAdditionalDocumentButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify the Add Additional Document button", new string[] {
                        "GUI"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
 testRunner.When("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.Then("I will see an Add Additional Document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify the verbiage which is displaying in the tool tip")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32041_VerifyTheVerbiageWhichIsDisplayingInTheToolTip()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify the verbiage which is displaying in the tool tip", new string[] {
                        "GUI"});
#line 61
this.ScenarioSetup(scenarioInfo);
#line 62
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 63
 testRunner.And("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.When("I hover over the Tool Tip icon displayed next to the required document <Complete " +
                    "Vendor Invoice>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
 testRunner.Then("I will see the verbiage stating : This invoice should show your cost for the prod" +
                    "uct being claimed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify the file name displayed on the claim form as a hyperlink")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32041_VerifyTheFileNameDisplayedOnTheClaimFormAsAHyperlink()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify the file name displayed on the claim form as a hyperlink", new string[] {
                        "GUI"});
#line 70
this.ScenarioSetup(scenarioInfo);
#line 71
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 72
 testRunner.And("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.When("I have uploaded a document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
 testRunner.Then("the file name will be displayed on the Claim Form as a hyperlink", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify if \"No file currently uploaded\" verbiage is present after uploadin" +
            "g a document")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32041_VerifyIfNoFileCurrentlyUploadedVerbiageIsPresentAfterUploadingADocument()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify if \"No file currently uploaded\" verbiage is present after uploadin" +
                    "g a document", new string[] {
                        "GUI"});
#line 79
this.ScenarioSetup(scenarioInfo);
#line 80
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
 testRunner.And("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.When("I have uploaded a document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
 testRunner.Then("I will not see the verbiage: No file currently uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify the delete option after uploading a document")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32041_VerifyTheDeleteOptionAfterUploadingADocument()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify the delete option after uploading a document", new string[] {
                        "GUI"});
#line 87
this.ScenarioSetup(scenarioInfo);
#line 88
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 89
 testRunner.And("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.When("I have uploaded a document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
 testRunner.And("I have the option to delete the document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify the delete confirmation popup before deleting a document")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _32041_VerifyTheDeleteConfirmationPopupBeforeDeletingADocument()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify the delete confirmation popup before deleting a document", new string[] {
                        "GUI",
                        "Functional"});
#line 96
this.ScenarioSetup(scenarioInfo);
#line 97
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 98
 testRunner.And("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
 testRunner.And("I have uploaded a document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
 testRunner.When("I click on the delete document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 101
 testRunner.Then("I will be asked to confirm if I want to remove the document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify if the delete modal is getting close after clicking on cancel butt" +
            "on")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _32041_VerifyIfTheDeleteModalIsGettingCloseAfterClickingOnCancelButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify if the delete modal is getting close after clicking on cancel butt" +
                    "on", new string[] {
                        "GUI",
                        "Functional"});
#line 106
this.ScenarioSetup(scenarioInfo);
#line 107
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 108
 testRunner.And("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.And("I have uploaded a document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
 testRunner.And("I click on the delete document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
 testRunner.When("I click on Cancel button from the delete confirmation popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
 testRunner.Then("the modal will close and document will not be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify by clicking on Delete button from the delete confirmation popup")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _32041_VerifyByClickingOnDeleteButtonFromTheDeleteConfirmationPopup()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify by clicking on Delete button from the delete confirmation popup", new string[] {
                        "GUI",
                        "Functional"});
#line 116
this.ScenarioSetup(scenarioInfo);
#line 117
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 118
 testRunner.And("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
 testRunner.And("I have uploaded a document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
 testRunner.And("I click on the delete document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
 testRunner.When("I click on Delete button from the delete confirmation popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 122
 testRunner.Then("the document will be removed from the claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify the message by uploading a non acceptable file")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32041_VerifyTheMessageByUploadingANonAcceptableFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify the message by uploading a non acceptable file", new string[] {
                        "GUI"});
#line 127
this.ScenarioSetup(scenarioInfo);
#line 128
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 129
 testRunner.And("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
 testRunner.When("I have selected a document to upload which is not an acceptable file type.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
 testRunner.Then("I will receive a message: The selected file type is not allowed.  Please select a" +
                    "n approved file type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32041 - Verify by trying to upload a document which exceeds the file size limit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - SubmitClaim_DocumentUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32041_VerifyByTryingToUploadADocumentWhichExceedsTheFileSizeLimit()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32041 - Verify by trying to upload a document which exceeds the file size limit", new string[] {
                        "GUI"});
#line 136
this.ScenarioSetup(scenarioInfo);
#line 137
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 138
 testRunner.And("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
 testRunner.When("I have selected a document to upload which exceeds the file size limit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 140
 testRunner.Then("I will receive a message: The selected file size exceeds 10MB. Please attach a fi" +
                    "le that is less than 10MB.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
