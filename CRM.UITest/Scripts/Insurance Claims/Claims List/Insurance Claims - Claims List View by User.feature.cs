// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.InsuranceClaims.ClaimsList
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
    public partial class InsuranceClaims_ClaimsListViewByUserFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Insurance Claims - Claims List View by User.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Insurance Claims - Claims List View by User", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint79",
                        "31990",
                        "Ignore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Insurance Claims - Claims List View by User")))
            {
                global::CRM.UITest.Scripts.InsuranceClaims.ClaimsList.InsuranceClaims_ClaimsListViewByUserFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the default status selection on the Claims List page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void VerifyTheDefaultStatusSelectionOnTheClaimsListPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the default status selection on the Claims List page for external users", new string[] {
                        "GUI"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, or shp.entrynorates user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("I can see Open status is selected by default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
 testRunner.And("I have option to change to different status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And("I have option to select more than one status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Open status claims are displayed by the most recent submit date for ex" +
            "ternal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void VerifyTheOpenStatusClaimsAreDisplayedByTheMostRecentSubmitDateForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Open status claims are displayed by the most recent submit date for ex" +
                    "ternal users", new string[] {
                        "Functional"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, or shp.entrynorates user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.Then("all the claims in the Open status should be displayed by most recent date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the list of claims for the customer to which user is associated for extern" +
            "al users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void VerifyTheListOfClaimsForTheCustomerToWhichUserIsAssociatedForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the list of claims for the customer to which user is associated for extern" +
                    "al users", new string[] {
                        "Functional"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, or shp.entrynorates user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 23
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("I should see a list of claims for the customer to which user is associated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the color code of the all the status in the claims list page for external " +
            "users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the color code of the all the status in the claims list page for external " +
                    "users", new string[] {
                        "GUI"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, or shp.entrynorates user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.Then("Verify the color code of all the status in the claims list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the claims List grid display when I unselect all the status options for ex" +
            "ternal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void VerifyTheClaimsListGridDisplayWhenIUnselectAllTheStatusOptionsForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the claims List grid display when I unselect all the status options for ex" +
                    "ternal users", new string[] {
                        "Functional"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, or shp.entrynorates user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
   testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
 testRunner.And("I uncheck all the display status options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.Then("Grid should be updated to display all claims associated to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the default status selection on the Claims List page for sales user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void VerifyTheDefaultStatusSelectionOnTheClaimsListPageForSalesUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the default status selection on the Claims List page for sales user", new string[] {
                        "GUI"});
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
 testRunner.Given("I am a sales user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.Then("I can see Open status is selected by default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
 testRunner.And("I have option to change to different status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And("I have option to select more than one status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Open status claims are displayed by the most recent submit date for sa" +
            "les user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void VerifyTheOpenStatusClaimsAreDisplayedByTheMostRecentSubmitDateForSalesUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Open status claims are displayed by the most recent submit date for sa" +
                    "les user", new string[] {
                        "Functional"});
#line 50
this.ScenarioSetup(scenarioInfo);
#line 51
    testRunner.Given("I am a sales user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 52
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
 testRunner.Then("all the claims in the Open status should be displayed by most recent date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the list of claims for the customer to which user is associated for sales " +
            "user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void VerifyTheListOfClaimsForTheCustomerToWhichUserIsAssociatedForSalesUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the list of claims for the customer to which user is associated for sales " +
                    "user", new string[] {
                        "Functional"});
#line 57
this.ScenarioSetup(scenarioInfo);
#line 58
    testRunner.Given("I am a sales user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
 testRunner.Then("I should see a list of claims for the customer to which user is associated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the color code of the all the status in the claims list page for sales use" +
            "r")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPageForSalesUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the color code of the all the status in the claims list page for sales use" +
                    "r", new string[] {
                        "GUI"});
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
    testRunner.Given("I am a sales user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 65
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.Then("Verify the color code of all the status in the claims list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the claims List grid display when I unselect all the status options for sa" +
            "les user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void VerifyTheClaimsListGridDisplayWhenIUnselectAllTheStatusOptionsForSalesUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the claims List grid display when I unselect all the status options for sa" +
                    "les user", new string[] {
                        "Functional"});
#line 69
this.ScenarioSetup(scenarioInfo);
#line 70
    testRunner.Given("I am a sales user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 71
   testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
 testRunner.And("I uncheck all the display status options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.Then("Grid should be updated to display all claims associated to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the default status selection on the Claims List page for sales management," +
            " operations or station owner user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void VerifyTheDefaultStatusSelectionOnTheClaimsListPageForSalesManagementOperationsOrStationOwnerUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the default status selection on the Claims List page for sales management," +
                    " operations or station owner user", new string[] {
                        "GUI"});
#line 78
this.ScenarioSetup(scenarioInfo);
#line 79
 testRunner.Given("I am a sales management, operations or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 80
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
 testRunner.Then("I can see Open status is selected by default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 82
 testRunner.And("I have option to change to different status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.And("I have option to select more than one status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Open status claims are displayed by the most recent submit date for sa" +
            "les management, operations or station owner user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void VerifyTheOpenStatusClaimsAreDisplayedByTheMostRecentSubmitDateForSalesManagementOperationsOrStationOwnerUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Open status claims are displayed by the most recent submit date for sa" +
                    "les management, operations or station owner user", new string[] {
                        "Functional"});
#line 86
this.ScenarioSetup(scenarioInfo);
#line 87
    testRunner.Given("I am a sales management, operations or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 88
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
 testRunner.Then("all the claims in the Open status should be displayed by most recent date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the list of claims for the stations to which user is associated for sales " +
            "management, operations or station owner user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void VerifyTheListOfClaimsForTheStationsToWhichUserIsAssociatedForSalesManagementOperationsOrStationOwnerUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the list of claims for the stations to which user is associated for sales " +
                    "management, operations or station owner user", new string[] {
                        "Functional"});
#line 93
this.ScenarioSetup(scenarioInfo);
#line 94
    testRunner.Given("I am a sales management, operations or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 95
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 96
 testRunner.Then("I should see a list of claims for the stations to which user is associated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the color code of the all the status in the claims list page for sales man" +
            "agement, operations or station owner user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPageForSalesManagementOperationsOrStationOwnerUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the color code of the all the status in the claims list page for sales man" +
                    "agement, operations or station owner user", new string[] {
                        "GUI"});
#line 99
this.ScenarioSetup(scenarioInfo);
#line 100
    testRunner.Given("I am a sales management, operations or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 101
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 102
 testRunner.Then("Verify the color code of all the status in the claims list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the claims List grid display when I unselect all the status options for sa" +
            "les management, operations or station owner user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void VerifyTheClaimsListGridDisplayWhenIUnselectAllTheStatusOptionsForSalesManagementOperationsOrStationOwnerUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the claims List grid display when I unselect all the status options for sa" +
                    "les management, operations or station owner user", new string[] {
                        "Functional"});
#line 105
this.ScenarioSetup(scenarioInfo);
#line 106
    testRunner.Given("I am a sales management, operations or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 107
   testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 108
 testRunner.And("I uncheck all the display status options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.Then("Grid should be updated to display all claims associated to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the default status selection on the Claims List page for Claim specialist " +
            "user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void VerifyTheDefaultStatusSelectionOnTheClaimsListPageForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the default status selection on the Claims List page for Claim specialist " +
                    "user", new string[] {
                        "GUI"});
#line 114
this.ScenarioSetup(scenarioInfo);
#line 115
 testRunner.Given("I am a sales management, operations or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 116
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
 testRunner.Then("I can see Open status is selected by default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 118
 testRunner.And("I have option to change to different status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
 testRunner.And("I have option to select more than one status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Open status claims are displayed by the most recent submit date for Cl" +
            "aim specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void VerifyTheOpenStatusClaimsAreDisplayedByTheMostRecentSubmitDateForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Open status claims are displayed by the most recent submit date for Cl" +
                    "aim specialist user", new string[] {
                        "Functional"});
#line 122
this.ScenarioSetup(scenarioInfo);
#line 123
    testRunner.Given("I am a sales management, operations or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 124
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 125
 testRunner.Then("all the claims in the Open status should be displayed by most recent date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the list of claims for the stations to which user is associated for Claim " +
            "specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void VerifyTheListOfClaimsForTheStationsToWhichUserIsAssociatedForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the list of claims for the stations to which user is associated for Claim " +
                    "specialist user", new string[] {
                        "Functional"});
#line 129
this.ScenarioSetup(scenarioInfo);
#line 130
    testRunner.Given("I am a sales management, operations or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 131
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 132
 testRunner.Then("I should see a list of claims for the stations to which user is associated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the color code of the all the status in the claims list page for Claim spe" +
            "cialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPageForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the color code of the all the status in the claims list page for Claim spe" +
                    "cialist user", new string[] {
                        "GUI"});
#line 135
this.ScenarioSetup(scenarioInfo);
#line 136
    testRunner.Given("I am a sales management, operations or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 137
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
 testRunner.Then("Verify the color code of all the status in the claims list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the claims List grid display when I unselect all the status options for Cl" +
            "aim specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void VerifyTheClaimsListGridDisplayWhenIUnselectAllTheStatusOptionsForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the claims List grid display when I unselect all the status options for Cl" +
                    "aim specialist user", new string[] {
                        "Functional"});
#line 141
this.ScenarioSetup(scenarioInfo);
#line 142
    testRunner.Given("I am a sales management, operations or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 143
   testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 144
 testRunner.And("I uncheck all the display status options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.Then("Grid should be updated to display all claims associated to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
