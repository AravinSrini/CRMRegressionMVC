// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.InsuranceClaims.ClaimsList
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class InsuranceClaims_ClaimsListViewByUserFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Insurance Claims_Claims List View by User.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Insurance Claims_Claims List View by User", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint79",
                        "31990"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Insurance Claims_Claims List View by User")))
            {
                global::CRM.UITest.Scripts.InsuranceClaims.ClaimsList.InsuranceClaims_ClaimsListViewByUserFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31990-Verify the default status selection on the Claims List page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _31990_VerifyTheDefaultStatusSelectionOnTheClaimsListPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31990-Verify the default status selection on the Claims List page", new string[] {
                        "GUI"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner, Claim Specialist users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then("I can see Open status is selected by default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.And("I have option to select to different status Pending, Denied, Paid, Cancelled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31990-Verify the Open status claims are displayed by the most recent submit date")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31990_VerifyTheOpenStatusClaimsAreDisplayedByTheMostRecentSubmitDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31990-Verify the Open status claims are displayed by the most recent submit date", new string[] {
                        "Functional"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner, Claim Specialist users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
 testRunner.Then("all the claims in the Open status should be displayed by most recent date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31990-Verify the list of claims for the customer to which user is associated for " +
            "external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31990_VerifyTheListOfClaimsForTheCustomerToWhichUserIsAssociatedForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31990-Verify the list of claims for the customer to which user is associated for " +
                    "external users", new string[] {
                        "Functional"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, or shp.entrynorates user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("I should see a list of claims for the customer to which user is associated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31990-Verify the list of claims for the customer to which user is associated for " +
            "sales user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31990_VerifyTheListOfClaimsForTheCustomerToWhichUserIsAssociatedForSalesUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31990-Verify the list of claims for the customer to which user is associated for " +
                    "sales user", new string[] {
                        "Functional"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
    testRunner.Given("I am a sales user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.Then("I should see a list of claims for the customer(s) to which user is associated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void _31990_VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPage(string status, string color, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31990-Verify the color code of the all the status in the claims list page", @__tags);
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner, Claim Specialist users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 37
 testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.Then(string.Format("Verify the color code {0} of {1} Open, Pending, Denied, Paid, Cancelled in the cl" +
                        "aims list page", color, status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31990-Verify the color code of the all the status in the claims list page: Open")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Open")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:status", "Open")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Color", "#4f81bd")]
        public virtual void _31990_VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPage_Open()
        {
#line 35
this._31990_VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPage("Open", "#4f81bd", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31990-Verify the color code of the all the status in the claims list page: Pendin" +
            "g")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Pending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:status", "Pending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Color", "#674ea7")]
        public virtual void _31990_VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPage_Pending()
        {
#line 35
this._31990_VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPage("Pending", "#674ea7", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31990-Verify the color code of the all the status in the claims list page: Paid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Paid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:status", "Paid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Color", "#6aa84f")]
        public virtual void _31990_VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPage_Paid()
        {
#line 35
this._31990_VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPage("Paid", "#6aa84f", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31990-Verify the color code of the all the status in the claims list page: Denied" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Denied")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:status", "Denied")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Color", "#a61c00")]
        public virtual void _31990_VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPage_Denied()
        {
#line 35
this._31990_VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPage("Denied", "#a61c00", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31990-Verify the color code of the all the status in the claims list page: Cancel" +
            "led")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Cancelled")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:status", "Cancelled")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Color", "#f6b26b")]
        public virtual void _31990_VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPage_Cancelled()
        {
#line 35
this._31990_VerifyTheColorCodeOfTheAllTheStatusInTheClaimsListPage("Cancelled", "#f6b26b", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31990-Verify the claims List grid display when I unselect all the status options " +
            "for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31990_VerifyTheClaimsListGridDisplayWhenIUnselectAllTheStatusOptionsForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31990-Verify the claims List grid display when I unselect all the status options " +
                    "for external users", new string[] {
                        "Functional"});
#line 49
this.ScenarioSetup(scenarioInfo);
#line 50
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, or shp.entrynorates user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 51
   testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
 testRunner.And("I uncheck all the display status options Paid, Open, Pending, Denied, Cancelled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.Then("Grid should be updated to display all claims for the customer associated to the u" +
                    "ser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31990-Verify the claims List grid display when I unselect all the status options " +
            "for sales user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31990_VerifyTheClaimsListGridDisplayWhenIUnselectAllTheStatusOptionsForSalesUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31990-Verify the claims List grid display when I unselect all the status options " +
                    "for sales user", new string[] {
                        "Functional"});
#line 57
this.ScenarioSetup(scenarioInfo);
#line 58
    testRunner.Given("I am a sales user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
   testRunner.When("I arrive on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
 testRunner.And("I uncheck all the display status options Paid, Open, Pending, Denied, Cancelled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.Then("Grid should be updated to display all claims for the customer(s) associated to th" +
                    "e user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void _108304_TestToVerifyThatTheCarrierNameColumnStatusDisplayedAsNotAssignedWhenNoCarrierNameAssigned(string userName, string password, string noCarrierName, string user, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Sprint94",
                    "108304"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("108304_Test to verify that the Carrier name column status displayed as Not Assign" +
                    "ed when no carrier name assigned", @__tags);
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
 testRunner.Given(string.Format("I am a user and login into application with valid {0} and {1},", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
 testRunner.And(string.Format("I have claim(s) with {0} for {1}", noCarrierName, user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.When("I arrive on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
 testRunner.Then("I will see Not Assigned as the carrier name in the Carrier column for those claim" +
                    "s", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 71
 testRunner.And("I will not be displayed with Select... as the carrier name in the Carrier column " +
                    "for those claims", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("108304_Test to verify that the Carrier name column status displayed as Not Assign" +
            "ed when no carrier name assigned: username-CurrentSprintOperations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint94")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("108304")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "username-CurrentSprintOperations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "username-CurrentSprintOperations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "password-CurrentSprintOperations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NoCarrierName", "Select...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Internal")]
        public virtual void _108304_TestToVerifyThatTheCarrierNameColumnStatusDisplayedAsNotAssignedWhenNoCarrierNameAssigned_Username_CurrentSprintOperations()
        {
#line 66
this._108304_TestToVerifyThatTheCarrierNameColumnStatusDisplayedAsNotAssignedWhenNoCarrierNameAssigned("username-CurrentSprintOperations", "password-CurrentSprintOperations", "Select...", "Internal", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("108304_Test to verify that the Carrier name column status displayed as Not Assign" +
            "ed when no carrier name assigned: username-CurrentSprintSales")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint94")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("108304")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "username-CurrentSprintSales")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "username-CurrentSprintSales")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "password-CurrentSprintSales")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NoCarrierName", "Select...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Sales")]
        public virtual void _108304_TestToVerifyThatTheCarrierNameColumnStatusDisplayedAsNotAssignedWhenNoCarrierNameAssigned_Username_CurrentSprintSales()
        {
#line 66
this._108304_TestToVerifyThatTheCarrierNameColumnStatusDisplayedAsNotAssignedWhenNoCarrierNameAssigned("username-CurrentSprintSales", "password-CurrentSprintSales", "Select...", "Sales", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("108304_Test to verify that the Carrier name column status displayed as Not Assign" +
            "ed when no carrier name assigned: username-CurrentSprintshpentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint94")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("108304")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "username-CurrentSprintshpentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "username-CurrentSprintshpentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "password-CurrentSprintshpentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NoCarrierName", "Select...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "External")]
        public virtual void _108304_TestToVerifyThatTheCarrierNameColumnStatusDisplayedAsNotAssignedWhenNoCarrierNameAssigned_Username_CurrentSprintshpentry()
        {
#line 66
this._108304_TestToVerifyThatTheCarrierNameColumnStatusDisplayedAsNotAssignedWhenNoCarrierNameAssigned("username-CurrentSprintshpentry", "password-CurrentSprintshpentry", "Select...", "External", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("108304_Test to verify that the Carrier name column status displayed as Not Assign" +
            "ed when no carrier name assigned: username-CurrentsprintClaimspecialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint94")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("108304")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "username-CurrentsprintClaimspecialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "username-CurrentsprintClaimspecialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "password-CurrentsprintClaimspecialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NoCarrierName", "Select...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "claimspecialist")]
        public virtual void _108304_TestToVerifyThatTheCarrierNameColumnStatusDisplayedAsNotAssignedWhenNoCarrierNameAssigned_Username_CurrentsprintClaimspecialist()
        {
#line 66
this._108304_TestToVerifyThatTheCarrierNameColumnStatusDisplayedAsNotAssignedWhenNoCarrierNameAssigned("username-CurrentsprintClaimspecialist", "password-CurrentsprintClaimspecialist", "Select...", "claimspecialist", ((string[])(null)));
#line hidden
        }
        
        public virtual void _108304_TestToVerifyThatTheCarrierNameColumnStatusWhenCarrierNameAssigned(string userName, string password, string carrierName, string user, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Sprint94",
                    "108304"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("108304_Test to verify that the Carrier name column status when carrier name assig" +
                    "ned", @__tags);
#line 81
this.ScenarioSetup(scenarioInfo);
#line 82
 testRunner.Given(string.Format("I am a user and login into application with valid {0} and {1},", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 83
 testRunner.And(string.Format("I have claim(s) with {0} for {1}", carrierName, user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.When("I arrive on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 85
 testRunner.Then("I will not see Not Assigned as the carrier name in the Carrier column for those c" +
                    "laims", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("108304_Test to verify that the Carrier name column status when carrier name assig" +
            "ned: username-CurrentSprintOperations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint94")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("108304")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "username-CurrentSprintOperations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "username-CurrentSprintOperations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "password-CurrentSprintOperations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CarrierName", "R & L Carriers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Internal")]
        public virtual void _108304_TestToVerifyThatTheCarrierNameColumnStatusWhenCarrierNameAssigned_Username_CurrentSprintOperations()
        {
#line 81
this._108304_TestToVerifyThatTheCarrierNameColumnStatusWhenCarrierNameAssigned("username-CurrentSprintOperations", "password-CurrentSprintOperations", "R & L Carriers", "Internal", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("108304_Test to verify that the Carrier name column status when carrier name assig" +
            "ned: username-CurrentSprintSales")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint94")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("108304")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "username-CurrentSprintSales")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "username-CurrentSprintSales")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "password-CurrentSprintSales")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CarrierName", "Con-Way")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Sales")]
        public virtual void _108304_TestToVerifyThatTheCarrierNameColumnStatusWhenCarrierNameAssigned_Username_CurrentSprintSales()
        {
#line 81
this._108304_TestToVerifyThatTheCarrierNameColumnStatusWhenCarrierNameAssigned("username-CurrentSprintSales", "password-CurrentSprintSales", "Con-Way", "Sales", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("108304_Test to verify that the Carrier name column status when carrier name assig" +
            "ned: username-CurrentSprintshpentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint94")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("108304")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "username-CurrentSprintshpentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "username-CurrentSprintshpentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "password-CurrentSprintshpentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CarrierName", "R & L Carriers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "External")]
        public virtual void _108304_TestToVerifyThatTheCarrierNameColumnStatusWhenCarrierNameAssigned_Username_CurrentSprintshpentry()
        {
#line 81
this._108304_TestToVerifyThatTheCarrierNameColumnStatusWhenCarrierNameAssigned("username-CurrentSprintshpentry", "password-CurrentSprintshpentry", "R & L Carriers", "External", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("108304_Test to verify that the Carrier name column status when carrier name assig" +
            "ned: username-CurrentsprintClaimspecialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List View by User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31990")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint94")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("108304")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "username-CurrentsprintClaimspecialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "username-CurrentsprintClaimspecialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "password-CurrentsprintClaimspecialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CarrierName", "Con-Way")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "claimspecialist")]
        public virtual void _108304_TestToVerifyThatTheCarrierNameColumnStatusWhenCarrierNameAssigned_Username_CurrentsprintClaimspecialist()
        {
#line 81
this._108304_TestToVerifyThatTheCarrierNameColumnStatusWhenCarrierNameAssigned("username-CurrentsprintClaimspecialist", "password-CurrentsprintClaimspecialist", "Con-Way", "claimspecialist", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion

