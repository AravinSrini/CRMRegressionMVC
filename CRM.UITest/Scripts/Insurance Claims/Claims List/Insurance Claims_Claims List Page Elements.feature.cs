// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.InsuranceClaims.ClaimsList
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class InsuranceClaims_ClaimsListPageElementsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Insurance Claims_Claims List Page Elements.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Insurance Claims_Claims List Page Elements", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint79",
                        "31964"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Insurance Claims_Claims List Page Elements")))
            {
                global::CRM.UITest.Scripts.InsuranceClaims.ClaimsList.InsuranceClaims_ClaimsListPageElementsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the navigation to the claim list page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        public virtual void _31964_VerifyTheNavigationToTheClaimListPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the navigation to the claim list page", new string[] {
                        "GUI",
                        "Acceptance"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.When("I click on the claim navigation icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("I should be navigated to the Claim List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the claims list page elements for customers and station users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _31964_VerifyTheClaimsListPageElementsForCustomersAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the claims list page elements for customers and station users", new string[] {
                        "GUI"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.When("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then("Verify the page elements on the claim list page for header with instructional ver" +
                    "biage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
 testRunner.And("Verify a Submit a Claim button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And("default Selection is Open status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("Verify the search text box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("Export button on the Claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And("Grid View Option at top and bottom of the grid list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the view options present in top grid display of the cliam list page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _31964_VerifyTheViewOptionsPresentInTopGridDisplayOfTheCliamListPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the view options present in top grid display of the cliam list page", new string[] {
                        "GUI"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
 testRunner.When("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
 testRunner.Then("I should be able to view Options \'10 20 60 100 ALL\' under dropdown in top grid of" +
                    " the cliam list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the default grid display option on the claim list page load")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _31964_VerifyTheDefaultGridDisplayOptionOnTheClaimListPageLoad()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the default grid display option on the claim list page load", new string[] {
                        "GUI"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
 testRunner.When("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
 testRunner.Then("only ten records should be displayed on the claim list page load", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the view options present in bottom grid display of the cliam list pa" +
            "ge")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _31964_VerifyTheViewOptionsPresentInBottomGridDisplayOfTheCliamListPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the view options present in bottom grid display of the cliam list pa" +
                    "ge", new string[] {
                        "GUI"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 39
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 40
 testRunner.When("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
 testRunner.Then("I should be able to view Options 10, 20, 60, 100, and ALL under dropdown in botto" +
                    "m grid of the cliam list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the right navigation icon functionality on the claim list page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheRightNavigationIconFunctionalityOnTheClaimListPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the right navigation icon functionality on the claim list page", new string[] {
                        "GUI",
                        "Functional"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
 testRunner.And("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.When("I click on the right navigation icon in the top grid on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
 testRunner.Then("Next set of records should be displayed on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 49
 testRunner.And("left navigation icon should be enabled on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the left navigation icon functionality on the claim list page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheLeftNavigationIconFunctionalityOnTheClaimListPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the left navigation icon functionality on the claim list page", new string[] {
                        "GUI",
                        "Functional"});
#line 52
this.ScenarioSetup(scenarioInfo);
#line 53
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.And("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.When("I click on the the left navigation icon in the top grid on the claim list page fr" +
                    "om the next set of records page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
 testRunner.Then("I should see the previous default set of records on the cliam list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the column names on the claim list page for Customer and Station Use" +
            "rs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _31964_VerifyTheColumnNamesOnTheClaimListPageForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the column names on the claim list page for Customer and Station Use" +
                    "rs", new string[] {
                        "GUI"});
#line 59
this.ScenarioSetup(scenarioInfo);
#line 60
    testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
 testRunner.When("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.Then("verify the column names on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the Export dropdown arrow options on the claim list page for Custome" +
            "r and Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _31964_VerifyTheExportDropdownArrowOptionsOnTheClaimListPageForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the Export dropdown arrow options on the claim list page for Custome" +
                    "r and Station Users", new string[] {
                        "GUI"});
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
   testRunner.And("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
   testRunner.When("I click on the Export dropdown arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
   testRunner.Then("I should see the dropdown options to select All or Displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify column names and validate data for the Export dropdown select All op" +
            "tion functionality for Customer and Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyColumnNamesAndValidateDataForTheExportDropdownSelectAllOptionFunctionalityForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify column names and validate data for the Export dropdown select All op" +
                    "tion functionality for Customer and Station Users", new string[] {
                        "GUI",
                        "Functional"});
#line 72
this.ScenarioSetup(scenarioInfo);
#line 73
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 74
   testRunner.And("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
   testRunner.When("I click on the Export dropdown and select All option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
   testRunner.Then("Report should be generated of all records on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 77
   testRunner.And("all the column names and data from the claim list page should be displayed in the" +
                    " exported report", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify column names and validate data for the Export dropdown select Displa" +
            "yed option functionality for Customer and Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyColumnNamesAndValidateDataForTheExportDropdownSelectDisplayedOptionFunctionalityForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify column names and validate data for the Export dropdown select Displa" +
                    "yed option functionality for Customer and Station Users", new string[] {
                        "GUI",
                        "Functional"});
#line 80
this.ScenarioSetup(scenarioInfo);
#line 81
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 82
   testRunner.And("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
   testRunner.When("I click on the Export dropdown and select Displayed option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
   testRunner.Then("Report should be generated of displayed records on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 85
   testRunner.And("all the column names and data from the claim list page should be displayed in the" +
                    " exported report", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the search field functionality on the claim list page for Customer a" +
            "nd Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        public virtual void _31964_VerifyTheSearchFieldFunctionalityOnTheClaimListPageForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the search field functionality on the claim list page for Customer a" +
                    "nd Station Users", new string[] {
                        "GUI",
                        "Acceptance"});
#line 88
this.ScenarioSetup(scenarioInfo);
#line 89
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 90
   testRunner.And("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
   testRunner.When("I click in the search field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
   testRunner.Then("I have the option to type in any value \'ZZZ - Czar Customer Test\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 93
   testRunner.And("any rows that contain the values \'ZZZ - Czar Customer Test\' that were entered wil" +
                    "l be highlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the navigation to the submit claim form page for Customer and Statio" +
            "n Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        public virtual void _31964_VerifyTheNavigationToTheSubmitClaimFormPageForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the navigation to the submit claim form page for Customer and Statio" +
                    "n Users", new string[] {
                        "GUI",
                        "Acceptance"});
#line 98
this.ScenarioSetup(scenarioInfo);
#line 99
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 100
   testRunner.And("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
   testRunner.When("I click on the Submit a Claim button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 102
   testRunner.Then("I will arrive on the Submit a Claim form page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void _31964_VerifyTheInformationIconIsDisplayedOnlyForOpenDeniedCancelledAndPaidStatusInStatusColumnOnTheClaimListPageForCustomerAndStationUsers(string options, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the information Icon is displayed only for Open, Denied, Cancelled a" +
                    "nd Paid status in Status column on the claim list page for Customer and Station " +
                    "Users", @__tags);
#line 105
this.ScenarioSetup(scenarioInfo);
#line 106
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 107
   testRunner.And("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
   testRunner.When(string.Format("I select the show status {0} in the claims list page", options), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 109
   testRunner.Then(string.Format("I should see an Information Icon I displayed next to only Open, Denied, Cancelled" +
                        " and Paid {0} status", options), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the information Icon is displayed only for Open, Denied, Cancelled a" +
            "nd Paid status in Status column on the claim list page for Customer and Station " +
            "Users: Open")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Open")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:options", "Open")]
        public virtual void _31964_VerifyTheInformationIconIsDisplayedOnlyForOpenDeniedCancelledAndPaidStatusInStatusColumnOnTheClaimListPageForCustomerAndStationUsers_Open()
        {
#line 105
this._31964_VerifyTheInformationIconIsDisplayedOnlyForOpenDeniedCancelledAndPaidStatusInStatusColumnOnTheClaimListPageForCustomerAndStationUsers("Open", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the information Icon is displayed only for Open, Denied, Cancelled a" +
            "nd Paid status in Status column on the claim list page for Customer and Station " +
            "Users: Denied")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Denied")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:options", "Denied")]
        public virtual void _31964_VerifyTheInformationIconIsDisplayedOnlyForOpenDeniedCancelledAndPaidStatusInStatusColumnOnTheClaimListPageForCustomerAndStationUsers_Denied()
        {
#line 105
this._31964_VerifyTheInformationIconIsDisplayedOnlyForOpenDeniedCancelledAndPaidStatusInStatusColumnOnTheClaimListPageForCustomerAndStationUsers("Denied", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the information Icon is displayed only for Open, Denied, Cancelled a" +
            "nd Paid status in Status column on the claim list page for Customer and Station " +
            "Users: Cancelled")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Cancelled")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:options", "Cancelled")]
        public virtual void _31964_VerifyTheInformationIconIsDisplayedOnlyForOpenDeniedCancelledAndPaidStatusInStatusColumnOnTheClaimListPageForCustomerAndStationUsers_Cancelled()
        {
#line 105
this._31964_VerifyTheInformationIconIsDisplayedOnlyForOpenDeniedCancelledAndPaidStatusInStatusColumnOnTheClaimListPageForCustomerAndStationUsers("Cancelled", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the information Icon is displayed only for Open, Denied, Cancelled a" +
            "nd Paid status in Status column on the claim list page for Customer and Station " +
            "Users: Paid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Paid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:options", "Paid")]
        public virtual void _31964_VerifyTheInformationIconIsDisplayedOnlyForOpenDeniedCancelledAndPaidStatusInStatusColumnOnTheClaimListPageForCustomerAndStationUsers_Paid()
        {
#line 105
this._31964_VerifyTheInformationIconIsDisplayedOnlyForOpenDeniedCancelledAndPaidStatusInStatusColumnOnTheClaimListPageForCustomerAndStationUsers("Paid", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the Customer column on the claim list page" +
            " for Customer and Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheCustomerColumnOnTheClaimListPageForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the Customer column on the claim list page" +
                    " for Customer and Station Users", new string[] {
                        "GUI",
                        "Functional"});
#line 119
this.ScenarioSetup(scenarioInfo);
#line 120
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 121
   testRunner.When("I click on the sort arrow of the Customer column on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 122
   testRunner.Then("Customer column will be sorted alphabetically", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 123
   testRunner.And("clicking on Customer column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the Insured column on the claim list page " +
            "for Customer and Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheInsuredColumnOnTheClaimListPageForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the Insured column on the claim list page " +
                    "for Customer and Station Users", new string[] {
                        "GUI",
                        "Functional"});
#line 127
this.ScenarioSetup(scenarioInfo);
#line 128
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 129
   testRunner.When("I click on the sort arrow of the Insured column on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
   testRunner.Then("Insured column will be sorted alphabetically", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 131
   testRunner.And("clicking on Insured column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the DLSW Claim # column on the claim list " +
            "page for Customer and Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheDLSWClaimColumnOnTheClaimListPageForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the DLSW Claim # column on the claim list " +
                    "page for Customer and Station Users", new string[] {
                        "GUI",
                        "Functional"});
#line 134
this.ScenarioSetup(scenarioInfo);
#line 135
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 136
   testRunner.When("I click on the sort arrow of the DLSW Claim # column on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 137
   testRunner.Then("DLSW Claim # column will be sorted numerically lowest to highest", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 138
   testRunner.And("clicking on DLSW Claim # column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the DLSW Ref # column on the claim list pa" +
            "ge for Customer and Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheDLSWRefColumnOnTheClaimListPageForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the DLSW Ref # column on the claim list pa" +
                    "ge for Customer and Station Users", new string[] {
                        "GUI",
                        "Functional"});
#line 141
this.ScenarioSetup(scenarioInfo);
#line 142
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 143
   testRunner.When("I click on the sort arrow of the DLSW Ref # column on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 144
   testRunner.Then("DLSW Ref # column will be sorted alphabetically", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 145
   testRunner.And("clicking on DLSW Ref # arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the Amount column on the claim list page f" +
            "or Customer and Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheAmountColumnOnTheClaimListPageForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the Amount column on the claim list page f" +
                    "or Customer and Station Users", new string[] {
                        "GUI",
                        "Functional"});
#line 149
this.ScenarioSetup(scenarioInfo);
#line 150
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 151
   testRunner.When("I click on the sort arrow of the Amount column on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 152
   testRunner.Then("Amount column will be sorted numerically lowest to highest and clicking on Amount" +
                    " column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 153
   testRunner.And("clicking on Amount column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the Carrier column on the claim list page " +
            "for Customer and Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheCarrierColumnOnTheClaimListPageForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the Carrier column on the claim list page " +
                    "for Customer and Station Users", new string[] {
                        "GUI",
                        "Functional"});
#line 156
this.ScenarioSetup(scenarioInfo);
#line 157
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 158
   testRunner.When("I click on the sort arrow of the Carrier column on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 159
   testRunner.Then("Carrier column will be sorted alphabetically based on Carrier Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 160
   testRunner.And("clicking on Carrier column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the Status column on the claim list page f" +
            "or Customer and Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheStatusColumnOnTheClaimListPageForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the Status column on the claim list page f" +
                    "or Customer and Station Users", new string[] {
                        "GUI",
                        "Functional"});
#line 164
this.ScenarioSetup(scenarioInfo);
#line 165
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 166
   testRunner.When("I click on the sort arrow of the Status column on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 167
   testRunner.Then("Status column will be sorted alphabetically", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 168
   testRunner.And("clicking on Status column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the Submit Date column on the claim list p" +
            "age for Customer and Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheSubmitDateColumnOnTheClaimListPageForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the Submit Date column on the claim list p" +
                    "age for Customer and Station Users", new string[] {
                        "GUI",
                        "Functional"});
#line 171
this.ScenarioSetup(scenarioInfo);
#line 172
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 173
   testRunner.When("I click on the sort arrow of the Submit Date column on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 174
   testRunner.Then("Submit Date column will be sorted numerically from oldest to newest", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 175
   testRunner.And("clicking on Submit Date column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the Claim Age column on the claim list pag" +
            "e for Customer and Station Users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheClaimAgeColumnOnTheClaimListPageForCustomerAndStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the Claim Age column on the claim list pag" +
                    "e for Customer and Station Users", new string[] {
                        "GUI",
                        "Functional"});
#line 178
this.ScenarioSetup(scenarioInfo);
#line 179
   testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales Manage" +
                    "ment, Operations, Station Owner users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 180
   testRunner.When("I click on the sort arrow of the Claim Age column on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 181
   testRunner.Then("Claim Age column will be sorted numerically from lowest to highest", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 182
   testRunner.And("clicking on Claim Age column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the column names on the claim list page for claim specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _31964_VerifyTheColumnNamesOnTheClaimListPageForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the column names on the claim list page for claim specialist user", new string[] {
                        "GUI"});
#line 186
this.ScenarioSetup(scenarioInfo);
#line 187
    testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 188
 testRunner.When("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 189
 testRunner.Then("verify the column names on the claim list page for claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify column names and validate data for the Export dropdown select All op" +
            "tion functionality for claim specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyColumnNamesAndValidateDataForTheExportDropdownSelectAllOptionFunctionalityForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify column names and validate data for the Export dropdown select All op" +
                    "tion functionality for claim specialist user", new string[] {
                        "GUI",
                        "Functional"});
#line 194
this.ScenarioSetup(scenarioInfo);
#line 195
   testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 196
   testRunner.And("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
   testRunner.When("I click on the Export dropdown and select All option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 198
   testRunner.Then("Report should be generated of all records on the claim list page for Claim Specia" +
                    "list user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 199
   testRunner.And("all the column names and data from the claim list page should be displayed in the" +
                    " exported report for cliam specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify column names and validate data for the Export dropdown select Displa" +
            "yed option functionality for claim specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyColumnNamesAndValidateDataForTheExportDropdownSelectDisplayedOptionFunctionalityForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify column names and validate data for the Export dropdown select Displa" +
                    "yed option functionality for claim specialist user", new string[] {
                        "GUI",
                        "Functional"});
#line 202
this.ScenarioSetup(scenarioInfo);
#line 203
   testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 204
   testRunner.And("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
   testRunner.When("I click on the Export dropdown and select Displayed option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 206
   testRunner.Then("Report should be generated of displayed records on the claim list page for Claim " +
                    "Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 207
   testRunner.And("all the column names and data from the claim list page should be displayed in the" +
                    " exported report for cliam specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the associated code for the Open, Denied and Cancelled status on the" +
            " claim list page for Claim Specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _31964_VerifyTheAssociatedCodeForTheOpenDeniedAndCancelledStatusOnTheClaimListPageForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the associated code for the Open, Denied and Cancelled status on the" +
                    " claim list page for Claim Specialist user", new string[] {
                        "GUI"});
#line 211
this.ScenarioSetup(scenarioInfo);
#line 212
   testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 213
   testRunner.When("I click on the claim navigation icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 214
   testRunner.Then("I will see the status and associated code for Open, Denied and Cancelled status o" +
                    "n the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the information Icon is displayed only for Paid status in Status col" +
            "umn on the claim list page for Claim Specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _31964_VerifyTheInformationIconIsDisplayedOnlyForPaidStatusInStatusColumnOnTheClaimListPageForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the information Icon is displayed only for Paid status in Status col" +
                    "umn on the claim list page for Claim Specialist user", new string[] {
                        "GUI"});
#line 219
this.ScenarioSetup(scenarioInfo);
#line 220
   testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 221
   testRunner.When("I arrive on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 222
   testRunner.Then("I should see an Information Icon I displayed next to only Paid Status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the STA/CUS column on the claim list page " +
            "for claim specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheSTACUSColumnOnTheClaimListPageForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the STA/CUS column on the claim list page " +
                    "for claim specialist user", new string[] {
                        "GUI",
                        "Functional"});
#line 227
this.ScenarioSetup(scenarioInfo);
#line 228
   testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 229
   testRunner.When("I click on the sort arrow of the STA/CUS column on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 230
   testRunner.Then("STA/CUS column will be sorted alphabetically based on Customer Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 231
   testRunner.And("clicking on STA/CUS column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the Dates column on the claim list page fo" +
            "r claim specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheDatesColumnOnTheClaimListPageForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the Dates column on the claim list page fo" +
                    "r claim specialist user", new string[] {
                        "GUI",
                        "Functional"});
#line 234
this.ScenarioSetup(scenarioInfo);
#line 235
   testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 236
   testRunner.When("I click on the sort arrow of the Dates column on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 237
   testRunner.Then("Dates column will be sorted by most recent date based on Submit date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 238
   testRunner.And("clicking on Dates column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the Claim # column on the claim list page " +
            "for claim specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheClaimColumnOnTheClaimListPageForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the Claim # column on the claim list page " +
                    "for claim specialist user", new string[] {
                        "GUI",
                        "Functional"});
#line 241
this.ScenarioSetup(scenarioInfo);
#line 242
   testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 243
   testRunner.When("I click on the sort arrow of the Claim # column on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 244
   testRunner.Then("Claim # column will be sorted by lowest to highest based on DLSW Claim #", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 245
   testRunner.And("clicking on Claim # column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the Carrier column on the claim list page " +
            "for claim specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheCarrierColumnOnTheClaimListPageForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the Carrier column on the claim list page " +
                    "for claim specialist user", new string[] {
                        "GUI",
                        "Functional"});
#line 248
this.ScenarioSetup(scenarioInfo);
#line 249
   testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 250
   testRunner.When("I click on the sort arrow of the Carrier column on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 251
   testRunner.Then("Carrier column should be sorted alphabetically based on Carrier Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 252
   testRunner.And("clicking on Carrier column arrow again should reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the Insured column on the claim list page " +
            "for claim specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheInsuredColumnOnTheClaimListPageForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the Insured column on the claim list page " +
                    "for claim specialist user", new string[] {
                        "GUI",
                        "Functional"});
#line 255
this.ScenarioSetup(scenarioInfo);
#line 256
   testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 257
   testRunner.When("I click on the sort arrow of the Insured column on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 258
   testRunner.Then("Insured column should be sorted alphabetically", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 259
   testRunner.And("clicking on Insured column arrow again should reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the Amount column on the claim list page f" +
            "or claim specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheAmountColumnOnTheClaimListPageForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the Amount column on the claim list page f" +
                    "or claim specialist user", new string[] {
                        "GUI",
                        "Functional"});
#line 263
this.ScenarioSetup(scenarioInfo);
#line 264
   testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 265
   testRunner.When("I click on the sort arrow of the Amount column on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 266
   testRunner.Then("Amount column will be sorted lowest to highest", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 267
   testRunner.And("clicking on Amount column arrow again should reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the DLSW Ref # column on the claim list pa" +
            "ge for claim specialist users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheDLSWRefColumnOnTheClaimListPageForClaimSpecialistUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the DLSW Ref # column on the claim list pa" +
                    "ge for claim specialist users", new string[] {
                        "GUI",
                        "Functional"});
#line 270
this.ScenarioSetup(scenarioInfo);
#line 271
   testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 272
   testRunner.When("I click on the sort arrow of the DLSW Ref # column on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 273
   testRunner.Then("DLSW Ref # column should be sorted alphabetically", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 274
   testRunner.And("clicking on DLSW Ref # column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the DLSW Claim Specialist column on the cl" +
            "aim list page for claim specialist users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheDLSWClaimSpecialistColumnOnTheClaimListPageForClaimSpecialistUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the DLSW Claim Specialist column on the cl" +
                    "aim list page for claim specialist users", new string[] {
                        "GUI",
                        "Functional"});
#line 278
this.ScenarioSetup(scenarioInfo);
#line 279
   testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 280
   testRunner.When("I click on the sort arrow of the DLSW Claim Specialist column on the claim list p" +
                    "age", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 281
   testRunner.Then("DLSW Claim Specialist column will be sorted alphabetically", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 282
   testRunner.And("clicking on DLSW Claim Specialist column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the Submitted By column on the claim list " +
            "page for claim specialist users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheSubmittedByColumnOnTheClaimListPageForClaimSpecialistUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the Submitted By column on the claim list " +
                    "page for claim specialist users", new string[] {
                        "GUI",
                        "Functional"});
#line 285
this.ScenarioSetup(scenarioInfo);
#line 286
   testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 287
   testRunner.When("I click on the sort arrow of the Submitted By column on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 288
   testRunner.Then("Submitted By column will be sorted alphabetically", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 289
   testRunner.And("clicking on Submitted By column arrow again will reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the sort functionality of the Status column on the claim list page f" +
            "or claim specialist users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _31964_VerifyTheSortFunctionalityOfTheStatusColumnOnTheClaimListPageForClaimSpecialistUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the sort functionality of the Status column on the claim list page f" +
                    "or claim specialist users", new string[] {
                        "GUI",
                        "Functional"});
#line 292
this.ScenarioSetup(scenarioInfo);
#line 293
   testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 294
   testRunner.When("I click on the sort arrow of the Status column on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 295
   testRunner.Then("Status column should be sorted alphabetically", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 296
   testRunner.And("clicking on Status column arrow again should reverse the sort", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("31964-Verify the horizontal scroll view functionality when the grid is larger tha" +
            "n the screen size for claim specialist user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _31964_VerifyTheHorizontalScrollViewFunctionalityWhenTheGridIsLargerThanTheScreenSizeForClaimSpecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31964-Verify the horizontal scroll view functionality when the grid is larger tha" +
                    "n the screen size for claim specialist user", new string[] {
                        "GUI"});
#line 301
this.ScenarioSetup(scenarioInfo);
#line 302
  testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 303
  testRunner.When("the grid is larger than the screen size on the claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 304
  testRunner.Then("I will have the horizontal scroll to view the  remaining columns", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("91189_Verify the Saved Date Ack To Claimant displayed in Claims List under Dates " +
            "column")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Claims List Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("31964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("91189")]
        public virtual void _91189_VerifyTheSavedDateAckToClaimantDisplayedInClaimsListUnderDatesColumn()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("91189_Verify the Saved Date Ack To Claimant displayed in Claims List under Dates " +
                    "column", new string[] {
                        "91189"});
#line 308
this.ScenarioSetup(scenarioInfo);
#line 309
 testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 310
 testRunner.And("I am on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 311
 testRunner.When("the Date Ack To Claimant information from the Details tab of the Claim Details pa" +
                    "ge has been saved to the claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 312
 testRunner.Then("I will see the date that was saved in the Ack field of the Dates column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 313
 testRunner.And("the date in the Ack field will displayed as a link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
