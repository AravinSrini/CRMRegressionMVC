// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.InsuranceClaims
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class InsuranceClaims_ToVerifyAuto_PopulateFieldsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Insurance Claims -To verify Auto-Populate fields.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Insurance Claims -To verify Auto-Populate fields", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint78",
                        "39807"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Insurance Claims -To verify Auto-Populate fields")))
            {
                global::CRM.UITest.Scripts.InsuranceClaims.InsuranceClaims_ToVerifyAuto_PopulateFieldsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _39807_VerifyCarrierInformationSectionFieldsWillBePopulated_Shp_Inquiry(string dLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "API",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807-Verify Carrier Information Section fields will be populated -shp.inquiry", @__tags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
testRunner.Given("I am a External User-shp.inquiry", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
testRunner.And(string.Format("I have entered a valid DLSW BOL# {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
testRunner.And("I click on the Populate Form button,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
testRunner.When(string.Format("I receive the data for the submitted reference number from MG {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
testRunner.Then("the Carrier Information Section fields  DLSW Bill of Lading # ,DLSW BOL Date,Carr" +
                    "ier Name,Carrier PRO,Carrier PRO Date will be populated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807-Verify Carrier Information Section fields will be populated -shp.inquiry: Z" +
            "ZX00208760")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZX00208760")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "ZZX00208760")]
        public virtual void _39807_VerifyCarrierInformationSectionFieldsWillBePopulated_Shp_Inquiry_ZZX00208760()
        {
#line 8
this._39807_VerifyCarrierInformationSectionFieldsWillBePopulated_Shp_Inquiry("ZZX00208760", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807-Verify Carrier Information Section fields will be populated -shp.inquiry: Z" +
            "ZX00209982")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZX00209982")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "ZZX00209982")]
        public virtual void _39807_VerifyCarrierInformationSectionFieldsWillBePopulated_Shp_Inquiry_ZZX00209982()
        {
#line 8
this._39807_VerifyCarrierInformationSectionFieldsWillBePopulated_Shp_Inquiry("ZZX00209982", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyShipperInformationSectionFieldsWillBePopulated_Shp_Inquiry(string dLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "API",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807-Verify Shipper Information Section fields will be populated -shp.inquiry", @__tags);
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
testRunner.Given("I am a External User-shp.inquiry", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
testRunner.And(string.Format("I have entered a valid DLSW BOL# {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
testRunner.And("I click on the Populate Form button,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
testRunner.When(string.Format("I receive the data for the submitted reference number from MG {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
testRunner.Then("the Shipper Information Section Name,Address,City,State,Zip,Country will be popul" +
                    "ated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807-Verify Shipper Information Section fields will be populated -shp.inquiry: Z" +
            "ZX00208760")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZX00208760")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "ZZX00208760")]
        public virtual void _39807_VerifyShipperInformationSectionFieldsWillBePopulated_Shp_Inquiry_ZZX00208760()
        {
#line 22
this._39807_VerifyShipperInformationSectionFieldsWillBePopulated_Shp_Inquiry("ZZX00208760", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807-Verify Shipper Information Section fields will be populated -shp.inquiry: Z" +
            "ZX00209982")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZX00209982")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "ZZX00209982")]
        public virtual void _39807_VerifyShipperInformationSectionFieldsWillBePopulated_Shp_Inquiry_ZZX00209982()
        {
#line 22
this._39807_VerifyShipperInformationSectionFieldsWillBePopulated_Shp_Inquiry("ZZX00209982", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyConsigneeInformationSectionFieldsWillBePopulated_Shp_Inquiry(string dLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "API",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807-Verify Consignee Information Section fields will be populated -shp.inquiry", @__tags);
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
testRunner.Given("I am a External User-shp.inquiry", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
testRunner.And(string.Format("I have entered a valid DLSW BOL# {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
testRunner.And("I click on the Populate Form button,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
testRunner.When(string.Format("I receive the data for the submitted reference number from MG {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
testRunner.Then("the Consignee Information Section Name,Address,City,State,Zip,Country will be pop" +
                    "ulated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807-Verify Consignee Information Section fields will be populated -shp.inquiry:" +
            " ZZX00208760")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZX00208760")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "ZZX00208760")]
        public virtual void _39807_VerifyConsigneeInformationSectionFieldsWillBePopulated_Shp_Inquiry_ZZX00208760()
        {
#line 36
this._39807_VerifyConsigneeInformationSectionFieldsWillBePopulated_Shp_Inquiry("ZZX00208760", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807-Verify Consignee Information Section fields will be populated -shp.inquiry:" +
            " ZZX00209982")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZX00209982")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "ZZX00209982")]
        public virtual void _39807_VerifyConsigneeInformationSectionFieldsWillBePopulated_Shp_Inquiry_ZZX00209982()
        {
#line 36
this._39807_VerifyConsigneeInformationSectionFieldsWillBePopulated_Shp_Inquiry("ZZX00209982", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyCarrierInformationSectionFieldsWillBePopulated_OperationsUser(string dLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "API",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807-Verify Carrier Information Section fields will be populated -Operations use" +
                    "r", @__tags);
#line 52
this.ScenarioSetup(scenarioInfo);
#line 53
testRunner.Given("I am a Internal User-Operational user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
testRunner.And(string.Format("I have entered a valid DLSW BOL# {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
testRunner.And("I click on the Populate Form button,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
testRunner.When(string.Format("I receive the data for the submitted reference number from MG {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
testRunner.Then("the Carrier Information Section fields  DLSW Bill of Lading # ,DLSW BOL Date,Carr" +
                    "ier Name,Carrier PRO,Carrier PRO Date will be populated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807-Verify Carrier Information Section fields will be populated -Operations use" +
            "r: ZZX00208760")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZX00208760")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "ZZX00208760")]
        public virtual void _39807_VerifyCarrierInformationSectionFieldsWillBePopulated_OperationsUser_ZZX00208760()
        {
#line 52
this._39807_VerifyCarrierInformationSectionFieldsWillBePopulated_OperationsUser("ZZX00208760", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyShipperInformationSectionFieldsWillBePopulated_OperationsUser(string dLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "API",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807-Verify Shipper Information Section fields will be populated -Operations use" +
                    "r", @__tags);
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
testRunner.Given("I am a Internal User-Operational user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
testRunner.And(string.Format("I have entered a valid DLSW BOL# {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
testRunner.And("I click on the Populate Form button,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
testRunner.When(string.Format("I receive the data for the submitted reference number from MG {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
testRunner.Then("the Shipper Information Section Name,Address,City,State,Zip,Country will be popul" +
                    "ated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807-Verify Shipper Information Section fields will be populated -Operations use" +
            "r: ZZX00208760")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZX00208760")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "ZZX00208760")]
        public virtual void _39807_VerifyShipperInformationSectionFieldsWillBePopulated_OperationsUser_ZZX00208760()
        {
#line 66
this._39807_VerifyShipperInformationSectionFieldsWillBePopulated_OperationsUser("ZZX00208760", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyConsigneeInformationSectionFieldsWillBePopulated_OperationsUser(string dLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "API",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807-Verify Consignee Information Section fields will be populated -Operations u" +
                    "ser", @__tags);
#line 79
this.ScenarioSetup(scenarioInfo);
#line 80
testRunner.Given("I am a Internal User-Operational user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
testRunner.And(string.Format("I have entered a valid DLSW BOL# {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
testRunner.And("I click on the Populate Form button,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
testRunner.When(string.Format("I receive the data for the submitted reference number from MG {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 85
testRunner.Then("the Consignee Information Section Name,Address,City,State,Zip,Country will be pop" +
                    "ulated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807-Verify Consignee Information Section fields will be populated -Operations u" +
            "ser: ZZX00208760")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZX00208760")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "ZZX00208760")]
        public virtual void _39807_VerifyConsigneeInformationSectionFieldsWillBePopulated_OperationsUser_ZZX00208760()
        {
#line 79
this._39807_VerifyConsigneeInformationSectionFieldsWillBePopulated_OperationsUser("ZZX00208760", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807-Verify Consignee Information Section fields will be populated -Operations u" +
            "ser: ZZX00209982")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZX00209982")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "ZZX00209982")]
        public virtual void _39807_VerifyConsigneeInformationSectionFieldsWillBePopulated_OperationsUser_ZZX00209982()
        {
#line 79
this._39807_VerifyConsigneeInformationSectionFieldsWillBePopulated_OperationsUser("ZZX00209982", ((string[])(null)));
#line hidden
        }
        
        public virtual void _32268_VerifyCarrierInformationSectionFieldsWillBePopulated_CSAShipment(string dLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "API",
                    "Functional",
                    "Spring79",
                    "32268"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32268-Verify Carrier Information Section fields will be populated - CSA Shipment", @__tags);
#line 98
this.ScenarioSetup(scenarioInfo);
#line 99
testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 100
testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
testRunner.And(string.Format("I have entered a valid DLSW BOL# {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
testRunner.And("I click on the Populate Form button,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
testRunner.When(string.Format("I receive the data for the submitted reference number from CSA {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
testRunner.Then("the Carrier Information Section fields  DLSW Bill of Lading # ,DLSW BOL Date,Carr" +
                    "ier Name,Carrier PRO,Carrier PRO Date will be populated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32268-Verify Carrier Information Section fields will be populated - CSA Shipment:" +
            " 9920495")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Spring79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("32268")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "9920495")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "9920495")]
        public virtual void _32268_VerifyCarrierInformationSectionFieldsWillBePopulated_CSAShipment_9920495()
        {
#line 98
this._32268_VerifyCarrierInformationSectionFieldsWillBePopulated_CSAShipment("9920495", ((string[])(null)));
#line hidden
        }
        
        public virtual void _32268_VerifyShipperInformationSectionFieldsWillBePopulated_CSAShipment(string dLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "API",
                    "Functional",
                    "Spring79",
                    "32268"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32268-Verify Shipper Information Section fields will be populated - CSA Shipment", @__tags);
#line 111
this.ScenarioSetup(scenarioInfo);
#line 112
testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 113
testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
testRunner.And(string.Format("I have entered a valid DLSW BOL# {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
testRunner.And("I click on the Populate Form button,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
testRunner.When(string.Format("I receive the data for the submitted reference number from CSA {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
testRunner.Then("the Shipper Information Section Name,Address,City,State,Zip,Country will be popul" +
                    "ated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32268-Verify Shipper Information Section fields will be populated - CSA Shipment:" +
            " 9920495")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Spring79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("32268")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "9920495")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "9920495")]
        public virtual void _32268_VerifyShipperInformationSectionFieldsWillBePopulated_CSAShipment_9920495()
        {
#line 111
this._32268_VerifyShipperInformationSectionFieldsWillBePopulated_CSAShipment("9920495", ((string[])(null)));
#line hidden
        }
        
        public virtual void _32268_VerifyConsigneeInformationSectionFieldsWillBePopulated_CSAShipment(string dLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "API",
                    "Functional",
                    "Spring79",
                    "32268"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32268-Verify Consignee Information Section fields will be populated - CSA Shipmen" +
                    "t", @__tags);
#line 124
this.ScenarioSetup(scenarioInfo);
#line 125
testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates, Sales, Sales" +
                    " Management, Operations, Station Owner, or Claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 126
testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
testRunner.And(string.Format("I have entered a valid DLSW BOL# {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
testRunner.And("I click on the Populate Form button,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
testRunner.When(string.Format("I receive the data for the submitted reference number from CSA {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
testRunner.Then("the Consignee Information Section Name,Address,City,State,Zip,Country will be pop" +
                    "ulated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32268-Verify Consignee Information Section fields will be populated - CSA Shipmen" +
            "t: 1255970")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Spring79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("32268")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "1255970")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "1255970")]
        public virtual void _32268_VerifyConsigneeInformationSectionFieldsWillBePopulated_CSAShipment_1255970()
        {
#line 124
this._32268_VerifyConsigneeInformationSectionFieldsWillBePopulated_CSAShipment("1255970", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheTextMessageUponEnteringInvalidBOLNumberForSalesManagementUsers(string invalidDLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the Text Message upon entering invalid BOL number for Sales Manage" +
                    "ment Users", @__tags);
#line 144
 this.ScenarioSetup(scenarioInfo);
#line 145
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 146
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
 testRunner.And(string.Format("I have entered a Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
 testRunner.When("I clicked on the Populate Form button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 149
 testRunner.Then("I will see the text message notifying user for Invalid BOL number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the Text Message upon entering invalid BOL number for Sales Manage" +
            "ment Users: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        public virtual void _39807_VerifyTheTextMessageUponEnteringInvalidBOLNumberForSalesManagementUsers_ZZZZZZZZZZ8()
        {
#line 144
 this._39807_VerifyTheTextMessageUponEnteringInvalidBOLNumberForSalesManagementUsers("ZZZZZZZZZZ8", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringValidBOLNumberForSalesManagementUsers(string invalidDLSWBOLNumber, string dLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering vali" +
                    "d BOL number for Sales Management Users", @__tags);
#line 156
 this.ScenarioSetup(scenarioInfo);
#line 157
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 158
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
 testRunner.When(string.Format("I entered new DLSW BOL# {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 161
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering vali" +
            "d BOL number for Sales Management Users: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "ZZX00208760")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringValidBOLNumberForSalesManagementUsers_ZZZZZZZZZZ8()
        {
#line 156
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringValidBOLNumberForSalesManagementUsers("ZZZZZZZZZZ8", "ZZX00208760", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringDLSWRefNumberForSalesManagementUser(string invalidDLSWBOLNumber, string dLSWRefnumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering DLSW" +
                    " Ref number for Sales Management User", @__tags);
#line 168
 this.ScenarioSetup(scenarioInfo);
#line 169
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 170
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
 testRunner.When(string.Format("I entered any DLSW Refnumber{0}", dLSWRefnumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 173
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering DLSW" +
            " Ref number for Sales Management User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWRefnumber", "ZZX00208760")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringDLSWRefNumberForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 168
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringDLSWRefNumberForSalesManagementUser("ZZZZZZZZZZ8", "ZZX00208760", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierNameForSalesManagementUser(string invalidDLSWBOLNumber, string carrierName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Carr" +
                    "ier Name for Sales Management User", @__tags);
#line 180
 this.ScenarioSetup(scenarioInfo);
#line 181
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 182
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
 testRunner.When(string.Format("I entered Carrier Name{0}", carrierName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 185
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Carr" +
            "ier Name for Sales Management User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carrierName", "Fedex Priority")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierNameForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 180
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierNameForSalesManagementUser("ZZZZZZZZZZ8", "Fedex Priority", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringDLSWShipDateForSalesManagementUser(string invalidDLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering DLSW" +
                    " Ship Date for Sales Management User", @__tags);
#line 192
 this.ScenarioSetup(scenarioInfo);
#line 193
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 194
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
 testRunner.When("I entered DLSW Ship Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 197
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering DLSW" +
            " Ship Date for Sales Management User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringDLSWShipDateForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 192
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringDLSWShipDateForSalesManagementUser("ZZZZZZZZZZ8", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierProFieldForSalesManagementUser(string invalidDLSWBOLNumber, string carrierProvalue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Carr" +
                    "ier Pro field for Sales Management User", @__tags);
#line 205
 this.ScenarioSetup(scenarioInfo);
#line 206
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 207
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 208
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
 testRunner.When(string.Format("I entered Carrier Pro field{0}", carrierProvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 210
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Carr" +
            "ier Pro field for Sales Management User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CarrierProvalue", "sd45245")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierProFieldForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 205
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierProFieldForSalesManagementUser("ZZZZZZZZZZ8", "sd45245", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierProDateForSalesManagementUser(string invalidDLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Carr" +
                    "ier Pro Date for Sales Management User", @__tags);
#line 217
 this.ScenarioSetup(scenarioInfo);
#line 218
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 219
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 220
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
 testRunner.When("I entered Carrier Pro Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 222
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Carr" +
            "ier Pro Date for Sales Management User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierProDateForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 217
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierProDateForSalesManagementUser("ZZZZZZZZZZ8", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperNameForSalesManagementUser(string invalidDLSWBOLNumber, string name, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
                    "per Name for SalesManagement User", @__tags);
#line 229
 this.ScenarioSetup(scenarioInfo);
#line 230
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 231
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 232
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 233
 testRunner.When(string.Format("I entered Shipper Name{0}", name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 234
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
            "per Name for SalesManagement User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Name", "Tester")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperNameForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 229
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperNameForSalesManagementUser("ZZZZZZZZZZ8", "Tester", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperAddressForSalesManagementUser(string invalidDLSWBOLNumber, string address, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
                    "per Address for SalesManagement User", @__tags);
#line 242
 this.ScenarioSetup(scenarioInfo);
#line 243
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 244
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 245
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
 testRunner.When(string.Format("I entered Shipper Address{0}", address), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 247
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
            "per Address for SalesManagement User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "Park Avenue")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperAddressForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 242
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperAddressForSalesManagementUser("ZZZZZZZZZZ8", "Park Avenue", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperAddress2ForSalesManagementUser(string invalidDLSWBOLNumber, string address, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
                    "per Address2 for SalesManagement User", @__tags);
#line 254
 this.ScenarioSetup(scenarioInfo);
#line 255
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 256
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 257
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
 testRunner.When(string.Format("I have entered Shipper Address two {0}", address), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 259
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
            "per Address2 for SalesManagement User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "Marine Park")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperAddress2ForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 254
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperAddress2ForSalesManagementUser("ZZZZZZZZZZ8", "Marine Park", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperZipPostalForSalesManagementUser(string invalidDLSWBOLNumber, string zip, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
                    "per Zip/postal for SalesManagement User", @__tags);
#line 266
 this.ScenarioSetup(scenarioInfo);
#line 267
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 268
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 269
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
 testRunner.When(string.Format("I have entered Shipper Zip/Postal {0}", zip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 271
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
            "per Zip/postal for SalesManagement User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:zip", "90001")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperZipPostalForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 266
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperZipPostalForSalesManagementUser("ZZZZZZZZZZ8", "90001", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperCountryForSalesManagementUser(string invalidDLSWBOLNumber, string country, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
                    "per Country for SalesManagement User", @__tags);
#line 278
 this.ScenarioSetup(scenarioInfo);
#line 279
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 280
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 281
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 282
 testRunner.When(string.Format("I have entered Shipper Country {0}", country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 283
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
            "per Country for SalesManagement User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:country", "Turkey")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperCountryForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 278
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperCountryForSalesManagementUser("ZZZZZZZZZZ8", "Turkey", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperStateForSalesManagementUser(string invalidDLSWBOLNumber, string state, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
                    "per State for SalesManagement User", @__tags);
#line 290
 this.ScenarioSetup(scenarioInfo);
#line 291
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 292
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 293
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
 testRunner.When(string.Format("I have entered Shipper State {0}", state), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 295
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
            "per State for SalesManagement User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:state", "AL")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperStateForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 290
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperStateForSalesManagementUser("ZZZZZZZZZZ8", "AL", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperCityForSalesManagementUser(string invalidDLSWBOLNumber, string city, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
                    "per City for SalesManagement User", @__tags);
#line 302
 this.ScenarioSetup(scenarioInfo);
#line 303
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 304
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 305
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 306
 testRunner.When(string.Format("I have entered Shipper City {0}", city), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 307
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
            "per City for SalesManagement User: InvalidDLSWBOLNumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDLSWBOLNumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "InvalidDLSWBOLNumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:city", "Miami")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperCityForSalesManagementUser_InvalidDLSWBOLNumber()
        {
#line 302
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperCityForSalesManagementUser("InvalidDLSWBOLNumber", "Miami", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeNameForSalesManagementUser(string invalidDLSWBOLNumber, string name, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
                    "ignee Name for SalesManagement User", @__tags);
#line 314
 this.ScenarioSetup(scenarioInfo);
#line 315
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 316
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
 testRunner.When(string.Format("I entered Consignee Name{0}", name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 319
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
            "ignee Name for SalesManagement User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Name", "Tester")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeNameForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 314
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeNameForSalesManagementUser("ZZZZZZZZZZ8", "Tester", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeAddressForSalesManagementUser(string invalidDLSWBOLNumber, string address, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
                    "ignee Address for SalesManagement User", @__tags);
#line 326
 this.ScenarioSetup(scenarioInfo);
#line 327
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 328
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 329
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 330
 testRunner.When(string.Format("I entered Consignee Address{0}", address), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 331
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
            "ignee Address for SalesManagement User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "Highways")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeAddressForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 326
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeAddressForSalesManagementUser("ZZZZZZZZZZ8", "Highways", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeAddress2ForSalesManagementUser(string invalidDLSWBOLNumber, string address, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
                    "ignee Address2 for SalesManagement User", @__tags);
#line 338
 this.ScenarioSetup(scenarioInfo);
#line 339
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 340
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 341
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 342
 testRunner.When(string.Format("I have entered Consignee Address two {0}", address), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 343
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
            "ignee Address2 for SalesManagement User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "St Annes")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeAddress2ForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 338
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeAddress2ForSalesManagementUser("ZZZZZZZZZZ8", "St Annes", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeZipPostalForSalesManagementUser(string invalidDLSWBOLNumber, string zip, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
                    "ignee Zip/postal for SalesManagement User", @__tags);
#line 350
 this.ScenarioSetup(scenarioInfo);
#line 351
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 352
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
 testRunner.When(string.Format("I have entered Consignee Zip/Postal {0}", zip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 355
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
            "ignee Zip/postal for SalesManagement User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:zip", "90001")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeZipPostalForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 350
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeZipPostalForSalesManagementUser("ZZZZZZZZZZ8", "90001", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeCountryForSalesManagementUser(string invalidDLSWBOLNumber, string country, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
                    "ignee Country for SalesManagement User", @__tags);
#line 362
 this.ScenarioSetup(scenarioInfo);
#line 363
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 364
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 365
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 366
 testRunner.When(string.Format("I have entered Consignee Country {0}", country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 367
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
            "ignee Country for SalesManagement User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:country", "Turkey")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeCountryForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 362
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeCountryForSalesManagementUser("ZZZZZZZZZZ8", "Turkey", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeStateForSalesManagementUser(string invalidDLSWBOLNumber, string state, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
                    "ignee State for SalesManagement User", @__tags);
#line 374
 this.ScenarioSetup(scenarioInfo);
#line 375
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 376
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 377
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 378
 testRunner.When(string.Format("I have entered Consignee State {0}", state), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 379
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
            "ignee State for SalesManagement User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:state", "AL")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeStateForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 374
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeStateForSalesManagementUser("ZZZZZZZZZZ8", "AL", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeCityForSalesManagementUser(string invalidDLSWBOLNumber, string city, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
                    "ignee City for SalesManagement User", @__tags);
#line 386
 this.ScenarioSetup(scenarioInfo);
#line 387
 testRunner.Given("I am Sales Management User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 388
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 389
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
 testRunner.When(string.Format("I have entered Consignee City {0}", city), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 391
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
            "ignee City for SalesManagement User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:city", "Miami")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeCityForSalesManagementUser_ZZZZZZZZZZ8()
        {
#line 386
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeCityForSalesManagementUser("ZZZZZZZZZZ8", "Miami", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheTextMessageUponEnteringInvalidBOLNumberForShipmentEntryUsers(string invalidDLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the Text Message upon entering invalid BOL number for Shipment Ent" +
                    "ry Users", @__tags);
#line 400
 this.ScenarioSetup(scenarioInfo);
#line 401
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 402
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 403
 testRunner.And(string.Format("I have entered a Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 404
 testRunner.When("I clicked on the Populate Form button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 405
 testRunner.Then("I will see the text message notifying user for Invalid BOL number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the Text Message upon entering invalid BOL number for Shipment Ent" +
            "ry Users: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        public virtual void _39807_VerifyTheTextMessageUponEnteringInvalidBOLNumberForShipmentEntryUsers_ZZZZZZZZZZ8()
        {
#line 400
 this._39807_VerifyTheTextMessageUponEnteringInvalidBOLNumberForShipmentEntryUsers("ZZZZZZZZZZ8", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringValidBOLNumberForShipmentEntryUsers(string invalidDLSWBOLNumber, string dLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering vali" +
                    "d BOL number for Shipment Entry Users", @__tags);
#line 412
 this.ScenarioSetup(scenarioInfo);
#line 413
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 414
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 415
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 416
 testRunner.When(string.Format("I entered new DLSW BOL# {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 417
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering vali" +
            "d BOL number for Shipment Entry Users: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "ZZX00208760")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringValidBOLNumberForShipmentEntryUsers_ZZZZZZZZZZ8()
        {
#line 412
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringValidBOLNumberForShipmentEntryUsers("ZZZZZZZZZZ8", "ZZX00208760", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringDLSWRefNumberForShipmentEntryUser(string invalidDLSWBOLNumber, string dLSWRefnumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering DLSW" +
                    " Ref number for Shipment Entry User", @__tags);
#line 424
 this.ScenarioSetup(scenarioInfo);
#line 425
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 426
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 427
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 428
 testRunner.When(string.Format("I entered any DLSW Refnumber{0}", dLSWRefnumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 429
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering DLSW" +
            " Ref number for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWRefnumber", "ZZX00208760")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringDLSWRefNumberForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 424
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringDLSWRefNumberForShipmentEntryUser("ZZZZZZZZZZ8", "ZZX00208760", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierNameForShipmentEntryUser(string invalidDLSWBOLNumber, string carrierName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Carr" +
                    "ier Name for Shipment Entry User", @__tags);
#line 436
 this.ScenarioSetup(scenarioInfo);
#line 437
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 438
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 439
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 440
 testRunner.When(string.Format("I entered Carrier Name{0}", carrierName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 441
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Carr" +
            "ier Name for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carrierName", "Fedex Priority")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierNameForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 436
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierNameForShipmentEntryUser("ZZZZZZZZZZ8", "Fedex Priority", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringDLSWShipDateForShipmentEntryUser(string invalidDLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering DLSW" +
                    " Ship Date for Shipment Entry User", @__tags);
#line 448
 this.ScenarioSetup(scenarioInfo);
#line 449
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 450
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 451
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 452
 testRunner.When("I entered DLSW Ship Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 453
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering DLSW" +
            " Ship Date for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringDLSWShipDateForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 448
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringDLSWShipDateForShipmentEntryUser("ZZZZZZZZZZ8", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierProFieldForShipmentEntryUser(string invalidDLSWBOLNumber, string carrierProvalue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Carr" +
                    "ier Pro field for Shipment Entry User", @__tags);
#line 461
 this.ScenarioSetup(scenarioInfo);
#line 462
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 463
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 464
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 465
 testRunner.When(string.Format("I entered Carrier Pro field{0}", carrierProvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 466
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Carr" +
            "ier Pro field for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CarrierProvalue", "sd45245")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierProFieldForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 461
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierProFieldForShipmentEntryUser("ZZZZZZZZZZ8", "sd45245", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierProDateForShipmentEntryUser(string invalidDLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Carr" +
                    "ier Pro Date for Shipment Entry User", @__tags);
#line 473
 this.ScenarioSetup(scenarioInfo);
#line 474
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 475
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 476
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 477
 testRunner.When("I entered Carrier Pro Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 478
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Carr" +
            "ier Pro Date for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierProDateForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 473
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringCarrierProDateForShipmentEntryUser("ZZZZZZZZZZ8", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperNameForShipmentEntryUser(string invalidDLSWBOLNumber, string name, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
                    "per Name for Shipment Entry User", @__tags);
#line 485
 this.ScenarioSetup(scenarioInfo);
#line 486
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 487
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 488
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 489
 testRunner.When(string.Format("I entered Shipper Name{0}", name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 490
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
            "per Name for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Name", "Tester")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperNameForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 485
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperNameForShipmentEntryUser("ZZZZZZZZZZ8", "Tester", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperAddressForShipmentEntryUser(string invalidDLSWBOLNumber, string address, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
                    "per Address for Shipment Entry User", @__tags);
#line 498
 this.ScenarioSetup(scenarioInfo);
#line 499
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 500
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 501
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 502
 testRunner.When(string.Format("I entered Shipper Address{0}", address), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 503
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
            "per Address for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "Park Avenue")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperAddressForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 498
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperAddressForShipmentEntryUser("ZZZZZZZZZZ8", "Park Avenue", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperAddress2ForShipmentEntryUser(string invalidDLSWBOLNumber, string address, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
                    "per Address2 for Shipment Entry User", @__tags);
#line 510
 this.ScenarioSetup(scenarioInfo);
#line 511
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 512
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 513
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 514
 testRunner.When(string.Format("I have entered Shipper Address two {0}", address), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 515
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
            "per Address2 for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "Marine Park")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperAddress2ForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 510
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperAddress2ForShipmentEntryUser("ZZZZZZZZZZ8", "Marine Park", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperZipPostalForShipmentEntryUser(string invalidDLSWBOLNumber, string zip, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
                    "per Zip/postal for Shipment Entry User", @__tags);
#line 522
 this.ScenarioSetup(scenarioInfo);
#line 523
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 524
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 525
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 526
 testRunner.When(string.Format("I have entered Shipper Zip/Postal {0}", zip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 527
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
            "per Zip/postal for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:zip", "90001")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperZipPostalForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 522
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperZipPostalForShipmentEntryUser("ZZZZZZZZZZ8", "90001", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperCountryForShipmentEntryUser(string invalidDLSWBOLNumber, string country, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
                    "per Country for Shipment Entry User", @__tags);
#line 534
 this.ScenarioSetup(scenarioInfo);
#line 535
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 536
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 537
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 538
 testRunner.When(string.Format("I have entered Shipper Country {0}", country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 539
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
            "per Country for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:country", "Turkey")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperCountryForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 534
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperCountryForShipmentEntryUser("ZZZZZZZZZZ8", "Turkey", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperStateForShipmentEntryUser(string invalidDLSWBOLNumber, string state, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
                    "per State for Shipment Entry User", @__tags);
#line 546
 this.ScenarioSetup(scenarioInfo);
#line 547
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 548
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 549
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 550
 testRunner.When(string.Format("I have entered Shipper State {0}", state), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 551
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
            "per State for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:state", "AL")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperStateForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 546
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperStateForShipmentEntryUser("ZZZZZZZZZZ8", "AL", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperCityForShipmentEntryUser(string invalidDLSWBOLNumber, string city, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
                    "per City for Shipment Entry User", @__tags);
#line 558
 this.ScenarioSetup(scenarioInfo);
#line 559
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 560
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 561
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 562
 testRunner.When(string.Format("I have entered Shipper City {0}", city), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 563
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Ship" +
            "per City for Shipment Entry User: InvalidDLSWBOLNumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDLSWBOLNumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "InvalidDLSWBOLNumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:city", "Miami")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperCityForShipmentEntryUser_InvalidDLSWBOLNumber()
        {
#line 558
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringShipperCityForShipmentEntryUser("InvalidDLSWBOLNumber", "Miami", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeNameForShipmentEntryUser(string invalidDLSWBOLNumber, string name, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
                    "ignee Name for Shipment Entry User", @__tags);
#line 570
 this.ScenarioSetup(scenarioInfo);
#line 571
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 572
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 573
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 574
 testRunner.When(string.Format("I entered Consignee Name{0}", name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 575
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
            "ignee Name for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Name", "Tester")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeNameForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 570
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeNameForShipmentEntryUser("ZZZZZZZZZZ8", "Tester", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeAddressForShipmentEntryUser(string invalidDLSWBOLNumber, string address, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
                    "ignee Address for Shipment Entry User", @__tags);
#line 582
 this.ScenarioSetup(scenarioInfo);
#line 583
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 584
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 585
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 586
 testRunner.When(string.Format("I entered Consignee Address{0}", address), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 587
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
            "ignee Address for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "Highways")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeAddressForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 582
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeAddressForShipmentEntryUser("ZZZZZZZZZZ8", "Highways", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeAddress2ForShipmentEntryUser(string invalidDLSWBOLNumber, string address, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the absence of invalid BOL number Text Message up on entering Consignee Ad" +
                    "dress2 for Shipment Entry User", @__tags);
#line 594
 this.ScenarioSetup(scenarioInfo);
#line 595
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 596
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 597
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 598
 testRunner.When(string.Format("I have entered Consignee Address two {0}", address), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 599
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the absence of invalid BOL number Text Message up on entering Consignee Ad" +
            "dress2 for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "St Annes")]
        public virtual void VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeAddress2ForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 594
 this.VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeAddress2ForShipmentEntryUser("ZZZZZZZZZZ8", "St Annes", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeZipPostalForShipmentEntryUser(string invalidDLSWBOLNumber, string zip, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
                    "ignee Zip/postal for Shipment Entry User", @__tags);
#line 606
 this.ScenarioSetup(scenarioInfo);
#line 607
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 608
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 609
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 610
 testRunner.When(string.Format("I have entered Consignee Zip/Postal {0}", zip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 611
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
            "ignee Zip/postal for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:zip", "90001")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeZipPostalForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 606
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeZipPostalForShipmentEntryUser("ZZZZZZZZZZ8", "90001", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeCountryForShipmentEntryUser(string invalidDLSWBOLNumber, string country, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
                    "ignee Country for Shipment Entry User", @__tags);
#line 618
 this.ScenarioSetup(scenarioInfo);
#line 619
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 620
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 621
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 622
 testRunner.When(string.Format("I have entered Consignee Country {0}", country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 623
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
            "ignee Country for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:country", "Turkey")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeCountryForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 618
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeCountryForShipmentEntryUser("ZZZZZZZZZZ8", "Turkey", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeStateForShipmentEntryUser(string invalidDLSWBOLNumber, string state, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
                    "ignee State for Shipment Entry User", @__tags);
#line 630
 this.ScenarioSetup(scenarioInfo);
#line 631
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 632
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 633
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 634
 testRunner.When(string.Format("I have entered Consignee State {0}", state), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 635
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
            "ignee State for Shipment Entry User: ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "ZZZZZZZZZZ8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:state", "AL")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeStateForShipmentEntryUser_ZZZZZZZZZZ8()
        {
#line 630
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeStateForShipmentEntryUser("ZZZZZZZZZZ8", "AL", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeCityForShipmentEntryUser(string invalidDLSWBOLNumber, string city, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
                    "ignee City for Shipment Entry User", @__tags);
#line 642
 this.ScenarioSetup(scenarioInfo);
#line 643
 testRunner.Given("I am Shipment Entry User with Access to Claims Module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 644
 testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 645
 testRunner.And(string.Format("I received a message for Invalid DLSW BOL# {0}", invalidDLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 646
 testRunner.When(string.Format("I have entered Consignee City {0}", city), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 647
 testRunner.Then("the Invalid BOL number text message will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39807 - Verify the absence of invalid BOL number Text Message up on entering Cons" +
            "ignee City for Shipment Entry User: InvalidDLSWBOLNumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims -To verify Auto-Populate fields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39807")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDLSWBOLNumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidDLSWBOLNumber", "InvalidDLSWBOLNumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:city", "Miami")]
        public virtual void _39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeCityForShipmentEntryUser_InvalidDLSWBOLNumber()
        {
#line 642
 this._39807_VerifyTheAbsenceOfInvalidBOLNumberTextMessageUpOnEnteringConsigneeCityForShipmentEntryUser("InvalidDLSWBOLNumber", "Miami", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
