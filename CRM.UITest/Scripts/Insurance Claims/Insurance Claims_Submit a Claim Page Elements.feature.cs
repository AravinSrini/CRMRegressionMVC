// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.InsuranceClaims
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class InsuranceClaims_SubmitAClaimPageElementsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Insurance Claims_Submit a Claim Page Elements.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Insurance Claims_Submit a Claim Page Elements", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint78"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Insurance Claims_Submit a Claim Page Elements")))
            {
                global::CRM.UITest.Scripts.InsuranceClaims.InsuranceClaims_SubmitAClaimPageElementsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify navigation to Submit a Claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyNavigationToSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify navigation to Submit a Claim page for external users", new string[] {
                        "Functional"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.When("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("I must be navigated to Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify navigation to Submit a Claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyNavigationToSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify navigation to Submit a Claim page for internal users", new string[] {
                        "Functional"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.When("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("I must be navigated to Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of expected page elements in the header section of S" +
            "ubmit a claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyTheExistenceOfExpectedPageElementsInTheHeaderSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of expected page elements in the header section of S" +
                    "ubmit a claim page for external users", new string[] {
                        "GUI"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("I must be able to see Submit a Claim header with verbiage - Submit a motor carrie" +
                    "r shortage or damage claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 25
 testRunner.And("I must be able to see Back to Claim list button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I must be able to see a field named - Enter DLSW Ref # to Start Process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I must be able to see Prefill form button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("I must be able to see a verbiage stating - Or fill out the form below manually", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of expected page elements in the header section of S" +
            "ubmit a claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyTheExistenceOfExpectedPageElementsInTheHeaderSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of expected page elements in the header section of S" +
                    "ubmit a claim page for internal users", new string[] {
                        "GUI"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 33
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
 testRunner.Then("I must be able to see Submit a Claim header with verbiage - Submit a motor carrie" +
                    "r shortage or damage claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 37
 testRunner.And("I must be able to see Back to Claim list button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And("I must be able to see a field named - Enter DLSW Ref # to Start Process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I must be able to see Prefill form button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I must be able to see a verbiage stating - Or fill out the form below manually", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of expected fields in the Carrier Information sectio" +
            "n of Submit a Claim page for External users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyTheExistenceOfExpectedFieldsInTheCarrierInformationSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of expected fields in the Carrier Information sectio" +
                    "n of Submit a Claim page for External users", new string[] {
                        "GUI"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
 testRunner.Then("I must be able to see the following fields in the Carrier Information section - D" +
                    "LSW Ref, DLSW Ship Date, Carrier Name, Carrier PRO #, Carrier PRO Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of expected fields in the Carrier Information sectio" +
            "n of Submit a Claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyTheExistenceOfExpectedFieldsInTheCarrierInformationSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of expected fields in the Carrier Information sectio" +
                    "n of Submit a Claim page for internal users", new string[] {
                        "GUI"});
#line 51
this.ScenarioSetup(scenarioInfo);
#line 52
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 53
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
 testRunner.Then("I must be able to see the following fields in the Carrier Information section - D" +
                    "LSW Ref, DLSW Ship Date, Carrier Name, Carrier PRO #, Carrier PRO Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the required fields in the Carrier Information section of Submit a" +
            " Claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyTheRequiredFieldsInTheCarrierInformationSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the required fields in the Carrier Information section of Submit a" +
                    " Claim page for external users", new string[] {
                        "GUI"});
#line 59
this.ScenarioSetup(scenarioInfo);
#line 60
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.When("I arrive on Submit a Claim page and click on submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
 testRunner.Then("DLSW Ref, DLSW Ship Date, Carrier Name, Carrier PRO # fields of Carrier Informati" +
                    "on section should be highlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the required fields in the Carrier Information section of Submit a" +
            " Claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyTheRequiredFieldsInTheCarrierInformationSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the required fields in the Carrier Information section of Submit a" +
                    " Claim page for internal users", new string[] {
                        "GUI"});
#line 67
this.ScenarioSetup(scenarioInfo);
#line 68
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.When("I arrive on Submit a Claim page and click on submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
 testRunner.Then("DLSW Ref, DLSW Ship Date, Carrier Name, Carrier PRO # fields of Carrier Informati" +
                    "on section should be highlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of DLSW Ref # field by passing a maximum of 20 alpha nu" +
            "meric characters for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfDLSWRefFieldByPassingAMaximumOf20AlphaNumericCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of DLSW Ref # field by passing a maximum of 20 alpha nu" +
                    "meric characters for external users", new string[] {
                        "Functional"});
#line 75
this.ScenarioSetup(scenarioInfo);
#line 76
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 77
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
 testRunner.Then("I must be able to pass a maximum of 20 alpha numeric characters", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of DLSW Ref # field by passing a maximum of 20 alpha nu" +
            "meric characters for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfDLSWRefFieldByPassingAMaximumOf20AlphaNumericCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of DLSW Ref # field by passing a maximum of 20 alpha nu" +
                    "meric characters for internal users", new string[] {
                        "Functional"});
#line 83
this.ScenarioSetup(scenarioInfo);
#line 84
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 85
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
 testRunner.Then("I must be able to pass a maximum of 20 alpha numeric characters", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 20 alpha numeric characters to DLSW Ref # field for" +
            " external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan20AlphaNumericCharactersToDLSWRefFieldForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 20 alpha numeric characters to DLSW Ref # field for" +
                    " external users", new string[] {
                        "Functional"});
#line 91
this.ScenarioSetup(scenarioInfo);
#line 92
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 96
 testRunner.Then("I should not be able to pass more than 20 alpha numeric characters to DLSW Ref # " +
                    "field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 20 alpha numeric characters to DLSW Ref # field for" +
            " internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan20AlphaNumericCharactersToDLSWRefFieldForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 20 alpha numeric characters to DLSW Ref # field for" +
                    " internal users", new string[] {
                        "Functional"});
#line 99
this.ScenarioSetup(scenarioInfo);
#line 100
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 101
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
 testRunner.Then("I should not be able to pass more than 20 alpha numeric characters to DLSW Ref # " +
                    "field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify DLSW Ship Date field validation for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyDLSWShipDateFieldValidationForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify DLSW Ship Date field validation for external users", new string[] {
                        "Functional"});
#line 107
this.ScenarioSetup(scenarioInfo);
#line 108
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 109
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
 testRunner.Then("I must be able to see DLSW Ship Date selected prior to current date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify DLSW Ship Date field validation for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyDLSWShipDateFieldValidationForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify DLSW Ship Date field validation for internal users", new string[] {
                        "Functional"});
#line 115
this.ScenarioSetup(scenarioInfo);
#line 116
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 117
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 120
 testRunner.Then("I must be able to see DLSW Ship Date selected prior to current date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Carrier Name field by passing a maximum of 75 alpha " +
            "numeric, text and special characters for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfCarrierNameFieldByPassingAMaximumOf75AlphaNumericTextAndSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Carrier Name field by passing a maximum of 75 alpha " +
                    "numeric, text and special characters for external users", new string[] {
                        "Functional"});
#line 123
this.ScenarioSetup(scenarioInfo);
#line 124
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 125
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 128
 testRunner.Then("I must be able to pass a maximum of 75 alpha numeric, text and special characters" +
                    " to Carrier Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Carrier Name field by passing a maximum of 75 alpha " +
            "numeric, text and special characters for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfCarrierNameFieldByPassingAMaximumOf75AlphaNumericTextAndSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Carrier Name field by passing a maximum of 75 alpha " +
                    "numeric, text and special characters for internal users", new string[] {
                        "Functional"});
#line 131
this.ScenarioSetup(scenarioInfo);
#line 132
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 133
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 136
 testRunner.Then("I must be able to pass a maximum of 75 alpha numeric, text and special characters" +
                    " to Carrier Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 75 alpha numeric, text and special characters to Ca" +
            "rrier Name field for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan75AlphaNumericTextAndSpecialCharactersToCarrierNameFieldForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 75 alpha numeric, text and special characters to Ca" +
                    "rrier Name field for external users", new string[] {
                        "Functional"});
#line 139
this.ScenarioSetup(scenarioInfo);
#line 140
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 141
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 144
 testRunner.Then("I should not be able to pass a maximum of 75 alpha numeric, text and special char" +
                    "acters to Carrier Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 75 alpha numeric, text and special characters to Ca" +
            "rrier Name field for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan75AlphaNumericTextAndSpecialCharactersToCarrierNameFieldForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 75 alpha numeric, text and special characters to Ca" +
                    "rrier Name field for internal users", new string[] {
                        "Functional"});
#line 147
this.ScenarioSetup(scenarioInfo);
#line 148
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 149
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 152
 testRunner.Then("I should not be able to pass a maximum of 75 alpha numeric, text and special char" +
                    "acters to Carrier Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Carrier PRO # field by passing a maximum of 30 alpha" +
            " numeric, text and special characters for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfCarrierPROFieldByPassingAMaximumOf30AlphaNumericTextAndSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Carrier PRO # field by passing a maximum of 30 alpha" +
                    " numeric, text and special characters for external users", new string[] {
                        "Functional"});
#line 155
this.ScenarioSetup(scenarioInfo);
#line 156
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 157
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 160
 testRunner.Then("I must be able to pass a maximum of 30 alpha numeric, text and special characters" +
                    " to Carrier PRO # field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Carrier PRO # field by passing a maximum of 30 alpha" +
            " numeric, text and special characters for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfCarrierPROFieldByPassingAMaximumOf30AlphaNumericTextAndSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Carrier PRO # field by passing a maximum of 30 alpha" +
                    " numeric, text and special characters for internal users", new string[] {
                        "Functional"});
#line 163
this.ScenarioSetup(scenarioInfo);
#line 164
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 165
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 168
 testRunner.Then("I must be able to pass a maximum of 30 alpha numeric, text and special characters" +
                    " Carrier PRO # field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 30 alpha numeric, text and special characters to Ca" +
            "rrier PRO # field for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan30AlphaNumericTextAndSpecialCharactersToCarrierPROFieldForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 30 alpha numeric, text and special characters to Ca" +
                    "rrier PRO # field for external users", new string[] {
                        "Functional"});
#line 171
this.ScenarioSetup(scenarioInfo);
#line 172
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 173
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 176
 testRunner.Then("I should not be able to pass a maximum of 30 alpha numeric, text and special char" +
                    "acters to Carrier PRO # field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 30 alpha numeric, text and special characters to Ca" +
            "rrier PRO # field for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan30AlphaNumericTextAndSpecialCharactersToCarrierPROFieldForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 30 alpha numeric, text and special characters to Ca" +
                    "rrier PRO # field for internal users", new string[] {
                        "Functional"});
#line 179
this.ScenarioSetup(scenarioInfo);
#line 180
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 181
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 184
 testRunner.Then("I should not be able to pass a maximum of 30 alpha numeric, text and special char" +
                    "acters to Carrier PRO # field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify Carrier PRO Date field validation for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyCarrierPRODateFieldValidationForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify Carrier PRO Date field validation for external users", new string[] {
                        "Functional"});
#line 187
this.ScenarioSetup(scenarioInfo);
#line 188
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 189
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 192
 testRunner.Then("I must be able to see Carrier PRO Date selected prior to current date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify Carrier PRO Date field validation for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyCarrierPRODateFieldValidationForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify Carrier PRO Date field validation for internal users", new string[] {
                        "Functional"});
#line 195
this.ScenarioSetup(scenarioInfo);
#line 196
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 197
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 200
 testRunner.Then("I must be able to see Carrier PRO Date selected prior to current date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of expected fields in the Shipper Information sectio" +
            "n of Submit a claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceOfExpectedFieldsInTheShipperInformationSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of expected fields in the Shipper Information sectio" +
                    "n of Submit a claim page for external users", new string[] {
                        "Functional"});
#line 203
this.ScenarioSetup(scenarioInfo);
#line 204
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 205
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 206
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 207
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 208
 testRunner.Then("I must be able to see the following expected fields in the Shipper information pa" +
                    "ge - Name, Address, Address2, City, StateOrProvince, ZipOrPostal, Country", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of expected fields in the Shipper Information sectio" +
            "n of Submit a claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceOfExpectedFieldsInTheShipperInformationSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of expected fields in the Shipper Information sectio" +
                    "n of Submit a claim page for internal users", new string[] {
                        "Functional"});
#line 211
this.ScenarioSetup(scenarioInfo);
#line 212
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 213
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 216
 testRunner.Then("I must be able to see the following expected fields in the Shipper information pa" +
                    "ge - Name, Address, Address2, City, StateOrProvince, ZipOrPostal, Country", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify required fields in the Shipper Information section of Submit a Cla" +
            "im page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyRequiredFieldsInTheShipperInformationSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify required fields in the Shipper Information section of Submit a Cla" +
                    "im page for external users", new string[] {
                        "Functional"});
#line 219
this.ScenarioSetup(scenarioInfo);
#line 220
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 221
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
 testRunner.When("I arrive on Submit a Claim page and click on submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 224
 testRunner.Then("I must see the following fields highlighted in the Shipper Information section - " +
                    " Name, Address, City, StateOrProvince, ZipOrPostal, Country", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify required fields in the Shipper Information section of Submit a Cla" +
            "im page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyRequiredFieldsInTheShipperInformationSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify required fields in the Shipper Information section of Submit a Cla" +
                    "im page for internal users", new string[] {
                        "Functional"});
#line 227
this.ScenarioSetup(scenarioInfo);
#line 228
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 229
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 231
 testRunner.When("I arrive on Submit a Claim page and click on submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 232
 testRunner.Then("I must see the following fields highlighted in the Shipper Information section - " +
                    " Name, Address, City, StateOrProvince, ZipOrPostal, Country", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Name field in the Shipper information section by pas" +
            "sing a maximum of 75 alpha-numeric, text, special characters for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfNameFieldInTheShipperInformationSectionByPassingAMaximumOf75Alpha_NumericTextSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Name field in the Shipper information section by pas" +
                    "sing a maximum of 75 alpha-numeric, text, special characters for external users", new string[] {
                        "Functional"});
#line 235
this.ScenarioSetup(scenarioInfo);
#line 236
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 237
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 238
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 240
 testRunner.Then("I must be able to pass a maximum of 75 alpha-numeric, text, special characters to" +
                    " the name field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Name field in the Shipper information section by pas" +
            "sing a maximum of 75 alpha-numeric, text, special characters for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfNameFieldInTheShipperInformationSectionByPassingAMaximumOf75Alpha_NumericTextSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Name field in the Shipper information section by pas" +
                    "sing a maximum of 75 alpha-numeric, text, special characters for internal users", new string[] {
                        "Functional"});
#line 243
this.ScenarioSetup(scenarioInfo);
#line 244
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 245
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 247
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 248
 testRunner.Then("I must be able to pass a maximum of 75 alpha-numeric, text, special characters to" +
                    " the name field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 75 alpha-numeric, text, special characters to Name " +
            "field of Shipper information section for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan75Alpha_NumericTextSpecialCharactersToNameFieldOfShipperInformationSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 75 alpha-numeric, text, special characters to Name " +
                    "field of Shipper information section for external users", new string[] {
                        "Functional"});
#line 251
this.ScenarioSetup(scenarioInfo);
#line 252
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 253
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 254
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 255
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 256
 testRunner.Then("I should not be able to pass more than 75 alpha-numeric, text, special characters" +
                    " to the name field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 75 alpha-numeric, text, special characters to Name " +
            "field of Shipper information section for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan75Alpha_NumericTextSpecialCharactersToNameFieldOfShipperInformationSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 75 alpha-numeric, text, special characters to Name " +
                    "field of Shipper information section for internal users", new string[] {
                        "Functional"});
#line 259
this.ScenarioSetup(scenarioInfo);
#line 260
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 261
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 262
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 263
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 264
 testRunner.Then("I should not be able to pass more than 75 alpha-numeric, text, special characters" +
                    " to the name field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Address field in the Shipper information section by " +
            "passing a maximum of 150 alpha-numeric, text, special characters for external us" +
            "ers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfAddressFieldInTheShipperInformationSectionByPassingAMaximumOf150Alpha_NumericTextSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Address field in the Shipper information section by " +
                    "passing a maximum of 150 alpha-numeric, text, special characters for external us" +
                    "ers", new string[] {
                        "Functional"});
#line 267
this.ScenarioSetup(scenarioInfo);
#line 268
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 269
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 271
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 272
 testRunner.Then("I must be able to pass a maximum of 150 alpha-numeric, text, special characters t" +
                    "o the address field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Address field in the Shipper information section by " +
            "passing a maximum of 150 alpha-numeric, text, special characters for internal us" +
            "ers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfAddressFieldInTheShipperInformationSectionByPassingAMaximumOf150Alpha_NumericTextSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Address field in the Shipper information section by " +
                    "passing a maximum of 150 alpha-numeric, text, special characters for internal us" +
                    "ers", new string[] {
                        "Functional"});
#line 275
this.ScenarioSetup(scenarioInfo);
#line 276
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 277
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 278
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 279
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 280
 testRunner.Then("I must be able to pass a maximum of 150 alpha-numeric, text, special characters t" +
                    "o the address field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
            "ess field of Shipper information section for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan150Alpha_NumericTextSpecialCharactersToAddressFieldOfShipperInformationSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
                    "ess field of Shipper information section for external users", new string[] {
                        "Functional"});
#line 283
this.ScenarioSetup(scenarioInfo);
#line 284
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 285
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 286
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 287
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 288
 testRunner.Then("I should not be able to pass more than 150 alpha-numeric, text, special character" +
                    "s to the address field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
            "ess field of Shipper information section for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan150Alpha_NumericTextSpecialCharactersToAddressFieldOfShipperInformationSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
                    "ess field of Shipper information section for internal users", new string[] {
                        "Functional"});
#line 291
this.ScenarioSetup(scenarioInfo);
#line 292
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 293
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 296
 testRunner.Then("I should not be able to pass more than 150 alpha-numeric, text, special character" +
                    "s to the address field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Address2 field in the Shipper information section by" +
            " passing a maximum of 150 alpha-numeric, text, special characters for external u" +
            "sers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfAddress2FieldInTheShipperInformationSectionByPassingAMaximumOf150Alpha_NumericTextSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Address2 field in the Shipper information section by" +
                    " passing a maximum of 150 alpha-numeric, text, special characters for external u" +
                    "sers", new string[] {
                        "Functional"});
#line 299
this.ScenarioSetup(scenarioInfo);
#line 300
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 301
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 304
 testRunner.Then("I must be able to pass a maximum of 150 alpha-numeric, text, special characters t" +
                    "o the address2 field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Address2 field in the Shipper information section by" +
            " passing a maximum of 150 alpha-numeric, text, special characters for internal u" +
            "sers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfAddress2FieldInTheShipperInformationSectionByPassingAMaximumOf150Alpha_NumericTextSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Address2 field in the Shipper information section by" +
                    " passing a maximum of 150 alpha-numeric, text, special characters for internal u" +
                    "sers", new string[] {
                        "Functional"});
#line 307
this.ScenarioSetup(scenarioInfo);
#line 308
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 309
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 310
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 311
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 312
 testRunner.Then("I must be able to pass a maximum of 150 alpha-numeric, text, special characters t" +
                    "o the address2 field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
            "ess2 field of Shipper information section for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan150Alpha_NumericTextSpecialCharactersToAddress2FieldOfShipperInformationSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
                    "ess2 field of Shipper information section for external users", new string[] {
                        "Functional"});
#line 315
this.ScenarioSetup(scenarioInfo);
#line 316
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 317
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 319
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 320
 testRunner.Then("I should not be able to pass more than 150 alpha-numeric, text, special character" +
                    "s to the address2 field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
            "ess2 field of Shipper information section for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan150Alpha_NumericTextSpecialCharactersToAddress2FieldOfShipperInformationSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
                    "ess2 field of Shipper information section for internal users", new string[] {
                        "Functional"});
#line 323
this.ScenarioSetup(scenarioInfo);
#line 324
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 325
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 326
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 327
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 328
 testRunner.Then("I should not be able to pass more than 150 alpha-numeric, text, special character" +
                    "s to the address2 field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of city field in the Shipper information section by pas" +
            "sing a maximum of 50 alpha-numeric, text, special characters for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfCityFieldInTheShipperInformationSectionByPassingAMaximumOf50Alpha_NumericTextSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of city field in the Shipper information section by pas" +
                    "sing a maximum of 50 alpha-numeric, text, special characters for external users", new string[] {
                        "Functional"});
#line 331
this.ScenarioSetup(scenarioInfo);
#line 332
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 333
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 334
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 335
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 336
 testRunner.Then("I must be able to pass a maximum of 50 alpha-numeric, text, special characters to" +
                    " the city field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of city field in the Shipper information section by pas" +
            "sing a maximum of 50 alpha-numeric, text, special characters for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfCityFieldInTheShipperInformationSectionByPassingAMaximumOf50Alpha_NumericTextSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of city field in the Shipper information section by pas" +
                    "sing a maximum of 50 alpha-numeric, text, special characters for internal users", new string[] {
                        "Functional"});
#line 339
this.ScenarioSetup(scenarioInfo);
#line 340
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 341
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 342
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 343
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 344
 testRunner.Then("I must be able to pass a maximum of 50 alpha-numeric, text, special characters to" +
                    " the city field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text, special characters to city " +
            "field of Shipper information section for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextSpecialCharactersToCityFieldOfShipperInformationSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text, special characters to city " +
                    "field of Shipper information section for external users", new string[] {
                        "Functional"});
#line 347
this.ScenarioSetup(scenarioInfo);
#line 348
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 349
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 352
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text, special characters" +
                    " to the city field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text, special characters to city " +
            "field of Shipper information section for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextSpecialCharactersToCityFieldOfShipperInformationSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text, special characters to city " +
                    "field of Shipper information section for internal users", new string[] {
                        "Functional"});
#line 355
this.ScenarioSetup(scenarioInfo);
#line 356
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 357
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 358
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 359
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 360
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text, special characters" +
                    " to the city field of shipper information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the validation of State or Province field in the Shipper informati" +
            "on section when country is either United states or Canada for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheValidationOfStateOrProvinceFieldInTheShipperInformationSectionWhenCountryIsEitherUnitedStatesOrCanadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the validation of State or Province field in the Shipper informati" +
                    "on section when country is either United states or Canada for external users", new string[] {
                        "Functional"});
#line 363
this.ScenarioSetup(scenarioInfo);
#line 364
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 365
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 366
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 367
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 368
 testRunner.Then("I should be able to pass a maximum of 2 text to State or Province field of shippe" +
                    "r information section when the country is either United states or Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the validation of State or Province field in the Shipper informati" +
            "on section when country is either United states or Canada for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheValidationOfStateOrProvinceFieldInTheShipperInformationSectionWhenCountryIsEitherUnitedStatesOrCanadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the validation of State or Province field in the Shipper informati" +
                    "on section when country is either United states or Canada for internal users", new string[] {
                        "Functional"});
#line 371
this.ScenarioSetup(scenarioInfo);
#line 372
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 373
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 374
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 375
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 376
 testRunner.Then("I should be able to pass a maximum of 2 text to State or Province field of shippe" +
                    "r information section when the country is either United states or Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of State or Province field in the Shipper information s" +
            "ection when country is neither United states nor Canada for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfStateOrProvinceFieldInTheShipperInformationSectionWhenCountryIsNeitherUnitedStatesNorCanadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of State or Province field in the Shipper information s" +
                    "ection when country is neither United states nor Canada for external users", new string[] {
                        "Functional"});
#line 379
this.ScenarioSetup(scenarioInfo);
#line 380
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 381
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 382
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 383
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 384
 testRunner.Then("I should be able to pass a maximum of 50 alpha-numeric, text to State or Province" +
                    " field of shipper information section when country is neither United states nor " +
                    "Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of State or Province field in the Shipper information s" +
            "ection when country is neither United states nor Canada for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfStateOrProvinceFieldInTheShipperInformationSectionWhenCountryIsNeitherUnitedStatesNorCanadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of State or Province field in the Shipper information s" +
                    "ection when country is neither United states nor Canada for internal users", new string[] {
                        "Functional"});
#line 387
this.ScenarioSetup(scenarioInfo);
#line 388
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 389
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 391
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 392
 testRunner.Then("I should be able to pass a maximum of 50 alpha-numeric, text to State or Province" +
                    " field of shipper information section when country is neither United states nor " +
                    "Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text to State or Province field i" +
            "n the Shipper information section when country is neither United states nor Cana" +
            "da for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextToStateOrProvinceFieldInTheShipperInformationSectionWhenCountryIsNeitherUnitedStatesNorCanadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text to State or Province field i" +
                    "n the Shipper information section when country is neither United states nor Cana" +
                    "da for external users", new string[] {
                        "Functional"});
#line 395
this.ScenarioSetup(scenarioInfo);
#line 396
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 397
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 398
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 399
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 400
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text to State or Provinc" +
                    "e field of shipper information section when country is neither United states nor" +
                    " Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text to State or Province field i" +
            "n the Shipper information section when country is neither United states nor Cana" +
            "da for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextToStateOrProvinceFieldInTheShipperInformationSectionWhenCountryIsNeitherUnitedStatesNorCanadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text to State or Province field i" +
                    "n the Shipper information section when country is neither United states nor Cana" +
                    "da for internal users", new string[] {
                        "Functional"});
#line 403
this.ScenarioSetup(scenarioInfo);
#line 404
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 405
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 406
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 407
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 408
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text to State or Provinc" +
                    "e field of shipper information section when country is neither United states nor" +
                    " Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Shipper information section w" +
            "hen country is United states for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfShipperInformationSectionWhenCountryIsUnitedStatesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Shipper information section w" +
                    "hen country is United states for external users", new string[] {
                        "Functional"});
#line 411
this.ScenarioSetup(scenarioInfo);
#line 412
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 413
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 414
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 415
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 416
 testRunner.Then("I must be able to pass a maximum of 5 digits including leading zeros to Zip or Po" +
                    "stal field of shipper information section when country is United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Shipper information section w" +
            "hen country is United states for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfShipperInformationSectionWhenCountryIsUnitedStatesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Shipper information section w" +
                    "hen country is United states for internal users", new string[] {
                        "Functional"});
#line 419
this.ScenarioSetup(scenarioInfo);
#line 420
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 421
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 422
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 423
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 424
 testRunner.Then("I must be able to pass a maximum of 5 digits including leading zeros to Zip or Po" +
                    "stal field of shipper information section when country is United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than or less than 5 digits to Zip or Postal field of Shi" +
            "pper information section when country is United states for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThanOrLessThan5DigitsToZipOrPostalFieldOfShipperInformationSectionWhenCountryIsUnitedStatesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than or less than 5 digits to Zip or Postal field of Shi" +
                    "pper information section when country is United states for external users", new string[] {
                        "Functional"});
#line 427
this.ScenarioSetup(scenarioInfo);
#line 428
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 429
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 430
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 431
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 432
 testRunner.Then("I should not be able to pass more than or less than 5 digits to Zip or Postal fie" +
                    "ld of Shipper information section when country is United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than or less than 5 digits to Zip or Postal field of Shi" +
            "pper information section when country is United states for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThanOrLessThan5DigitsToZipOrPostalFieldOfShipperInformationSectionWhenCountryIsUnitedStatesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than or less than 5 digits to Zip or Postal field of Shi" +
                    "pper information section when country is United states for internal users", new string[] {
                        "Functional"});
#line 435
this.ScenarioSetup(scenarioInfo);
#line 436
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 437
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 438
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 439
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 440
 testRunner.Then("I should not be able to pass more than or less than 5 digits to Zip or Postal fie" +
                    "ld of Shipper information section when country is United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Shipper information section w" +
            "hen country is Canada for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfShipperInformationSectionWhenCountryIsCanadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Shipper information section w" +
                    "hen country is Canada for external users", new string[] {
                        "Functional"});
#line 443
this.ScenarioSetup(scenarioInfo);
#line 444
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 445
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 446
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 447
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 448
 testRunner.Then("I must be able to pass a maximum of 7 alpha numeric characters to Zip or Postal f" +
                    "ield of shipper information section when a space is used after first 3 character" +
                    "s and the country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Shipper information section w" +
            "hen country is Canada for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfShipperInformationSectionWhenCountryIsCanadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Shipper information section w" +
                    "hen country is Canada for internal users", new string[] {
                        "Functional"});
#line 451
this.ScenarioSetup(scenarioInfo);
#line 452
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 453
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 454
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 455
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 456
 testRunner.Then("I must be able to pass a maximum of 7 alpha numeric characters to Zip or Postal f" +
                    "ield of shipper information section when a space is used after first 3 character" +
                    "s and the country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 7 alpha numeric characters to Zip or Postal field o" +
            "f shipper information section when country is Canada for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan7AlphaNumericCharactersToZipOrPostalFieldOfShipperInformationSectionWhenCountryIsCanadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 7 alpha numeric characters to Zip or Postal field o" +
                    "f shipper information section when country is Canada for external users", new string[] {
                        "Functional"});
#line 459
this.ScenarioSetup(scenarioInfo);
#line 460
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 461
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 462
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 463
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 464
 testRunner.Then("I should not be able to pass more than 7 alpha numeric characters to Zip or Posta" +
                    "l field when country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 7 alpha numeric characters to Zip or Postal field o" +
            "f shipper information section when country is Canada for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan7AlphaNumericCharactersToZipOrPostalFieldOfShipperInformationSectionWhenCountryIsCanadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 7 alpha numeric characters to Zip or Postal field o" +
                    "f shipper information section when country is Canada for internal users", new string[] {
                        "Functional"});
#line 467
this.ScenarioSetup(scenarioInfo);
#line 468
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 469
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 470
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 471
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 472
 testRunner.Then("I should not be able to pass more than 7 alpha numeric characters to Zip or Posta" +
                    "l field when country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing less than 6 alpha numeric characters to Zip or Postal field o" +
            "f shipper information section when country is Canada for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingLessThan6AlphaNumericCharactersToZipOrPostalFieldOfShipperInformationSectionWhenCountryIsCanadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing less than 6 alpha numeric characters to Zip or Postal field o" +
                    "f shipper information section when country is Canada for external users", new string[] {
                        "Functional"});
#line 475
this.ScenarioSetup(scenarioInfo);
#line 476
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 477
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 478
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 479
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 480
 testRunner.Then("I should not be able to pass less than 6 alpha numeric characters to Zip or Posta" +
                    "l field when country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing less than 6 alpha numeric characters to Zip or Postal field o" +
            "f shipper information section when country is Canada for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingLessThan6AlphaNumericCharactersToZipOrPostalFieldOfShipperInformationSectionWhenCountryIsCanadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing less than 6 alpha numeric characters to Zip or Postal field o" +
                    "f shipper information section when country is Canada for internal users", new string[] {
                        "Functional"});
#line 483
this.ScenarioSetup(scenarioInfo);
#line 484
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 485
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 486
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 487
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 488
 testRunner.Then("I should not be able to pass less than 6 alpha numeric characters to Zip or Posta" +
                    "l field when country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Shipper information section w" +
            "hen country is neither Canada nor United states for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfShipperInformationSectionWhenCountryIsNeitherCanadaNorUnitedStatesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Shipper information section w" +
                    "hen country is neither Canada nor United states for external users", new string[] {
                        "Functional"});
#line 491
this.ScenarioSetup(scenarioInfo);
#line 492
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 493
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 494
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 495
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 496
 testRunner.Then("I must be able to pass a maximum of 15 alpha numeric , text, special characters t" +
                    "o Zip or Postal field of shipper information section when country is neither Can" +
                    "ada nor United states for external users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Shipper information section w" +
            "hen country is neither Canada nor United states for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfShipperInformationSectionWhenCountryIsNeitherCanadaNorUnitedStatesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Shipper information section w" +
                    "hen country is neither Canada nor United states for internal users", new string[] {
                        "Functional"});
#line 499
this.ScenarioSetup(scenarioInfo);
#line 500
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 501
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 502
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 503
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 504
 testRunner.Then("I must be able to pass a maximum of 15 alpha numeric , text, special characters t" +
                    "o Zip or Postal field of shipper information section when country is neither Can" +
                    "ada nor United states for external users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 15 alpha numeric, text, special characters to Zip o" +
            "r Postal field of shipper information section when country is neither Canada nor" +
            " United states for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan15AlphaNumericTextSpecialCharactersToZipOrPostalFieldOfShipperInformationSectionWhenCountryIsNeitherCanadaNorUnitedStatesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 15 alpha numeric, text, special characters to Zip o" +
                    "r Postal field of shipper information section when country is neither Canada nor" +
                    " United states for external users", new string[] {
                        "Functional"});
#line 507
this.ScenarioSetup(scenarioInfo);
#line 508
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 509
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 510
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 511
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 512
 testRunner.Then("I should not be able to pass more than 15 alpha numeric , text, special character" +
                    "s to Zip or Postal field when country is neither Canada nor United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 15 alpha numeric, text, special characters to Zip o" +
            "r Postal field of shipper information section when country is neither Canada nor" +
            " United states for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan15AlphaNumericTextSpecialCharactersToZipOrPostalFieldOfShipperInformationSectionWhenCountryIsNeitherCanadaNorUnitedStatesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 15 alpha numeric, text, special characters to Zip o" +
                    "r Postal field of shipper information section when country is neither Canada nor" +
                    " United states for internal users", new string[] {
                        "Functional"});
#line 515
this.ScenarioSetup(scenarioInfo);
#line 516
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 517
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 518
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 519
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 520
 testRunner.Then("I should not be able to pass more than 15 alpha numeric , text, special character" +
                    "s to Zip or Postal field when country is neither Canada nor United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of expected fields in the Consignee Information sect" +
            "ion of Submit a claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyTheExistenceOfExpectedFieldsInTheConsigneeInformationSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of expected fields in the Consignee Information sect" +
                    "ion of Submit a claim page for external users", new string[] {
                        "GUI"});
#line 523
this.ScenarioSetup(scenarioInfo);
#line 524
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 525
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 526
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 527
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 528
 testRunner.Then("I must be able to see the following expected fields in the Consignee information " +
                    "page - Name, Address, Address2, City, StateOrProvince, ZipOrPostal, Country", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of expected fields in the Consignee Information sect" +
            "ion of Submit a claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyTheExistenceOfExpectedFieldsInTheConsigneeInformationSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of expected fields in the Consignee Information sect" +
                    "ion of Submit a claim page for internal users", new string[] {
                        "GUI"});
#line 531
this.ScenarioSetup(scenarioInfo);
#line 532
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 533
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 534
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 535
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 536
 testRunner.Then("I must be able to see the following expected fields in the Consignee information " +
                    "page - Name, Address, Address2, City, StateOrProvince, ZipOrPostal, Country", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify required fields in the Consignee Information section of Submit a C" +
            "laim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyRequiredFieldsInTheConsigneeInformationSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify required fields in the Consignee Information section of Submit a C" +
                    "laim page for external users", new string[] {
                        "GUI"});
#line 539
this.ScenarioSetup(scenarioInfo);
#line 540
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 541
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 542
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 543
 testRunner.When("I arrive on Submit a Claim page and click on submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 544
 testRunner.Then("I must see the following fields highlighted in the Consignee Information section " +
                    "-  Name, Address, City, StateOrProvince, ZipOrPostal, Country", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify required fields in the Consignee Information section of Submit a C" +
            "laim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyRequiredFieldsInTheConsigneeInformationSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify required fields in the Consignee Information section of Submit a C" +
                    "laim page for internal users", new string[] {
                        "GUI"});
#line 547
this.ScenarioSetup(scenarioInfo);
#line 548
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 549
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 550
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 551
 testRunner.When("I arrive on Submit a Claim page and click on submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 552
 testRunner.Then("I must see the following fields highlighted in the Consignee Information section " +
                    "-  Name, Address, City, StateOrProvince, ZipOrPostal, Country", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Name field in the Consignee information section by p" +
            "assing a maximum of 75 alpha-numeric, text, special characters for external user" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfNameFieldInTheConsigneeInformationSectionByPassingAMaximumOf75Alpha_NumericTextSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Name field in the Consignee information section by p" +
                    "assing a maximum of 75 alpha-numeric, text, special characters for external user" +
                    "s", new string[] {
                        "Functional"});
#line 555
this.ScenarioSetup(scenarioInfo);
#line 556
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 557
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 558
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 559
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 560
 testRunner.Then("I must be able to pass a maximum of 75 alpha-numeric, text, special characters to" +
                    " the name field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Name field in the Consignee information section by p" +
            "assing a maximum of 75 alpha-numeric, text, special characters for internal user" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfNameFieldInTheConsigneeInformationSectionByPassingAMaximumOf75Alpha_NumericTextSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Name field in the Consignee information section by p" +
                    "assing a maximum of 75 alpha-numeric, text, special characters for internal user" +
                    "s", new string[] {
                        "Functional"});
#line 563
this.ScenarioSetup(scenarioInfo);
#line 564
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 565
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 566
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 567
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 568
 testRunner.Then("I must be able to pass a maximum of 75 alpha-numeric, text, special characters to" +
                    " the name field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 75 alpha-numeric, text, special characters to Name " +
            "field of Consignee information section for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan75Alpha_NumericTextSpecialCharactersToNameFieldOfConsigneeInformationSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 75 alpha-numeric, text, special characters to Name " +
                    "field of Consignee information section for external users", new string[] {
                        "Functional"});
#line 571
this.ScenarioSetup(scenarioInfo);
#line 572
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 573
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 574
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 575
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 576
 testRunner.Then("I should not be able to pass more than 75 alpha-numeric, text, special characters" +
                    " to the name field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 75 alpha-numeric, text, special characters to Name " +
            "field of Consignee information section for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan75Alpha_NumericTextSpecialCharactersToNameFieldOfConsigneeInformationSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 75 alpha-numeric, text, special characters to Name " +
                    "field of Consignee information section for internal users", new string[] {
                        "Functional"});
#line 579
this.ScenarioSetup(scenarioInfo);
#line 580
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 581
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 582
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 583
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 584
 testRunner.Then("I should not be able to pass more than 75 alpha-numeric, text, special characters" +
                    " to the name field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Address field in the Consignee information section b" +
            "y passing a maximum of 150 alpha-numeric, text, special characters for external " +
            "users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfAddressFieldInTheConsigneeInformationSectionByPassingAMaximumOf150Alpha_NumericTextSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Address field in the Consignee information section b" +
                    "y passing a maximum of 150 alpha-numeric, text, special characters for external " +
                    "users", new string[] {
                        "Functional"});
#line 587
this.ScenarioSetup(scenarioInfo);
#line 588
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 589
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 590
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 591
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 592
 testRunner.Then("I must be able to pass a maximum of 150 alpha-numeric, text, special characters t" +
                    "o the address field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Address field in the Consignee information section b" +
            "y passing a maximum of 150 alpha-numeric, text, special characters for internal " +
            "users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfAddressFieldInTheConsigneeInformationSectionByPassingAMaximumOf150Alpha_NumericTextSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Address field in the Consignee information section b" +
                    "y passing a maximum of 150 alpha-numeric, text, special characters for internal " +
                    "users", new string[] {
                        "Functional"});
#line 595
this.ScenarioSetup(scenarioInfo);
#line 596
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 597
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 598
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 599
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 600
 testRunner.Then("I must be able to pass a maximum of 150 alpha-numeric, text, special characters t" +
                    "o the address field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
            "ess field of Consignee information section for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan150Alpha_NumericTextSpecialCharactersToAddressFieldOfConsigneeInformationSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
                    "ess field of Consignee information section for external users", new string[] {
                        "Functional"});
#line 603
this.ScenarioSetup(scenarioInfo);
#line 604
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 605
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 606
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 607
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 608
 testRunner.Then("I should not be able to pass more than 150 alpha-numeric, text, special character" +
                    "s to the address field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
            "ess field of Consignee information section for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan150Alpha_NumericTextSpecialCharactersToAddressFieldOfConsigneeInformationSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
                    "ess field of Consignee information section for internal users", new string[] {
                        "Functional"});
#line 611
this.ScenarioSetup(scenarioInfo);
#line 612
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 613
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 614
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 615
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 616
 testRunner.Then("I should not be able to pass more than 150 alpha-numeric, text, special character" +
                    "s to the address field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Address2 field in the Consignee information section " +
            "by passing a maximum of 150 alpha-numeric, text, special characters for external" +
            " users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfAddress2FieldInTheConsigneeInformationSectionByPassingAMaximumOf150Alpha_NumericTextSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Address2 field in the Consignee information section " +
                    "by passing a maximum of 150 alpha-numeric, text, special characters for external" +
                    " users", new string[] {
                        "Functional"});
#line 619
this.ScenarioSetup(scenarioInfo);
#line 620
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 621
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 622
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 623
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 624
 testRunner.Then("I must be able to pass a maximum of 150 alpha-numeric, text, special characters t" +
                    "o the address2 field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Address2 field in the Consignee information section " +
            "by passing a maximum of 150 alpha-numeric, text, special characters for internal" +
            " users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfAddress2FieldInTheConsigneeInformationSectionByPassingAMaximumOf150Alpha_NumericTextSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Address2 field in the Consignee information section " +
                    "by passing a maximum of 150 alpha-numeric, text, special characters for internal" +
                    " users", new string[] {
                        "Functional"});
#line 627
this.ScenarioSetup(scenarioInfo);
#line 628
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 629
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 630
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 631
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 632
 testRunner.Then("I must be able to pass a maximum of 150 alpha-numeric, text, special characters t" +
                    "o the address2 field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
            "ess2 field of Consignee information section for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan150Alpha_NumericTextSpecialCharactersToAddress2FieldOfConsigneeInformationSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
                    "ess2 field of Consignee information section for external users", new string[] {
                        "Functional"});
#line 635
this.ScenarioSetup(scenarioInfo);
#line 636
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 637
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 638
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 639
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 640
 testRunner.Then("I should not be able to pass more than 150 alpha-numeric, text, special character" +
                    "s to the address2 field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
            "ess2 field of Consignee information section for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan150Alpha_NumericTextSpecialCharactersToAddress2FieldOfConsigneeInformationSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 150 alpha-numeric, text, special characters to Addr" +
                    "ess2 field of Consignee information section for internal users", new string[] {
                        "Functional"});
#line 643
this.ScenarioSetup(scenarioInfo);
#line 644
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 645
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 646
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 647
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 648
 testRunner.Then("I should not be able to pass more than 150 alpha-numeric, text, special character" +
                    "s to the address2 field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of city field in the Consignee information section by p" +
            "assing a maximum of 50 alpha-numeric, text, special characters for external user" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfCityFieldInTheConsigneeInformationSectionByPassingAMaximumOf50Alpha_NumericTextSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of city field in the Consignee information section by p" +
                    "assing a maximum of 50 alpha-numeric, text, special characters for external user" +
                    "s", new string[] {
                        "Functional"});
#line 651
this.ScenarioSetup(scenarioInfo);
#line 652
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 653
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 654
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 655
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 656
 testRunner.Then("I must be able to pass a maximum of 50 alpha-numeric, text, special characters to" +
                    " the city field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of city field in the Consignee information section by p" +
            "assing a maximum of 50 alpha-numeric, text, special characters for internal user" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfCityFieldInTheConsigneeInformationSectionByPassingAMaximumOf50Alpha_NumericTextSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of city field in the Consignee information section by p" +
                    "assing a maximum of 50 alpha-numeric, text, special characters for internal user" +
                    "s", new string[] {
                        "Functional"});
#line 659
this.ScenarioSetup(scenarioInfo);
#line 660
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 661
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 662
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 663
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 664
 testRunner.Then("I must be able to pass a maximum of 50 alpha-numeric, text, special characters to" +
                    " the city field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text, special characters to city " +
            "field of Consignee information section for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextSpecialCharactersToCityFieldOfConsigneeInformationSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text, special characters to city " +
                    "field of Consignee information section for external users", new string[] {
                        "Functional"});
#line 667
this.ScenarioSetup(scenarioInfo);
#line 668
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 669
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 670
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 671
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 672
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text, special characters" +
                    " to the city field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text, special characters to city " +
            "field of Consignee information section for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextSpecialCharactersToCityFieldOfConsigneeInformationSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text, special characters to city " +
                    "field of Consignee information section for internal users", new string[] {
                        "Functional"});
#line 675
this.ScenarioSetup(scenarioInfo);
#line 676
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 677
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 678
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 679
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 680
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text, special characters" +
                    " to the city field of Consignee information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of State or Province field in the Consignee information" +
            " section when country is either United states or Canada for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfStateOrProvinceFieldInTheConsigneeInformationSectionWhenCountryIsEitherUnitedStatesOrCanadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of State or Province field in the Consignee information" +
                    " section when country is either United states or Canada for external users", new string[] {
                        "Functional"});
#line 683
this.ScenarioSetup(scenarioInfo);
#line 684
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 685
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 686
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 687
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 688
 testRunner.Then("I should be able to pass a maximum of 2 text to State or Province field of Consig" +
                    "nee information section when country is either United states or Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of State or Province field in the Consignee information" +
            " section when country is either United states or Canada for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfStateOrProvinceFieldInTheConsigneeInformationSectionWhenCountryIsEitherUnitedStatesOrCanadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of State or Province field in the Consignee information" +
                    " section when country is either United states or Canada for internal users", new string[] {
                        "Functional"});
#line 691
this.ScenarioSetup(scenarioInfo);
#line 692
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 693
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 694
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 695
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 696
 testRunner.Then("I should be able to pass a maximum of 2 text to State or Province field of Consig" +
                    "nee information section when country is either United states or Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of State or Province field in the Consignee information" +
            " section when country is neither United states nor Cannada for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfStateOrProvinceFieldInTheConsigneeInformationSectionWhenCountryIsNeitherUnitedStatesNorCannadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of State or Province field in the Consignee information" +
                    " section when country is neither United states nor Cannada for external users", new string[] {
                        "Functional"});
#line 699
this.ScenarioSetup(scenarioInfo);
#line 700
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 701
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 702
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 703
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 704
 testRunner.Then("I should be able to pass a maximum of 50 alpha-numeric, text to State or Province" +
                    " field of Consignee information section when country is neither United states no" +
                    "r Cannada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of State or Province field in the Consignee information" +
            " section when country is neither United states nor Cannada for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfStateOrProvinceFieldInTheConsigneeInformationSectionWhenCountryIsNeitherUnitedStatesNorCannadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of State or Province field in the Consignee information" +
                    " section when country is neither United states nor Cannada for internal users", new string[] {
                        "Functional"});
#line 707
this.ScenarioSetup(scenarioInfo);
#line 708
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 709
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 710
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 711
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 712
 testRunner.Then("I should be able to pass a maximum of 50 alpha-numeric, text to State or Province" +
                    " field of Consignee information section when country is neither United states no" +
                    "r Cannada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text to State or Province field i" +
            "n the Consignee information section when country is neither United states nor Ca" +
            "nnada for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextToStateOrProvinceFieldInTheConsigneeInformationSectionWhenCountryIsNeitherUnitedStatesNorCannadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text to State or Province field i" +
                    "n the Consignee information section when country is neither United states nor Ca" +
                    "nnada for external users", new string[] {
                        "Functional"});
#line 715
this.ScenarioSetup(scenarioInfo);
#line 716
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 717
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 718
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 719
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 720
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text to State or Provinc" +
                    "e field of Consignee information section when country is neither United states n" +
                    "or Cannada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text to State or Province field i" +
            "n the Consignee information section when country is neither United states nor Ca" +
            "nnada for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextToStateOrProvinceFieldInTheConsigneeInformationSectionWhenCountryIsNeitherUnitedStatesNorCannadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text to State or Province field i" +
                    "n the Consignee information section when country is neither United states nor Ca" +
                    "nnada for internal users", new string[] {
                        "Functional"});
#line 723
this.ScenarioSetup(scenarioInfo);
#line 724
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 725
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 726
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 727
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 728
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text to State or Provinc" +
                    "e field of Consignee information section when country is neither United states n" +
                    "or Cannada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Consignee information section" +
            " when country is United states for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfConsigneeInformationSectionWhenCountryIsUnitedStatesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Consignee information section" +
                    " when country is United states for external users", new string[] {
                        "Functional"});
#line 731
this.ScenarioSetup(scenarioInfo);
#line 732
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 733
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 734
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 735
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 736
 testRunner.Then("I must be able to pass a maximum of 5 digits including leading zeros to Zip or Po" +
                    "stal field of Consignee information section when country is United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Consignee information section" +
            " when country is United states for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfConsigneeInformationSectionWhenCountryIsUnitedStatesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Consignee information section" +
                    " when country is United states for internal users", new string[] {
                        "Functional"});
#line 739
this.ScenarioSetup(scenarioInfo);
#line 740
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 741
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 742
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 743
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 744
 testRunner.Then("I must be able to pass a maximum of 5 digits including leading zeros to Zip or Po" +
                    "stal field of Consignee information section when country is United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than or less than 5 digits to Zip or Postal field of Con" +
            "signee information section when country is United states for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThanOrLessThan5DigitsToZipOrPostalFieldOfConsigneeInformationSectionWhenCountryIsUnitedStatesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than or less than 5 digits to Zip or Postal field of Con" +
                    "signee information section when country is United states for external users", new string[] {
                        "Functional"});
#line 747
this.ScenarioSetup(scenarioInfo);
#line 748
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 749
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 750
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 751
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 752
 testRunner.Then("I should not be able to pass more than or less than 5 digits to Zip or Postal fie" +
                    "ld of Consignee information section when country is United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than or less than 5 digits to Zip or Postal field of Con" +
            "signee information section when country is United states for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThanOrLessThan5DigitsToZipOrPostalFieldOfConsigneeInformationSectionWhenCountryIsUnitedStatesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than or less than 5 digits to Zip or Postal field of Con" +
                    "signee information section when country is United states for internal users", new string[] {
                        "Functional"});
#line 755
this.ScenarioSetup(scenarioInfo);
#line 756
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 757
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 758
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 759
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 760
 testRunner.Then("I should not be able to pass more than or less than 5 digits to Zip or Postal fie" +
                    "ld of Consignee information section when country is United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Consignee information section" +
            " when country is Canada for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfConsigneeInformationSectionWhenCountryIsCanadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Consignee information section" +
                    " when country is Canada for external users", new string[] {
                        "Functional"});
#line 763
this.ScenarioSetup(scenarioInfo);
#line 764
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 765
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 766
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 767
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 768
 testRunner.Then("I must be able to pass a maximum of 7 alpha numeric characters to Zip or Postal f" +
                    "ield of Consignee information section when a space is used after first 3 charact" +
                    "ers and the country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Consignee information section" +
            " when country is Canada for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfConsigneeInformationSectionWhenCountryIsCanadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Consignee information section" +
                    " when country is Canada for internal users", new string[] {
                        "Functional"});
#line 771
this.ScenarioSetup(scenarioInfo);
#line 772
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 773
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 774
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 775
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 776
 testRunner.Then("I must be able to pass a maximum of 7 alpha numeric characters to Zip or Postal f" +
                    "ield of Consignee information section when a space is used after first 3 charact" +
                    "ers and the country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 7 alpha numeric characters to Zip or Postal field o" +
            "f Consignee information section when country is Canada for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan7AlphaNumericCharactersToZipOrPostalFieldOfConsigneeInformationSectionWhenCountryIsCanadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 7 alpha numeric characters to Zip or Postal field o" +
                    "f Consignee information section when country is Canada for external users", new string[] {
                        "Functional"});
#line 779
this.ScenarioSetup(scenarioInfo);
#line 780
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 781
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 782
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 783
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 784
 testRunner.Then("I should not be able to pass more than 7 alpha numeric characters to Zip or Posta" +
                    "l field of Consignee information section when country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 7 alpha numeric characters to Zip or Postal field o" +
            "f Consignee information section when country is Canada for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan7AlphaNumericCharactersToZipOrPostalFieldOfConsigneeInformationSectionWhenCountryIsCanadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 7 alpha numeric characters to Zip or Postal field o" +
                    "f Consignee information section when country is Canada for internal users", new string[] {
                        "Functional"});
#line 787
this.ScenarioSetup(scenarioInfo);
#line 788
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 789
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 790
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 791
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 792
 testRunner.Then("I should not be able to pass more than 7 alpha numeric characters to Zip or Posta" +
                    "l field of Consignee information section when country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing less than 6 alpha numeric characters to Zip or Postal field o" +
            "f Consignee information section when country is Canada for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingLessThan6AlphaNumericCharactersToZipOrPostalFieldOfConsigneeInformationSectionWhenCountryIsCanadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing less than 6 alpha numeric characters to Zip or Postal field o" +
                    "f Consignee information section when country is Canada for external users", new string[] {
                        "Functional"});
#line 795
this.ScenarioSetup(scenarioInfo);
#line 796
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 797
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 798
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 799
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 800
 testRunner.Then("I should not be able to pass less than 6 alpha numeric characters to Zip or Posta" +
                    "l field of Consignee information section when country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing less than 6 alpha numeric characters to Zip or Postal field o" +
            "f Consignee information section when country is Canada for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingLessThan6AlphaNumericCharactersToZipOrPostalFieldOfConsigneeInformationSectionWhenCountryIsCanadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing less than 6 alpha numeric characters to Zip or Postal field o" +
                    "f Consignee information section when country is Canada for internal users", new string[] {
                        "Functional"});
#line 803
this.ScenarioSetup(scenarioInfo);
#line 804
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 805
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 806
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 807
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 808
 testRunner.Then("I should not be able to pass less than 6 alpha numeric characters to Zip or Posta" +
                    "l field of Consignee information section when country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Consignee information section" +
            " when country is neither Canada nor United states for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfConsigneeInformationSectionWhenCountryIsNeitherCanadaNorUnitedStatesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Consignee information section" +
                    " when country is neither Canada nor United states for external users", new string[] {
                        "Functional"});
#line 811
this.ScenarioSetup(scenarioInfo);
#line 812
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 813
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 814
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 815
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 816
 testRunner.Then("I must be able to pass a maximum of 15 alpha numeric , text, special characters t" +
                    "o Zip or Postal field of Consignee information section when country is neither C" +
                    "anada nor United states for external users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Consignee information section" +
            " when country is neither Canada nor United states for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfConsigneeInformationSectionWhenCountryIsNeitherCanadaNorUnitedStatesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Consignee information section" +
                    " when country is neither Canada nor United states for internal users", new string[] {
                        "Functional"});
#line 819
this.ScenarioSetup(scenarioInfo);
#line 820
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 821
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 822
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 823
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 824
 testRunner.Then("I must be able to pass a maximum of 15 alpha numeric , text, special characters t" +
                    "o Zip or Postal field of Consignee information section when country is neither C" +
                    "anada nor United states for external users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 15 alpha numeric, text, special characters to Zip o" +
            "r Postal field of Consignee information section when country is neither Canada n" +
            "or United states for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan15AlphaNumericTextSpecialCharactersToZipOrPostalFieldOfConsigneeInformationSectionWhenCountryIsNeitherCanadaNorUnitedStatesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 15 alpha numeric, text, special characters to Zip o" +
                    "r Postal field of Consignee information section when country is neither Canada n" +
                    "or United states for external users", new string[] {
                        "Functional"});
#line 827
this.ScenarioSetup(scenarioInfo);
#line 828
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 829
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 830
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 831
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 832
 testRunner.Then("I should not be able to pass more than 15 alpha numeric , text, special character" +
                    "s to Zip or Postal field of Consignee information section when country is neithe" +
                    "r Canada nor United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 15 alpha numeric, text, special characters to Zip o" +
            "r Postal field of Consignee information section when country is neither Canada n" +
            "or United states for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan15AlphaNumericTextSpecialCharactersToZipOrPostalFieldOfConsigneeInformationSectionWhenCountryIsNeitherCanadaNorUnitedStatesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 15 alpha numeric, text, special characters to Zip o" +
                    "r Postal field of Consignee information section when country is neither Canada n" +
                    "or United states for internal users", new string[] {
                        "Functional"});
#line 835
this.ScenarioSetup(scenarioInfo);
#line 836
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 837
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 838
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 839
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 840
 testRunner.Then("I should not be able to pass more than 15 alpha numeric , text, special character" +
                    "s to Zip or Postal field of Consignee information section when country is neithe" +
                    "r Canada nor United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of Claim Payable to section verbiage in Submit a cla" +
            "im page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceOfClaimPayableToSectionVerbiageInSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of Claim Payable to section verbiage in Submit a cla" +
                    "im page for external users", new string[] {
                        "Functional"});
#line 843
this.ScenarioSetup(scenarioInfo);
#line 844
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 845
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 846
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 847
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 848
 testRunner.Then("I must be able to see a verbiage beneath the claim payable section header stating" +
                    " - Claim must be made payable to party on the bill of lading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of Claim Payable to section verbiage in Submit a cla" +
            "im page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceOfClaimPayableToSectionVerbiageInSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of Claim Payable to section verbiage in Submit a cla" +
                    "im page for internal users", new string[] {
                        "Functional"});
#line 851
this.ScenarioSetup(scenarioInfo);
#line 852
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 853
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 854
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 855
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 856
 testRunner.Then("I must be able to see a verbiage beneath the claim payable section header stating" +
                    " - Claim must be made payable to party on the bill of lading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of expected fields in the Claim Payable To section o" +
            "f Submit a claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceOfExpectedFieldsInTheClaimPayableToSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of expected fields in the Claim Payable To section o" +
                    "f Submit a claim page for external users", new string[] {
                        "Functional"});
#line 859
this.ScenarioSetup(scenarioInfo);
#line 860
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 861
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 862
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 863
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 864
 testRunner.Then("I must be able to see the following fields in the Claim payable To section - Comp" +
                    "any Name, Address, Address2, City, StateOrProvince, ZipOrPostal, Country, Contac" +
                    "t Name, Contact Phone, Contact Email, Contact Website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of expected fields in the Claim Payable To section o" +
            "f Submit a claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceOfExpectedFieldsInTheClaimPayableToSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of expected fields in the Claim Payable To section o" +
                    "f Submit a claim page for internal users", new string[] {
                        "Functional"});
#line 867
this.ScenarioSetup(scenarioInfo);
#line 868
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 869
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 870
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 871
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 872
 testRunner.Then("I must be able to see the following fields in the Claim payable To section - Comp" +
                    "any Name, Address, Address2, City, StateOrProvince, ZipOrPostal, Country, Contac" +
                    "t Name, Contact Phone, Contact Email, Contact Website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify required fields in Claim Payable To section of Submit a claim page" +
            " for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyRequiredFieldsInClaimPayableToSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify required fields in Claim Payable To section of Submit a claim page" +
                    " for external users", new string[] {
                        "Functional"});
#line 875
this.ScenarioSetup(scenarioInfo);
#line 876
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 877
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 878
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 879
 testRunner.When("I arrive on Submit a Claim page and click on submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 880
 testRunner.Then("I should be able to view the following fields getting highlighted - Company Name," +
                    " Address, City, StateOrProvince, ZipOrPostal, Country, Contact Name, Contact Pho" +
                    "ne, Contact Email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify required fields in Claim Payable To section of Submit a claim page" +
            " for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyRequiredFieldsInClaimPayableToSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify required fields in Claim Payable To section of Submit a claim page" +
                    " for internal users", new string[] {
                        "Functional"});
#line 883
this.ScenarioSetup(scenarioInfo);
#line 884
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 885
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 886
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 887
 testRunner.When("I arrive on Submit a Claim page and click on submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 888
 testRunner.Then("I should be able to view the following fields getting highlighted - Company Name," +
                    " Address, City, StateOrProvince, ZipOrPostal, Country, Contact Name, Contact Pho" +
                    "ne, Contact Email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Company Name field in the Claim Payable To section b" +
            "y passing a maximum of 75 alpha-numeric, text, special characters for external u" +
            "sers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfCompanyNameFieldInTheClaimPayableToSectionByPassingAMaximumOf75Alpha_NumericTextSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Company Name field in the Claim Payable To section b" +
                    "y passing a maximum of 75 alpha-numeric, text, special characters for external u" +
                    "sers", new string[] {
                        "Functional"});
#line 891
this.ScenarioSetup(scenarioInfo);
#line 892
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 893
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 894
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 895
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 896
 testRunner.Then("I must be able to pass a maximum of 75 alpha-numeric, text, special characters to" +
                    " the Company name field of Claim Payable To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Company Name field in the Claim Payable To section b" +
            "y passing a maximum of 75 alpha-numeric, text, special characters for internal u" +
            "sers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfCompanyNameFieldInTheClaimPayableToSectionByPassingAMaximumOf75Alpha_NumericTextSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Company Name field in the Claim Payable To section b" +
                    "y passing a maximum of 75 alpha-numeric, text, special characters for internal u" +
                    "sers", new string[] {
                        "Functional"});
#line 899
this.ScenarioSetup(scenarioInfo);
#line 900
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 901
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 902
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 903
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 904
 testRunner.Then("I must be able to pass a maximum of 75 alpha-numeric, text, special characters to" +
                    " the Company name field of Claim Payable To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 75 alpha-numeric, text, special characters to the C" +
            "ompany name field of Claim Payable To section for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan75Alpha_NumericTextSpecialCharactersToTheCompanyNameFieldOfClaimPayableToSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 75 alpha-numeric, text, special characters to the C" +
                    "ompany name field of Claim Payable To section for external users", new string[] {
                        "Functional"});
#line 907
this.ScenarioSetup(scenarioInfo);
#line 908
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 909
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 910
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 911
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 912
 testRunner.Then("I should not be able to pass more than 75 alpha-numeric, text, special characters" +
                    " to the Company name field of Claim Payable To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 75 alpha-numeric, text, special characters to the C" +
            "ompany name field of Claim Payable To section for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan75Alpha_NumericTextSpecialCharactersToTheCompanyNameFieldOfClaimPayableToSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 75 alpha-numeric, text, special characters to the C" +
                    "ompany name field of Claim Payable To section for internal users", new string[] {
                        "Functional"});
#line 915
this.ScenarioSetup(scenarioInfo);
#line 916
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 917
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 918
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 919
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 920
 testRunner.Then("I should not be able to pass more than 75 alpha-numeric, text, special characters" +
                    " to the Company name field of Claim Payable To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Address field in the Claim Payable To section by pas" +
            "sing a maximum of 150 alpha-numeric, text, special characters for external users" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfAddressFieldInTheClaimPayableToSectionByPassingAMaximumOf150Alpha_NumericTextSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Address field in the Claim Payable To section by pas" +
                    "sing a maximum of 150 alpha-numeric, text, special characters for external users" +
                    "", new string[] {
                        "Functional"});
#line 923
this.ScenarioSetup(scenarioInfo);
#line 924
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 925
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 926
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 927
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 928
 testRunner.Then("I must be able to pass a maximum of 150 alpha-numeric, text, special characters t" +
                    "o the Address field of Claim Payable To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Address field in the Claim Payable To section by pas" +
            "sing a maximum of 150 alpha-numeric, text, special characters for internal users" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfAddressFieldInTheClaimPayableToSectionByPassingAMaximumOf150Alpha_NumericTextSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Address field in the Claim Payable To section by pas" +
                    "sing a maximum of 150 alpha-numeric, text, special characters for internal users" +
                    "", new string[] {
                        "Functional"});
#line 931
this.ScenarioSetup(scenarioInfo);
#line 932
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 933
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 934
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 935
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 936
 testRunner.Then("I must be able to pass a maximum of 150 alpha-numeric, text, special characters t" +
                    "o the Address field of Claim Payable To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 150 alpha-numeric, text, special characters to the " +
            "Address field of Claim Payable To section for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan150Alpha_NumericTextSpecialCharactersToTheAddressFieldOfClaimPayableToSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 150 alpha-numeric, text, special characters to the " +
                    "Address field of Claim Payable To section for external users", new string[] {
                        "Functional"});
#line 939
this.ScenarioSetup(scenarioInfo);
#line 940
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 941
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 942
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 943
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 944
 testRunner.Then("I should not be able to pass more than 150 alpha-numeric, text, special character" +
                    "s to the Address field of Claim Payable To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 150 alpha-numeric, text, special characters to the " +
            "Address field of Claim Payable To section for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan150Alpha_NumericTextSpecialCharactersToTheAddressFieldOfClaimPayableToSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 150 alpha-numeric, text, special characters to the " +
                    "Address field of Claim Payable To section for internal users", new string[] {
                        "Functional"});
#line 947
this.ScenarioSetup(scenarioInfo);
#line 948
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 949
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 950
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 951
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 952
 testRunner.Then("I should not be able to pass more than 150 alpha-numeric, text, special character" +
                    "s to the Address field of Claim Payable To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Address2 field in the Claim Payable To section by pa" +
            "ssing a maximum of 150 alpha-numeric, text, special characters for external user" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfAddress2FieldInTheClaimPayableToSectionByPassingAMaximumOf150Alpha_NumericTextSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Address2 field in the Claim Payable To section by pa" +
                    "ssing a maximum of 150 alpha-numeric, text, special characters for external user" +
                    "s", new string[] {
                        "Functional"});
#line 955
this.ScenarioSetup(scenarioInfo);
#line 956
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 957
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 958
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 959
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 960
 testRunner.Then("I must be able to pass a maximum of 150 alpha-numeric, text, special characters t" +
                    "o the Address2 field of Claim Payable To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Address2 field in the Claim Payable To section by pa" +
            "ssing a maximum of 150 alpha-numeric, text, special characters for internal user" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfAddress2FieldInTheClaimPayableToSectionByPassingAMaximumOf150Alpha_NumericTextSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Address2 field in the Claim Payable To section by pa" +
                    "ssing a maximum of 150 alpha-numeric, text, special characters for internal user" +
                    "s", new string[] {
                        "Functional"});
#line 963
this.ScenarioSetup(scenarioInfo);
#line 964
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 965
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 966
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 967
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 968
 testRunner.Then("I must be able to pass a maximum of 150 alpha-numeric, text, special characters t" +
                    "o the Address2 field of Claim Payable To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 150 alpha-numeric, text, special characters to the " +
            "Address2 field of Claim Payable To section for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan150Alpha_NumericTextSpecialCharactersToTheAddress2FieldOfClaimPayableToSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 150 alpha-numeric, text, special characters to the " +
                    "Address2 field of Claim Payable To section for external users", new string[] {
                        "Functional"});
#line 971
this.ScenarioSetup(scenarioInfo);
#line 972
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 973
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 974
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 975
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 976
 testRunner.Then("I should not be able to pass more than 150 alpha-numeric, text, special character" +
                    "s to the Address2 field of Claim Payable To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 150 alpha-numeric, text, special characters to the " +
            "Address2 field of Claim Payable To section for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan150Alpha_NumericTextSpecialCharactersToTheAddress2FieldOfClaimPayableToSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 150 alpha-numeric, text, special characters to the " +
                    "Address2 field of Claim Payable To section for internal users", new string[] {
                        "Functional"});
#line 979
this.ScenarioSetup(scenarioInfo);
#line 980
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 981
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 982
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 983
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 984
 testRunner.Then("I should not be able to pass more than 150 alpha-numeric, text, special character" +
                    "s to the Address2 field of Claim Payable To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of city field in the Claim Payable To Section by passin" +
            "g a maximum of 50 alpha-numeric, text, special characters for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfCityFieldInTheClaimPayableToSectionByPassingAMaximumOf50Alpha_NumericTextSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of city field in the Claim Payable To Section by passin" +
                    "g a maximum of 50 alpha-numeric, text, special characters for external users", new string[] {
                        "Functional"});
#line 987
this.ScenarioSetup(scenarioInfo);
#line 988
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 989
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 990
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 991
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 992
 testRunner.Then("I must be able to pass a maximum of 50 alpha-numeric, text, special characters to" +
                    " the city field of Claim Payable To Section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of city field in the Claim Payable To Section by passin" +
            "g a maximum of 50 alpha-numeric, text, special characters for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfCityFieldInTheClaimPayableToSectionByPassingAMaximumOf50Alpha_NumericTextSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of city field in the Claim Payable To Section by passin" +
                    "g a maximum of 50 alpha-numeric, text, special characters for internal users", new string[] {
                        "Functional"});
#line 995
this.ScenarioSetup(scenarioInfo);
#line 996
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 997
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 998
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 999
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1000
 testRunner.Then("I must be able to pass a maximum of 50 alpha-numeric, text, special characters to" +
                    " the city field of Claim Payable To Section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text, special characters to city " +
            "field of Claim Payable To Section for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextSpecialCharactersToCityFieldOfClaimPayableToSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text, special characters to city " +
                    "field of Claim Payable To Section for external users", new string[] {
                        "Functional"});
#line 1003
this.ScenarioSetup(scenarioInfo);
#line 1004
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1005
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1006
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1007
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1008
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text, special characters" +
                    " to the city field of Claim Payable To Section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text, special characters to city " +
            "field of Claim Payable To Section for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextSpecialCharactersToCityFieldOfClaimPayableToSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text, special characters to city " +
                    "field of Claim Payable To Section for internal users", new string[] {
                        "Functional"});
#line 1011
this.ScenarioSetup(scenarioInfo);
#line 1012
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1013
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1014
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1015
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1016
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text, special characters" +
                    " to the city field of Claim Payable To Section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of State or Province field in the Claim Payable To Sect" +
            "ion when country is neither United states nor Canada for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfStateOrProvinceFieldInTheClaimPayableToSectionWhenCountryIsNeitherUnitedStatesNorCanadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of State or Province field in the Claim Payable To Sect" +
                    "ion when country is neither United states nor Canada for external users", new string[] {
                        "Functional"});
#line 1019
this.ScenarioSetup(scenarioInfo);
#line 1020
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1021
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1022
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1023
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1024
 testRunner.Then("I should be able to pass a maximum of 50 alpha-numeric, text to State or Province" +
                    " field of Claim Payable To Section when country is neither United states nor Can" +
                    "ada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of State or Province field in the Claim Payable To Sect" +
            "ion when country is neither United states nor Canada for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfStateOrProvinceFieldInTheClaimPayableToSectionWhenCountryIsNeitherUnitedStatesNorCanadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of State or Province field in the Claim Payable To Sect" +
                    "ion when country is neither United states nor Canada for internal users", new string[] {
                        "Functional"});
#line 1027
this.ScenarioSetup(scenarioInfo);
#line 1028
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1029
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1030
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1031
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1032
 testRunner.Then("I should be able to pass a maximum of 50 alpha-numeric, text to State or Province" +
                    " field of Claim Payable To Section when country is neither United states nor Can" +
                    "ada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text to State or Province field i" +
            "n the Claim Payable To Section when country is neither United states nor Canada " +
            "for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextToStateOrProvinceFieldInTheClaimPayableToSectionWhenCountryIsNeitherUnitedStatesNorCanadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text to State or Province field i" +
                    "n the Claim Payable To Section when country is neither United states nor Canada " +
                    "for external users", new string[] {
                        "Functional"});
#line 1035
this.ScenarioSetup(scenarioInfo);
#line 1036
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1037
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1038
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1039
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1040
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text to State or Provinc" +
                    "e field of Claim Payable To Section when country is neither United states nor Ca" +
                    "nada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text to State or Province field i" +
            "n the Claim Payable To Section when country is neither United states nor Canada " +
            "for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextToStateOrProvinceFieldInTheClaimPayableToSectionWhenCountryIsNeitherUnitedStatesNorCanadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text to State or Province field i" +
                    "n the Claim Payable To Section when country is neither United states nor Canada " +
                    "for internal users", new string[] {
                        "Functional"});
#line 1043
this.ScenarioSetup(scenarioInfo);
#line 1044
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1045
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1046
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1047
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1048
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text to State or Provinc" +
                    "e field of Claim Payable To Section when country is neither United states nor Ca" +
                    "nada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Claim Payable To Section when" +
            " country is United states for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfClaimPayableToSectionWhenCountryIsUnitedStatesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Claim Payable To Section when" +
                    " country is United states for external users", new string[] {
                        "Functional"});
#line 1051
this.ScenarioSetup(scenarioInfo);
#line 1052
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1053
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1054
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1055
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1056
 testRunner.Then("I must be able to pass a maximum of 5 digits including leading zeros to Zip or Po" +
                    "stal field of Claim Payable To Section when country is United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Claim Payable To Section when" +
            " country is United states for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfClaimPayableToSectionWhenCountryIsUnitedStatesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Claim Payable To Section when" +
                    " country is United states for internal users", new string[] {
                        "Functional"});
#line 1059
this.ScenarioSetup(scenarioInfo);
#line 1060
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1061
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1062
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1063
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1064
 testRunner.Then("I must be able to pass a maximum of 5 digits including leading zeros to Zip or Po" +
                    "stal field of Claim Payable To Section when country is United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than or less than 5 digits to Zip or Postal field of Cla" +
            "im Payable To Section when country is United states for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThanOrLessThan5DigitsToZipOrPostalFieldOfClaimPayableToSectionWhenCountryIsUnitedStatesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than or less than 5 digits to Zip or Postal field of Cla" +
                    "im Payable To Section when country is United states for external users", new string[] {
                        "Functional"});
#line 1067
this.ScenarioSetup(scenarioInfo);
#line 1068
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1069
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1070
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1071
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1072
 testRunner.Then("I should not be able to pass more than or less than 5 digits to Zip or Postal fie" +
                    "ld of Claim Payable To Section when country is United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than or less than 5 digits to Zip or Postal field of Cla" +
            "im Payable To Section when country is United states for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThanOrLessThan5DigitsToZipOrPostalFieldOfClaimPayableToSectionWhenCountryIsUnitedStatesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than or less than 5 digits to Zip or Postal field of Cla" +
                    "im Payable To Section when country is United states for internal users", new string[] {
                        "Functional"});
#line 1075
this.ScenarioSetup(scenarioInfo);
#line 1076
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1077
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1078
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1079
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1080
 testRunner.Then("I should not be able to pass more than or less than 5 digits to Zip or Postal fie" +
                    "ld of Claim Payable To Section when country is United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Claim Payable To Section when" +
            " country is Canada for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfClaimPayableToSectionWhenCountryIsCanadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Claim Payable To Section when" +
                    " country is Canada for external users", new string[] {
                        "Functional"});
#line 1083
this.ScenarioSetup(scenarioInfo);
#line 1084
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1085
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1086
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1087
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1088
 testRunner.Then("I must be able to pass a maximum of 7 alpha numeric characters to Zip or Postal f" +
                    "ield of Claim Payable To Section when a space is used after first 3 characters a" +
                    "nd the country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Claim Payable To Section when" +
            " country is Canada for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfClaimPayableToSectionWhenCountryIsCanadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Claim Payable To Section when" +
                    " country is Canada for internal users", new string[] {
                        "Functional"});
#line 1091
this.ScenarioSetup(scenarioInfo);
#line 1092
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1093
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1094
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1095
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1096
 testRunner.Then("I must be able to pass a maximum of 7 alpha numeric characters to Zip or Postal f" +
                    "ield of Claim Payable To Section when a space is used after first 3 characters a" +
                    "nd the country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 7 alpha numeric characters to Zip or Postal field o" +
            "f Claim Payable To Section when country is Canada for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan7AlphaNumericCharactersToZipOrPostalFieldOfClaimPayableToSectionWhenCountryIsCanadaForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 7 alpha numeric characters to Zip or Postal field o" +
                    "f Claim Payable To Section when country is Canada for external users", new string[] {
                        "Functional"});
#line 1099
this.ScenarioSetup(scenarioInfo);
#line 1100
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1101
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1102
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1103
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1104
 testRunner.Then("I should not be able to pass more than 7 alpha numeric characters to Zip or Posta" +
                    "l field of Claim Payable To Section when country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 7 alpha numeric characters to Zip or Postal field o" +
            "f Claim Payable To Section when country is Canada for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan7AlphaNumericCharactersToZipOrPostalFieldOfClaimPayableToSectionWhenCountryIsCanadaForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 7 alpha numeric characters to Zip or Postal field o" +
                    "f Claim Payable To Section when country is Canada for internal users", new string[] {
                        "Functional"});
#line 1107
this.ScenarioSetup(scenarioInfo);
#line 1108
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1109
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1110
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1111
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1112
 testRunner.Then("I should not be able to pass more than 7 alpha numeric characters to Zip or Posta" +
                    "l field of Claim Payable To Section when country is Canada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Claim Payable To Section when" +
            " country is neither Canada nor United states for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfClaimPayableToSectionWhenCountryIsNeitherCanadaNorUnitedStatesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Claim Payable To Section when" +
                    " country is neither Canada nor United states for external users", new string[] {
                        "Functional"});
#line 1115
this.ScenarioSetup(scenarioInfo);
#line 1116
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1117
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1118
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1119
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1120
 testRunner.Then("I must be able to pass a maximum of 15 alpha numeric , text, special characters t" +
                    "o Zip or Postal field of Claim Payable To Section when country is neither Canada" +
                    " nor United states for external users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Zip or Postal field of Claim Payable To Section sect" +
            "ion when country is neither Canada nor United states for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfZipOrPostalFieldOfClaimPayableToSectionSectionWhenCountryIsNeitherCanadaNorUnitedStatesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Zip or Postal field of Claim Payable To Section sect" +
                    "ion when country is neither Canada nor United states for internal users", new string[] {
                        "Functional"});
#line 1123
this.ScenarioSetup(scenarioInfo);
#line 1124
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1125
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1126
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1127
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1128
 testRunner.Then("I must be able to pass a maximum of 15 alpha numeric , text, special characters t" +
                    "o Zip or Postal field of Claim Payable To Section when country is neither Canada" +
                    " nor United states for external users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 15 alpha numeric, text, special characters to Zip o" +
            "r Postal field of Claim Payable To Section when country is neither Canada nor Un" +
            "ited states for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan15AlphaNumericTextSpecialCharactersToZipOrPostalFieldOfClaimPayableToSectionWhenCountryIsNeitherCanadaNorUnitedStatesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 15 alpha numeric, text, special characters to Zip o" +
                    "r Postal field of Claim Payable To Section when country is neither Canada nor Un" +
                    "ited states for external users", new string[] {
                        "Functional"});
#line 1131
this.ScenarioSetup(scenarioInfo);
#line 1132
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1133
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1134
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1135
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1136
 testRunner.Then("I should not be able to pass more than 15 alpha numeric , text, special character" +
                    "s to Zip or Postal field of Claim Payable To Section when country is neither Can" +
                    "ada nor United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 15 alpha numeric, text, special characters to Zip o" +
            "r Postal field of Claim Payable To Section when country is neither Canada nor Un" +
            "ited states for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan15AlphaNumericTextSpecialCharactersToZipOrPostalFieldOfClaimPayableToSectionWhenCountryIsNeitherCanadaNorUnitedStatesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 15 alpha numeric, text, special characters to Zip o" +
                    "r Postal field of Claim Payable To Section when country is neither Canada nor Un" +
                    "ited states for internal users", new string[] {
                        "Functional"});
#line 1139
this.ScenarioSetup(scenarioInfo);
#line 1140
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1141
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1142
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1143
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1144
 testRunner.Then("I should not be able to pass more than 15 alpha numeric , text, special character" +
                    "s to Zip or Postal field of Claim Payable To Section when country is neither Can" +
                    "ada nor United states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Contact Name field im Claim Payable To section of Su" +
            "bmit a Claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfContactNameFieldImClaimPayableToSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Contact Name field im Claim Payable To section of Su" +
                    "bmit a Claim page for external users", new string[] {
                        "Functional"});
#line 1147
this.ScenarioSetup(scenarioInfo);
#line 1148
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1149
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1150
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1151
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1152
 testRunner.Then("I must be able to pass a maximum of 50 alpha-numeric, text, special characters to" +
                    " Contact Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Contact Name field im Claim Payable To section of Su" +
            "bmit a Claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfContactNameFieldImClaimPayableToSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Contact Name field im Claim Payable To section of Su" +
                    "bmit a Claim page for internal users", new string[] {
                        "Functional"});
#line 1155
this.ScenarioSetup(scenarioInfo);
#line 1156
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1157
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1158
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1159
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1160
 testRunner.Then("I must be able to pass a maximum of 50 alpha-numeric, text, special characters to" +
                    " Contact Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text, special characters to Conta" +
            "ct Name field of Submit a Claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextSpecialCharactersToContactNameFieldOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text, special characters to Conta" +
                    "ct Name field of Submit a Claim page for external users", new string[] {
                        "Functional"});
#line 1163
this.ScenarioSetup(scenarioInfo);
#line 1164
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1165
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1166
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1167
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1168
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text, special characters" +
                    " to Contact Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text, special characters to Conta" +
            "ct Name field of Submit a Claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextSpecialCharactersToContactNameFieldOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text, special characters to Conta" +
                    "ct Name field of Submit a Claim page for internal users", new string[] {
                        "Functional"});
#line 1171
this.ScenarioSetup(scenarioInfo);
#line 1172
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1173
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1174
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1175
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1176
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text, special characters" +
                    " to Contact Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Contact Phone field im Claim Payable To section of S" +
            "ubmit a Claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfContactPhoneFieldImClaimPayableToSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Contact Phone field im Claim Payable To section of S" +
                    "ubmit a Claim page for external users", new string[] {
                        "Functional"});
#line 1179
this.ScenarioSetup(scenarioInfo);
#line 1180
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1181
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1182
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1183
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1184
 testRunner.Then("I must be able to pass a maximum of 20 numeric, special characters space, hyphen," +
                    " open parenthesis, close parenthesis to Contact Phone field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Contact Phone field im Claim Payable To section of S" +
            "ubmit a Claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfContactPhoneFieldImClaimPayableToSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Contact Phone field im Claim Payable To section of S" +
                    "ubmit a Claim page for internal users", new string[] {
                        "Functional"});
#line 1187
this.ScenarioSetup(scenarioInfo);
#line 1188
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1189
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1190
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1191
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1192
 testRunner.Then("I must be able to pass a maximum of 20 numeric, special characters space, hyphen," +
                    " open parenthesis, close parenthesis to Contact Phone field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 20 numeric, special characters space, hyphen, open " +
            "parenthesis, close parenthesis to Contact Phone field for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan20NumericSpecialCharactersSpaceHyphenOpenParenthesisCloseParenthesisToContactPhoneFieldForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 20 numeric, special characters space, hyphen, open " +
                    "parenthesis, close parenthesis to Contact Phone field for external users", new string[] {
                        "Functional"});
#line 1195
this.ScenarioSetup(scenarioInfo);
#line 1196
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1197
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1198
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1199
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1200
 testRunner.Then("I should not be able to pass more than 20 numeric, special characters space, hyph" +
                    "en, open parenthesis, close parenthesis to Contact Phone field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 20 numeric, special characters space, hyphen, open " +
            "parenthesis, close parenthesis to Contact Phone field for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan20NumericSpecialCharactersSpaceHyphenOpenParenthesisCloseParenthesisToContactPhoneFieldForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 20 numeric, special characters space, hyphen, open " +
                    "parenthesis, close parenthesis to Contact Phone field for internal users", new string[] {
                        "Functional"});
#line 1203
this.ScenarioSetup(scenarioInfo);
#line 1204
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1205
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1206
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1207
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1208
 testRunner.Then("I should not be able to pass more than 20 numeric, special characters space, hyph" +
                    "en, open parenthesis, close parenthesis to Contact Phone field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing less than 10 numeric, special characters space, hyphen, open " +
            "parenthesis, close parenthesis to Contact Phone field for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingLessThan10NumericSpecialCharactersSpaceHyphenOpenParenthesisCloseParenthesisToContactPhoneFieldForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing less than 10 numeric, special characters space, hyphen, open " +
                    "parenthesis, close parenthesis to Contact Phone field for external users", new string[] {
                        "Functional"});
#line 1211
this.ScenarioSetup(scenarioInfo);
#line 1212
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1213
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1214
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1215
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1216
 testRunner.Then("I should not be able to pass less than 10 numeric, special characters space, hyph" +
                    "en, open parenthesis, close parenthesis to Contact Phone field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing less than 10 numeric, special characters space, hyphen, open " +
            "parenthesis, close parenthesis to Contact Phone field for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingLessThan10NumericSpecialCharactersSpaceHyphenOpenParenthesisCloseParenthesisToContactPhoneFieldForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing less than 10 numeric, special characters space, hyphen, open " +
                    "parenthesis, close parenthesis to Contact Phone field for internal users", new string[] {
                        "Functional"});
#line 1219
this.ScenarioSetup(scenarioInfo);
#line 1220
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1221
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1222
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1223
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1224
 testRunner.Then("I should not be able to pass less than 10 numeric, special characters space, hyph" +
                    "en, open parenthesis, close parenthesis to Contact Phone field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing invalid email id to Contact Email field in Claim Payable To s" +
            "ection of Submit a Claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingInvalidEmailIdToContactEmailFieldInClaimPayableToSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing invalid email id to Contact Email field in Claim Payable To s" +
                    "ection of Submit a Claim page for external users", new string[] {
                        "Functional"});
#line 1227
this.ScenarioSetup(scenarioInfo);
#line 1228
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1229
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1230
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1231
 testRunner.When("I arrive on Submit a Claim page i pass an invalid Email id to Contact email field" +
                    " of Claim Payable To section and click on submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1232
 testRunner.Then("I must be able to see Contact email field of Claim Payable To section getting hig" +
                    "hlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing invalid email id to Contact Email field in Claim Payable To s" +
            "ection of Submit a Claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingInvalidEmailIdToContactEmailFieldInClaimPayableToSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing invalid email id to Contact Email field in Claim Payable To s" +
                    "ection of Submit a Claim page for internal users", new string[] {
                        "Functional"});
#line 1235
this.ScenarioSetup(scenarioInfo);
#line 1236
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1237
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1238
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1239
 testRunner.When("I arrive on Submit a Claim page i pass an invalid Email id to Contact email field" +
                    " of Claim Payable To section and click on submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1240
 testRunner.Then("I must be able to see Contact email field of Claim Payable To section getting hig" +
                    "hlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Contact Website field im Claim Payable To section of" +
            " Submit a Claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfContactWebsiteFieldImClaimPayableToSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Contact Website field im Claim Payable To section of" +
                    " Submit a Claim page for external users", new string[] {
                        "Functional"});
#line 1243
this.ScenarioSetup(scenarioInfo);
#line 1244
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1245
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1246
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1247
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1248
 testRunner.Then("I must be able to pass a maximum of 50 alpha-numeric, text, special characters to" +
                    " Contact Website field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation of Contact Website field im Claim Payable To section of" +
            " Submit a Claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationOfContactWebsiteFieldImClaimPayableToSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation of Contact Website field im Claim Payable To section of" +
                    " Submit a Claim page for internal users", new string[] {
                        "Functional"});
#line 1251
this.ScenarioSetup(scenarioInfo);
#line 1252
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1253
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1254
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1255
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1256
 testRunner.Then("I must be able to pass a maximum of 50 alpha-numeric, text, special characters to" +
                    " Contact Website field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text, special characters to Conta" +
            "ct Website field of Submit a Claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextSpecialCharactersToContactWebsiteFieldOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text, special characters to Conta" +
                    "ct Website field of Submit a Claim page for external users", new string[] {
                        "Functional"});
#line 1259
this.ScenarioSetup(scenarioInfo);
#line 1260
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1261
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1262
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1263
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1264
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text, special characters" +
                    " to Contact Website field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text, special characters to Conta" +
            "ct Website field of Submit a Claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextSpecialCharactersToContactWebsiteFieldOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text, special characters to Conta" +
                    "ct Website field of Submit a Claim page for internal users", new string[] {
                        "Functional"});
#line 1267
this.ScenarioSetup(scenarioInfo);
#line 1268
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1269
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1270
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1271
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1272
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text, special characters" +
                    " to Contact Website field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify verbiage of Claim Details section on Submit a Claim page for exter" +
            "nal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyVerbiageOfClaimDetailsSectionOnSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify verbiage of Claim Details section on Submit a Claim page for exter" +
                    "nal users", new string[] {
                        "Functional"});
#line 1275
this.ScenarioSetup(scenarioInfo);
#line 1276
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1277
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1278
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1279
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1280
 testRunner.Then(@"I must be able to see a verbiage beneath claim details section as - Claims must be supported by a detailed statement showing how the amount of your claim was determined. Please include a complete description of the damaged or lost items and include item numbers or model numbers which should coincide with the invoice you are submitting.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify verbiage of Claim Details section on Submit a Claim page for inter" +
            "nal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyVerbiageOfClaimDetailsSectionOnSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify verbiage of Claim Details section on Submit a Claim page for inter" +
                    "nal users", new string[] {
                        "Functional"});
#line 1283
this.ScenarioSetup(scenarioInfo);
#line 1284
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1285
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1286
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1287
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1288
 testRunner.Then(@"I must be able to see a verbiage beneath claim details section as - Claims must be supported by a detailed statement showing how the amount of your claim was determined. Please include a complete description of the damaged or lost items and include item numbers or model numbers which should coincide with the invoice you are submitting.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and default value selected for Articles Insured fiel" +
            "d in Claims details section of Submit a Claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndDefaultValueSelectedForArticlesInsuredFieldInClaimsDetailsSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and default value selected for Articles Insured fiel" +
                    "d in Claims details section of Submit a Claim page for external users", new string[] {
                        "Functional"});
#line 1291
this.ScenarioSetup(scenarioInfo);
#line 1292
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1293
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1294
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1295
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1296
 testRunner.Then("I must be able to see Articles Insured field and it should be defaulted to NO.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and default value selected for Articles Insured fiel" +
            "d in Claims details section of Submit a Claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndDefaultValueSelectedForArticlesInsuredFieldInClaimsDetailsSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and default value selected for Articles Insured fiel" +
                    "d in Claims details section of Submit a Claim page for internal users", new string[] {
                        "Functional"});
#line 1299
this.ScenarioSetup(scenarioInfo);
#line 1300
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1301
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1302
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1303
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1304
 testRunner.Then("I must be able to see Articles Insured field and it should be defaulted to NO.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify Insured Value amount field when Articles Insured is selected as \'Y" +
            "es\' for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyInsuredValueAmountFieldWhenArticlesInsuredIsSelectedAsYesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify Insured Value amount field when Articles Insured is selected as \'Y" +
                    "es\' for external users", new string[] {
                        "Functional"});
#line 1307
this.ScenarioSetup(scenarioInfo);
#line 1308
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1309
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1310
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1311
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1312
 testRunner.When("I select \'Yes\' as Articles Insured", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1313
 testRunner.Then("I should be able to view Insured value amount as a required field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1314
 testRunner.And("I should be able to pass value to Insured Value amount field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify Insured Value amount field when Articles Insured is selected as \'Y" +
            "es\' for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyInsuredValueAmountFieldWhenArticlesInsuredIsSelectedAsYesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify Insured Value amount field when Articles Insured is selected as \'Y" +
                    "es\' for internal users", new string[] {
                        "Functional"});
#line 1317
this.ScenarioSetup(scenarioInfo);
#line 1318
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1319
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1320
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1321
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1322
 testRunner.When("I select \'Yes\' as Articles Insured", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1323
 testRunner.Then("I should be able to view Insured value amount as a required field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1324
 testRunner.And("I should be able to pass value to Insured Value amount field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation for Insured value amount field when Articles Insured is" +
            " selected as \'Yes\' for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationForInsuredValueAmountFieldWhenArticlesInsuredIsSelectedAsYesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation for Insured value amount field when Articles Insured is" +
                    " selected as \'Yes\' for external users", new string[] {
                        "Functional"});
#line 1327
this.ScenarioSetup(scenarioInfo);
#line 1328
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1329
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1330
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1331
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1332
 testRunner.When("I select \'Yes\' as Articles Insured", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1333
 testRunner.Then("The data entered in Insured value amount field should be in currency format", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation for Insured value amount field when Articles Insured is" +
            " selected as \'Yes\' for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationForInsuredValueAmountFieldWhenArticlesInsuredIsSelectedAsYesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation for Insured value amount field when Articles Insured is" +
                    " selected as \'Yes\' for internal users", new string[] {
                        "Functional"});
#line 1336
this.ScenarioSetup(scenarioInfo);
#line 1337
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1338
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1339
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1340
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1341
 testRunner.When("I select \'Yes\' as Articles Insured", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1342
 testRunner.Then("The data entered in Insured value amount field should be in currency format", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify Insured value amount field when Articles Insured is selected as \'N" +
            "o\' for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyInsuredValueAmountFieldWhenArticlesInsuredIsSelectedAsNoForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify Insured value amount field when Articles Insured is selected as \'N" +
                    "o\' for external users", new string[] {
                        "Functional"});
#line 1345
this.ScenarioSetup(scenarioInfo);
#line 1346
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1347
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1348
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1349
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1350
 testRunner.When("\'No\' is selected as Articles Insured by default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1351
 testRunner.Then("The Insured value amount field should be hidden", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify Insured value amount field when Articles Insured is selected as \'N" +
            "o\' for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyInsuredValueAmountFieldWhenArticlesInsuredIsSelectedAsNoForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify Insured value amount field when Articles Insured is selected as \'N" +
                    "o\' for internal users", new string[] {
                        "Functional"});
#line 1354
this.ScenarioSetup(scenarioInfo);
#line 1355
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1356
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1357
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1358
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1359
 testRunner.When("\'No\' is selected as Articles Insured by default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1360
 testRunner.Then("The Insured value amount field should be hidden", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Claim type field in claim detai" +
            "ls section of Submit a claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfClaimTypeFieldInClaimDetailsSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Claim type field in claim detai" +
                    "ls section of Submit a claim page for external users", new string[] {
                        "Functional"});
#line 1363
this.ScenarioSetup(scenarioInfo);
#line 1364
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1365
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1366
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1367
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1368
 testRunner.Then("I should be able to view Claim type label with Damage and Shortage as options to " +
                    "select", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1369
 testRunner.And("No option should be selected by default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1370
 testRunner.And("I should be able to select either Damage or Shortage option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Claim type field in claim detai" +
            "ls section of Submit a claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfClaimTypeFieldInClaimDetailsSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Claim type field in claim detai" +
                    "ls section of Submit a claim page for internal users", new string[] {
                        "Functional"});
#line 1373
this.ScenarioSetup(scenarioInfo);
#line 1374
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1375
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1376
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1377
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1378
 testRunner.Then("I should be able to view Claim type label with Damage and Shortage as options to " +
                    "select", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1379
 testRunner.And("No option should be selected by default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1380
 testRunner.And("I should be able to select either Damage or Shortage option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Article type field in claim det" +
            "ails section of Submit a claim page for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfArticleTypeFieldInClaimDetailsSectionOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Article type field in claim det" +
                    "ails section of Submit a claim page for external users", new string[] {
                        "Functional"});
#line 1383
this.ScenarioSetup(scenarioInfo);
#line 1384
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1385
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1386
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1387
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1388
 testRunner.Then("I should be able to view Article type label with New and Used as options to selec" +
                    "t", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1389
 testRunner.And("No option should be selected by default for articles type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1390
 testRunner.And("I should be able to select either New or Used option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and validation of Article type field in claim detail" +
            "s section of Submit a claim page for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndValidationOfArticleTypeFieldInClaimDetailsSectionOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and validation of Article type field in claim detail" +
                    "s section of Submit a claim page for internal users", new string[] {
                        "Functional"});
#line 1393
this.ScenarioSetup(scenarioInfo);
#line 1394
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1395
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1396
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1397
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1398
 testRunner.Then("I should be able to view Article type label with New and Used as options to selec" +
                    "t", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1399
 testRunner.And("No option should be selected by default for articles type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1400
 testRunner.And("I should be able to select either New or Used option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation for Item or Model number by passing a maximum of 50 alp" +
            "ha-numeric, text, special characters on Claim details section for external users" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationForItemOrModelNumberByPassingAMaximumOf50Alpha_NumericTextSpecialCharactersOnClaimDetailsSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation for Item or Model number by passing a maximum of 50 alp" +
                    "ha-numeric, text, special characters on Claim details section for external users" +
                    "", new string[] {
                        "Functional"});
#line 1403
this.ScenarioSetup(scenarioInfo);
#line 1404
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1405
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1406
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1407
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1408
 testRunner.Then("I should be able to pass a maximum of 50 alpha-numeric, text, special characters " +
                    "to Item or Model number field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation for Item or Model number by passing a maximum of 50 alp" +
            "ha-numeric, text, special characters on Claim details section for internal users" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationForItemOrModelNumberByPassingAMaximumOf50Alpha_NumericTextSpecialCharactersOnClaimDetailsSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation for Item or Model number by passing a maximum of 50 alp" +
                    "ha-numeric, text, special characters on Claim details section for internal users" +
                    "", new string[] {
                        "Functional"});
#line 1411
this.ScenarioSetup(scenarioInfo);
#line 1412
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1413
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1414
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1415
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1416
 testRunner.Then("I should be able to pass a maximum of 50 alpha-numeric, text, special characters " +
                    "to Item or Model number field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text, special characters to Item " +
            "or Model field for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextSpecialCharactersToItemOrModelFieldForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text, special characters to Item " +
                    "or Model field for external users", new string[] {
                        "Functional"});
#line 1419
this.ScenarioSetup(scenarioInfo);
#line 1420
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1421
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1422
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1423
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1424
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text, special characters" +
                    " to Item or Model number field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 50 alpha-numeric, text, special characters to Item " +
            "or Model field for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan50Alpha_NumericTextSpecialCharactersToItemOrModelFieldForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 50 alpha-numeric, text, special characters to Item " +
                    "or Model field for internal users", new string[] {
                        "Functional"});
#line 1427
this.ScenarioSetup(scenarioInfo);
#line 1428
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1429
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1430
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1431
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1432
 testRunner.Then("I should not be able to pass more than 50 alpha-numeric, text, special characters" +
                    " to Item or Model number field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation for Unit Value field of claim details section for exter" +
            "nal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationForUnitValueFieldOfClaimDetailsSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation for Unit Value field of claim details section for exter" +
                    "nal users", new string[] {
                        "Functional"});
#line 1435
this.ScenarioSetup(scenarioInfo);
#line 1436
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1437
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1438
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1439
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1440
 testRunner.Then("I should be able to pass value to Unit value field and the format should be curre" +
                    "ncy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation for Unit Value field of claim details section for inter" +
            "nal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationForUnitValueFieldOfClaimDetailsSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation for Unit Value field of claim details section for inter" +
                    "nal users", new string[] {
                        "Functional"});
#line 1443
this.ScenarioSetup(scenarioInfo);
#line 1444
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1445
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1446
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1447
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1448
 testRunner.Then("I should be able to pass value to Unit value field and the format should be curre" +
                    "ncy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation for Quantity field by passing a value greater than zero" +
            " for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationForQuantityFieldByPassingAValueGreaterThanZeroForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation for Quantity field by passing a value greater than zero" +
                    " for external users", new string[] {
                        "Functional"});
#line 1451
this.ScenarioSetup(scenarioInfo);
#line 1452
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1453
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1454
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1455
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1456
 testRunner.Then("I should be able to pass a value greater than zero to Quantity field of claim det" +
                    "ails section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation for Quantity field by passing a value greater than zero" +
            " for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationForQuantityFieldByPassingAValueGreaterThanZeroForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation for Quantity field by passing a value greater than zero" +
                    " for internal users", new string[] {
                        "Functional"});
#line 1459
this.ScenarioSetup(scenarioInfo);
#line 1460
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1461
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1462
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1463
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1464
 testRunner.Then("I should be able to pass a value greater than zero to Quantity field of claim det" +
                    "ails section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing zero to Quantity field of claim details section for external " +
            "users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingZeroToQuantityFieldOfClaimDetailsSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing zero to Quantity field of claim details section for external " +
                    "users", new string[] {
                        "Functional"});
#line 1467
this.ScenarioSetup(scenarioInfo);
#line 1468
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1469
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1470
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1471
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1472
 testRunner.Then("I should not be able to pass zero to Quantity field of claim details section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing zero to Quantity field of claim details section for internal " +
            "users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingZeroToQuantityFieldOfClaimDetailsSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing zero to Quantity field of claim details section for internal " +
                    "users", new string[] {
                        "Functional"});
#line 1475
this.ScenarioSetup(scenarioInfo);
#line 1476
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1477
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1478
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1479
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1480
 testRunner.Then("I should not be able to pass zero to Quantity field of claim details section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation for Weight field of claim details section for external " +
            "users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationForWeightFieldOfClaimDetailsSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation for Weight field of claim details section for external " +
                    "users", new string[] {
                        "Functional"});
#line 1483
this.ScenarioSetup(scenarioInfo);
#line 1484
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1485
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1486
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1487
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1488
 testRunner.Then("I should be able to pass value to weight field and # should be displayed after va" +
                    "lue, two decimal places", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify validation for Weight field of claim details section for internal " +
            "users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyValidationForWeightFieldOfClaimDetailsSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify validation for Weight field of claim details section for internal " +
                    "users", new string[] {
                        "Functional"});
#line 1491
this.ScenarioSetup(scenarioInfo);
#line 1492
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1493
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1494
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1495
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1496
 testRunner.Then("I should be able to pass value to weight field and # should be displayed after va" +
                    "lue, two decimal places", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify existence and functionality of Description of Claimed Articles fie" +
            "ld by passing a maximum of 500 alpha-numeric, text, special characters for exter" +
            "nal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyExistenceAndFunctionalityOfDescriptionOfClaimedArticlesFieldByPassingAMaximumOf500Alpha_NumericTextSpecialCharactersForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify existence and functionality of Description of Claimed Articles fie" +
                    "ld by passing a maximum of 500 alpha-numeric, text, special characters for exter" +
                    "nal users", new string[] {
                        "Functional"});
#line 1499
this.ScenarioSetup(scenarioInfo);
#line 1500
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1501
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1502
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1503
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1504
 testRunner.Then("I should be able to pass a maximum of 500 alpha-numeric, text, special characters" +
                    " to Description of Claimed Articles field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify existence and functionality of Description of Claimed Articles fie" +
            "ld by passing a maximum of 500 alpha-numeric, text, special characters for inter" +
            "nal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyExistenceAndFunctionalityOfDescriptionOfClaimedArticlesFieldByPassingAMaximumOf500Alpha_NumericTextSpecialCharactersForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify existence and functionality of Description of Claimed Articles fie" +
                    "ld by passing a maximum of 500 alpha-numeric, text, special characters for inter" +
                    "nal users", new string[] {
                        "Functional"});
#line 1507
this.ScenarioSetup(scenarioInfo);
#line 1508
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1509
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1510
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1511
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1512
 testRunner.Then("I should be able to pass a maximum of 500 alpha-numeric, text, special characters" +
                    " to Description of Claimed Articles field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 500 alpha-numeric, text, special characters to Desc" +
            "ription of Claimed Articles field for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan500Alpha_NumericTextSpecialCharactersToDescriptionOfClaimedArticlesFieldForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 500 alpha-numeric, text, special characters to Desc" +
                    "ription of Claimed Articles field for external users", new string[] {
                        "Functional"});
#line 1515
this.ScenarioSetup(scenarioInfo);
#line 1516
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1517
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1518
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1519
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1520
 testRunner.Then("I should not be able to pass more than 500 alpha-numeric, text, special character" +
                    "s to Description of Claimed Articles field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 500 alpha-numeric, text, special characters to Desc" +
            "ription of Claimed Articles field for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan500Alpha_NumericTextSpecialCharactersToDescriptionOfClaimedArticlesFieldForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 500 alpha-numeric, text, special characters to Desc" +
                    "ription of Claimed Articles field for internal users", new string[] {
                        "Functional"});
#line 1523
this.ScenarioSetup(scenarioInfo);
#line 1524
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1525
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1526
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1527
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1528
 testRunner.Then("I should not be able to pass more than 500 alpha-numeric, text, special character" +
                    "s to Description of Claimed Articles field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of Add Another Item hyperlink on claim details secti" +
            "on for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceOfAddAnotherItemHyperlinkOnClaimDetailsSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of Add Another Item hyperlink on claim details secti" +
                    "on for external users", new string[] {
                        "Functional"});
#line 1531
this.ScenarioSetup(scenarioInfo);
#line 1532
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1533
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1534
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1535
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1536
 testRunner.Then("I should be able to view Add Another Item hyperlink on claim details section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of Add Another Item hyperlink on claim details secti" +
            "on for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceOfAddAnotherItemHyperlinkOnClaimDetailsSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of Add Another Item hyperlink on claim details secti" +
                    "on for internal users", new string[] {
                        "Functional"});
#line 1539
this.ScenarioSetup(scenarioInfo);
#line 1540
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1541
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1542
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1543
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1544
 testRunner.Then("I should be able to view Add Another Item hyperlink on claim details section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify default selection and functionality of Do you wish to add freight " +
            "charges? field for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyDefaultSelectionAndFunctionalityOfDoYouWishToAddFreightChargesFieldForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify default selection and functionality of Do you wish to add freight " +
                    "charges? field for external users", new string[] {
                        "Functional"});
#line 1547
this.ScenarioSetup(scenarioInfo);
#line 1548
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1549
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1550
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1551
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1552
 testRunner.Then("I should be able to view \'No\' as default selection for Do you wish to add freight" +
                    " charges? field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1553
 testRunner.And("I should be able to select \'Yes\' or \'No\' option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify default selection and functionality of Do you wish to add freight " +
            "charges? field for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyDefaultSelectionAndFunctionalityOfDoYouWishToAddFreightChargesFieldForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify default selection and functionality of Do you wish to add freight " +
                    "charges? field for internal users", new string[] {
                        "Functional"});
#line 1556
this.ScenarioSetup(scenarioInfo);
#line 1557
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1558
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1559
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1560
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1561
 testRunner.Then("I should be able to view \'No\' as default selection for Do you wish to add freight" +
                    " charges? field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1562
 testRunner.And("I should be able to select \'Yes\' or \'No\' option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Original Freight Charges option" +
            " field when Do you wish to add freight charges is equal to \'Yes\' for external us" +
            "ers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfOriginalFreightChargesOptionFieldWhenDoYouWishToAddFreightChargesIsEqualToYesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Original Freight Charges option" +
                    " field when Do you wish to add freight charges is equal to \'Yes\' for external us" +
                    "ers", new string[] {
                        "Functional"});
#line 1565
this.ScenarioSetup(scenarioInfo);
#line 1566
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1567
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1568
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1569
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1570
 testRunner.Then("I should be able to view Original Freight Charges option field when Do you wish t" +
                    "o add freight charges is equal to \'Yes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1571
 testRunner.And("I should be able to Click Original Freight Charges option field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Original Freight Charges option" +
            " field when Do you wish to add freight charges is equal to \'Yes\' for internal us" +
            "ers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfOriginalFreightChargesOptionFieldWhenDoYouWishToAddFreightChargesIsEqualToYesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Original Freight Charges option" +
                    " field when Do you wish to add freight charges is equal to \'Yes\' for internal us" +
                    "ers", new string[] {
                        "Functional"});
#line 1574
this.ScenarioSetup(scenarioInfo);
#line 1575
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1576
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1577
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1578
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1579
 testRunner.Then("I should be able to view Original Freight Charges option field when Do you wish t" +
                    "o add freight charges is equal to \'Yes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1580
 testRunner.And("I should be able to Click Original Freight Charges option field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Original Freight Charges Value " +
            "field when Do you wish to add freight charges is equal to \'Yes\' for external use" +
            "rs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfOriginalFreightChargesValueFieldWhenDoYouWishToAddFreightChargesIsEqualToYesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Original Freight Charges Value " +
                    "field when Do you wish to add freight charges is equal to \'Yes\' for external use" +
                    "rs", new string[] {
                        "Functional"});
#line 1583
this.ScenarioSetup(scenarioInfo);
#line 1584
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1585
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1586
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1587
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1588
 testRunner.Then("I should be able to view Original Freight Charges Value field when Do you wish to" +
                    " add freight charges is equal to \'Yes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1589
 testRunner.And("I should be able to pass value to Original Freight Charges Value field and format" +
                    " should be currency", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Original Freight Charges Value " +
            "field when Do you wish to add freight charges is equal to \'Yes\' for internal use" +
            "rs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfOriginalFreightChargesValueFieldWhenDoYouWishToAddFreightChargesIsEqualToYesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Original Freight Charges Value " +
                    "field when Do you wish to add freight charges is equal to \'Yes\' for internal use" +
                    "rs", new string[] {
                        "Functional"});
#line 1592
this.ScenarioSetup(scenarioInfo);
#line 1593
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1594
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1595
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1596
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1597
 testRunner.Then("I should be able to view Original Freight Charges Value field when Do you wish to" +
                    " add freight charges is equal to \'Yes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1598
 testRunner.And("I should be able to pass value to Original Freight Charges Value field and format" +
                    " should be currency", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Return Freight Charges option f" +
            "ield when Do you wish to add freight charges is equal to \'Yes\' for external user" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfReturnFreightChargesOptionFieldWhenDoYouWishToAddFreightChargesIsEqualToYesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Return Freight Charges option f" +
                    "ield when Do you wish to add freight charges is equal to \'Yes\' for external user" +
                    "s", new string[] {
                        "Functional"});
#line 1601
this.ScenarioSetup(scenarioInfo);
#line 1602
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1603
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1604
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1605
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1606
 testRunner.Then("I should be able to view Return Freight Charges option field when Do you wish to " +
                    "add freight charges is equal to \'Yes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1607
 testRunner.And("I should be able to select Return Freight Charges option field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Return Freight Charges option f" +
            "ield when Do you wish to add freight charges is equal to \'Yes\' for internal user" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfReturnFreightChargesOptionFieldWhenDoYouWishToAddFreightChargesIsEqualToYesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Return Freight Charges option f" +
                    "ield when Do you wish to add freight charges is equal to \'Yes\' for internal user" +
                    "s", new string[] {
                        "Functional"});
#line 1610
this.ScenarioSetup(scenarioInfo);
#line 1611
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1612
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1613
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1614
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1615
 testRunner.Then("I should be able to view Return Freight Charges option field when Do you wish to " +
                    "add freight charges is equal to \'Yes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1616
 testRunner.And("I should be able to select Return Freight Charges option field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Return Freight Charges Value fi" +
            "eld when Do you wish to add freight charges is equal to \'Yes\' for external users" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfReturnFreightChargesValueFieldWhenDoYouWishToAddFreightChargesIsEqualToYesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Return Freight Charges Value fi" +
                    "eld when Do you wish to add freight charges is equal to \'Yes\' for external users" +
                    "", new string[] {
                        "Functional"});
#line 1619
this.ScenarioSetup(scenarioInfo);
#line 1620
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1621
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1622
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1623
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1624
 testRunner.Then("I should be able to view Return Freight Charges Value field when Do you wish to a" +
                    "dd freight charges is equal to \'Yes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1625
 testRunner.And("I should be able to pass value to Return Freight Charges Value field and format s" +
                    "hould be currency", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Return Freight Charges Value fi" +
            "eld when Do you wish to add freight charges is equal to \'Yes\' for internal users" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfReturnFreightChargesValueFieldWhenDoYouWishToAddFreightChargesIsEqualToYesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Return Freight Charges Value fi" +
                    "eld when Do you wish to add freight charges is equal to \'Yes\' for internal users" +
                    "", new string[] {
                        "Functional"});
#line 1628
this.ScenarioSetup(scenarioInfo);
#line 1629
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1630
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1631
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1632
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1633
 testRunner.Then("I should be able to view Return Freight Charges Value field when Do you wish to a" +
                    "dd freight charges is equal to \'Yes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1634
 testRunner.And("I should be able to pass value to Return Freight Charges Value field and format s" +
                    "hould be currency", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of DLSW Ref # field when Do you wi" +
            "sh to add freight charges is equal to \'Yes\' for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfDLSWRefFieldWhenDoYouWishToAddFreightChargesIsEqualToYesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of DLSW Ref # field when Do you wi" +
                    "sh to add freight charges is equal to \'Yes\' for external users", new string[] {
                        "Functional"});
#line 1637
this.ScenarioSetup(scenarioInfo);
#line 1638
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1639
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1640
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1641
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1642
 testRunner.Then("I should be able to view DLSW Ref # field when Do you wish to add freight charges" +
                    " is equal to \'Yes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1643
 testRunner.And("I should be able to pass a maximum of 20 alpha-numeric value to DLSW Ref # field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of DLSW Ref # field when Do you wi" +
            "sh to add freight charges is equal to \'Yes\' for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfDLSWRefFieldWhenDoYouWishToAddFreightChargesIsEqualToYesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of DLSW Ref # field when Do you wi" +
                    "sh to add freight charges is equal to \'Yes\' for internal users", new string[] {
                        "Functional"});
#line 1646
this.ScenarioSetup(scenarioInfo);
#line 1647
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1648
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1649
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1650
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1651
 testRunner.Then("I should be able to view DLSW Ref # field when Do you wish to add freight charges" +
                    " is equal to \'Yes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1652
 testRunner.And("I should be able to pass a maximum of 20 alpha-numeric value to DLSW Ref # field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 20 alpha-numeric characters to DLSW Ref # field whe" +
            "n Do you wish to add freight charges is equal to \'Yes\' for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan20Alpha_NumericCharactersToDLSWRefFieldWhenDoYouWishToAddFreightChargesIsEqualToYesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 20 alpha-numeric characters to DLSW Ref # field whe" +
                    "n Do you wish to add freight charges is equal to \'Yes\' for external users", new string[] {
                        "Functional"});
#line 1655
this.ScenarioSetup(scenarioInfo);
#line 1656
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1657
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1658
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1659
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1660
 testRunner.Then("I should be able to view DLSW Ref # field when Do you wish to add freight charges" +
                    " is equal to \'Yes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1661
 testRunner.And("I should not be able to pass more than 20 alpha-numeric value to DLSW Ref # field" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing more than 20 alpha-numeric characters to DLSW Ref # field whe" +
            "n Do you wish to add freight charges is equal to \'Yes\' for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingMoreThan20Alpha_NumericCharactersToDLSWRefFieldWhenDoYouWishToAddFreightChargesIsEqualToYesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing more than 20 alpha-numeric characters to DLSW Ref # field whe" +
                    "n Do you wish to add freight charges is equal to \'Yes\' for internal users", new string[] {
                        "Functional"});
#line 1664
this.ScenarioSetup(scenarioInfo);
#line 1665
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1666
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1667
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1668
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1669
 testRunner.Then("I should be able to view DLSW Ref # field when Do you wish to add freight charges" +
                    " is equal to \'Yes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1670
 testRunner.And("I should not be able to pass more than 20 alpha-numeric value to DLSW Ref # field" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Replacement Freight Charges opt" +
            "ion field when Do you wish to add freight charges is equal to \'Yes\' for external" +
            " users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfReplacementFreightChargesOptionFieldWhenDoYouWishToAddFreightChargesIsEqualToYesForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Replacement Freight Charges opt" +
                    "ion field when Do you wish to add freight charges is equal to \'Yes\' for external" +
                    " users", new string[] {
                        "Functional"});
#line 1673
this.ScenarioSetup(scenarioInfo);
#line 1674
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1675
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1676
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1677
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1678
 testRunner.Then("I should be able to view Replacement Freight Charges option field when Do you wis" +
                    "h to add freight charges is equal to \'Yes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1679
 testRunner.And("I should be able to select Replacement Freight Charges option field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Replacement Freight Charges opt" +
            "ion field when Do you wish to add freight charges is equal to \'Yes\' for internal" +
            " users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfReplacementFreightChargesOptionFieldWhenDoYouWishToAddFreightChargesIsEqualToYesForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Replacement Freight Charges opt" +
                    "ion field when Do you wish to add freight charges is equal to \'Yes\' for internal" +
                    " users", new string[] {
                        "Functional"});
#line 1682
this.ScenarioSetup(scenarioInfo);
#line 1683
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1684
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1685
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1686
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1687
 testRunner.Then("I should be able to view Replacement Freight Charges option field when Do you wis" +
                    "h to add freight charges is equal to \'Yes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1688
 testRunner.And("I should be able to select Replacement Freight Charges option field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Subtotal All Claim Value field " +
            "for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfSubtotalAllClaimValueFieldForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Subtotal All Claim Value field " +
                    "for external users", new string[] {
                        "Functional"});
#line 1691
this.ScenarioSetup(scenarioInfo);
#line 1692
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1693
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1694
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1695
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1696
 testRunner.Then("I should be able to view Subtotal All Claim Value field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1697
 testRunner.And("Subtotal All Claim Value field should display sum of Original Freight Charges+Ret" +
                    "urn Freight Charges+Replacement Freight Charges values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1698
 testRunner.And("Subtotal All Claim Value field format should be currency", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Subtotal All Claim Value field " +
            "for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfSubtotalAllClaimValueFieldForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Subtotal All Claim Value field " +
                    "for internal users", new string[] {
                        "Functional"});
#line 1701
this.ScenarioSetup(scenarioInfo);
#line 1702
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1703
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1704
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1705
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1706
 testRunner.Then("I should be able to view Subtotal All Claim Value field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1707
 testRunner.And("Subtotal All Claim Value field should display sum of Original Freight Charges+Ret" +
                    "urn Freight Charges+Replacement Freight Charges values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1708
 testRunner.And("Subtotal All Claim Value field format should be currency", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify all the required fields of claims details section when Do you wish" +
            " to add freight charges is equal to zero for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyAllTheRequiredFieldsOfClaimsDetailsSectionWhenDoYouWishToAddFreightChargesIsEqualToZeroForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify all the required fields of claims details section when Do you wish" +
                    " to add freight charges is equal to zero for external users", new string[] {
                        "Functional"});
#line 1711
this.ScenarioSetup(scenarioInfo);
#line 1712
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1713
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1714
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1715
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1716
 testRunner.Then("I choose \'Yes\' for Do you wish to add freight charges field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1717
 testRunner.And("I choose \'Yes\' for Articles Insured field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1718
 testRunner.And("I click on submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1719
 testRunner.Then("I should see the following fields getting highlighted -Insured Value Amount, Orig" +
                    "inal Freight Charges Value, Return Freight Charges Value, Replacement Freight Ch" +
                    "arges Value, Subtotal All Claim Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify all the required fields of claims details section when Do you wish" +
            " to add freight charges is equal to zero for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyAllTheRequiredFieldsOfClaimsDetailsSectionWhenDoYouWishToAddFreightChargesIsEqualToZeroForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify all the required fields of claims details section when Do you wish" +
                    " to add freight charges is equal to zero for internal users", new string[] {
                        "Functional"});
#line 1722
this.ScenarioSetup(scenarioInfo);
#line 1723
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1724
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1725
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1726
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1727
 testRunner.Then("I choose \'Yes\' for Do you wish to add freight charges field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1728
 testRunner.And("I choose \'Yes\' for Articles Insured field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1729
 testRunner.And("I click on submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1730
 testRunner.Then("I should see the following fields getting highlighted -Insured Value Amount, Orig" +
                    "inal Freight Charges Value, Return Freight Charges Value, Replacement Freight Ch" +
                    "arges Value, Subtotal All Claim Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Remarks field by passing a maxi" +
            "mum of 500 alpha-numeric, text, special characters to sign off section for exter" +
            "nal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfRemarksFieldByPassingAMaximumOf500Alpha_NumericTextSpecialCharactersToSignOffSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Remarks field by passing a maxi" +
                    "mum of 500 alpha-numeric, text, special characters to sign off section for exter" +
                    "nal users", new string[] {
                        "Functional"});
#line 1733
this.ScenarioSetup(scenarioInfo);
#line 1734
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1735
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1736
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1737
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1738
 testRunner.Then("I should be able to view remarks field on sign off section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1739
 testRunner.And("I should be able to pass a maximum of 500 alpha-numeric, text, special characters" +
                    " to sign off section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Remarks field by passing a maxi" +
            "mum of 500 alpha-numeric, text, special characters to sign off section for inter" +
            "nal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfRemarksFieldByPassingAMaximumOf500Alpha_NumericTextSpecialCharactersToSignOffSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Remarks field by passing a maxi" +
                    "mum of 500 alpha-numeric, text, special characters to sign off section for inter" +
                    "nal users", new string[] {
                        "Functional"});
#line 1742
this.ScenarioSetup(scenarioInfo);
#line 1743
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1744
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1745
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1746
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1747
 testRunner.Then("I should be able to view remarks field on sign off section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1748
 testRunner.And("I should be able to pass a maximum of 500 alpha-numeric, text, special characters" +
                    " to sign off section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing a more than 500 alpha-numeric, text, special characters to si" +
            "gn off section for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingAMoreThan500Alpha_NumericTextSpecialCharactersToSignOffSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing a more than 500 alpha-numeric, text, special characters to si" +
                    "gn off section for external users", new string[] {
                        "Functional"});
#line 1751
this.ScenarioSetup(scenarioInfo);
#line 1752
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1753
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1754
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1755
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1756
 testRunner.Then("I should not be able to pass more than 500 alpha-numeric, text, special character" +
                    "s to sign off section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Try passing a more than 500 alpha-numeric, text, special characters to si" +
            "gn off section for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_TryPassingAMoreThan500Alpha_NumericTextSpecialCharactersToSignOffSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Try passing a more than 500 alpha-numeric, text, special characters to si" +
                    "gn off section for internal users", new string[] {
                        "Functional"});
#line 1759
this.ScenarioSetup(scenarioInfo);
#line 1760
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1761
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1762
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1763
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1764
 testRunner.Then("I should not be able to pass more than 500 alpha-numeric, text, special character" +
                    "s to sign off section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify display of verbiage next to Remarks field label of sign off sectio" +
            "n for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyDisplayOfVerbiageNextToRemarksFieldLabelOfSignOffSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify display of verbiage next to Remarks field label of sign off sectio" +
                    "n for external users", new string[] {
                        "GUI"});
#line 1767
this.ScenarioSetup(scenarioInfo);
#line 1768
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1769
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1770
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1771
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1772
 testRunner.Then("I should be able to view a verbiage next to remarks field label stating - Please " +
                    "describe what prompted your claim. Try to be as detailed as possible.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify display of verbiage next to Remarks field label of sign off sectio" +
            "n for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyDisplayOfVerbiageNextToRemarksFieldLabelOfSignOffSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify display of verbiage next to Remarks field label of sign off sectio" +
                    "n for internal users", new string[] {
                        "GUI"});
#line 1775
this.ScenarioSetup(scenarioInfo);
#line 1776
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1777
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1778
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1779
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1780
 testRunner.Then("I should be able to view a verbiage next to remarks field label stating - Please " +
                    "describe what prompted your claim. Try to be as detailed as possible.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32056 - Verify the existence of Confirmation of accuracy check box in sign off se" +
            "ction for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        public virtual void _32056_VerifyTheExistenceOfConfirmationOfAccuracyCheckBoxInSignOffSectionForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32056 - Verify the existence of Confirmation of accuracy check box in sign off se" +
                    "ction for external users", new string[] {
                        "GUI",
                        "Sprint",
                        "79"});
#line 1783
this.ScenarioSetup(scenarioInfo);
#line 1784
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1785
 testRunner.When("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1786
 testRunner.Then("I should not be able to see Confirmation of accuracy check box in sign off sectio" +
                    "n", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32056 - Verify the existence of Confirmation of accuracy check box in sign off se" +
            "ction for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        public virtual void _32056_VerifyTheExistenceOfConfirmationOfAccuracyCheckBoxInSignOffSectionForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32056 - Verify the existence of Confirmation of accuracy check box in sign off se" +
                    "ction for internal users", new string[] {
                        "GUI",
                        "Sprint",
                        "79"});
#line 1790
this.ScenarioSetup(scenarioInfo);
#line 1791
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1792
 testRunner.When("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1793
 testRunner.Then("I should not be able to see Confirmation of accuracy check box in sign off sectio" +
                    "n", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32056 - Verify the existence of Signature level and field for external user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        public virtual void _32056_VerifyTheExistenceOfSignatureLevelAndFieldForExternalUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32056 - Verify the existence of Signature level and field for external user", new string[] {
                        "GUI",
                        "Sprint",
                        "79"});
#line 1796
this.ScenarioSetup(scenarioInfo);
#line 1797
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1798
 testRunner.When("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1799
 testRunner.Then("I should not be able to see Signature level and field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32056 - Verify the existence of Signature level and field for internal user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        public virtual void _32056_VerifyTheExistenceOfSignatureLevelAndFieldForInternalUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32056 - Verify the existence of Signature level and field for internal user", new string[] {
                        "GUI",
                        "Sprint",
                        "79"});
#line 1802
this.ScenarioSetup(scenarioInfo);
#line 1803
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1804
 testRunner.When("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1805
 testRunner.Then("I should not be able to see Signature level and field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32056 - Verify display of verbiage after the <Remarks> field for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        public virtual void _32056_VerifyDisplayOfVerbiageAfterTheRemarksFieldForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32056 - Verify display of verbiage after the <Remarks> field for external users", new string[] {
                        "GUI",
                        "Sprint",
                        "79"});
#line 1808
this.ScenarioSetup(scenarioInfo);
#line 1809
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1810
 testRunner.When("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1811
 testRunner.Then("I will be able to see the verbiage after the Remarks field and prior to the Submi" +
                    "t Claim button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32056 - Verify display of verbiage after the <Remarks> field for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("79")]
        public virtual void _32056_VerifyDisplayOfVerbiageAfterTheRemarksFieldForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32056 - Verify display of verbiage after the <Remarks> field for internal users", new string[] {
                        "GUI",
                        "Sprint",
                        "79"});
#line 1814
this.ScenarioSetup(scenarioInfo);
#line 1815
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1816
 testRunner.When("I am on the Submit A Claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1817
 testRunner.Then("I will be able to see the verbiage after the Remarks field and prior to the Submi" +
                    "t Claim button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of Submit claim button on Submit a claim page for ex" +
            "ternal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyTheExistenceOfSubmitClaimButtonOnSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of Submit claim button on Submit a claim page for ex" +
                    "ternal users", new string[] {
                        "GUI"});
#line 1821
this.ScenarioSetup(scenarioInfo);
#line 1822
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1823
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1824
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1825
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1826
 testRunner.Then("I should be able to view Submit Claim buttton on Submit a claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence of Submit claim button on Submit a claim page for in" +
            "ternal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyTheExistenceOfSubmitClaimButtonOnSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence of Submit claim button on Submit a claim page for in" +
                    "ternal users", new string[] {
                        "GUI"});
#line 1829
this.ScenarioSetup(scenarioInfo);
#line 1830
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1831
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1832
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1833
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1834
 testRunner.Then("I should be able to view Submit Claim buttton on Submit a claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify tool tip for Claim payable to information icon of Submit a claim p" +
            "age for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyToolTipForClaimPayableToInformationIconOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify tool tip for Claim payable to information icon of Submit a claim p" +
                    "age for external users", new string[] {
                        "GUI"});
#line 1837
this.ScenarioSetup(scenarioInfo);
#line 1838
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1839
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1840
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1841
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1842
 testRunner.When("I hover over the Claim Payable To Tool Tip/Information icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1843
 testRunner.Then("I will see the verbiage - If you are not the beneficial owner of the goods we may" +
                    " require proof of payment to the beneficial owner of the goods prior to payment " +
                    "of the claim to you.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify tool tip for Claim payable to information icon of Submit a claim p" +
            "age for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyToolTipForClaimPayableToInformationIconOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify tool tip for Claim payable to information icon of Submit a claim p" +
                    "age for internal users", new string[] {
                        "GUI"});
#line 1846
this.ScenarioSetup(scenarioInfo);
#line 1847
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1848
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1849
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1850
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1851
 testRunner.When("I hover over the Claim Payable To Tool Tip/Information icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1852
 testRunner.Then("I will see the verbiage - If you are not the beneficial owner of the goods we may" +
                    " require proof of payment to the beneficial owner of the goods prior to payment " +
                    "of the claim to you.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify tool tip for Freight Charges information icon of Submit a claim pa" +
            "ge for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyToolTipForFreightChargesInformationIconOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify tool tip for Freight Charges information icon of Submit a claim pa" +
                    "ge for external users", new string[] {
                        "GUI"});
#line 1855
this.ScenarioSetup(scenarioInfo);
#line 1856
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1857
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1858
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1859
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1860
 testRunner.When("I hover over the Freight Charges Tool Tip/Information icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1861
 testRunner.Then("I will see the verbiage - If shipment is not a total loss, freight charges will b" +
                    "e pro rated based on weight of the affected commodity.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify tool tip for Freight Charges information icon of Submit a claim pa" +
            "ge for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyToolTipForFreightChargesInformationIconOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify tool tip for Freight Charges information icon of Submit a claim pa" +
                    "ge for internal users", new string[] {
                        "GUI"});
#line 1864
this.ScenarioSetup(scenarioInfo);
#line 1865
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1866
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1867
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1868
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1869
 testRunner.When("I hover over the Freight Charges Tool Tip/Information icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1870
 testRunner.Then("I will see the verbiage - If shipment is not a total loss, freight charges will b" +
                    "e pro rated based on weight of the affected commodity.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the font size and font colour of Submit a claim page for external " +
            "users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39549_VerifyTheFontSizeAndFontColourOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the font size and font colour of Submit a claim page for external " +
                    "users", new string[] {
                        "GUI"});
#line 1873
this.ScenarioSetup(scenarioInfo);
#line 1874
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1875
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1876
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1877
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1878
 testRunner.Then("The font size will be 20,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1879
 testRunner.And("The font color will be black.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the font size and font colour of Submit a claim page for internal " +
            "users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("32314")]
        public virtual void _39549_VerifyTheFontSizeAndFontColourOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the font size and font colour of Submit a claim page for internal " +
                    "users", new string[] {
                        "GUI",
                        "32314"});
#line 1882
this.ScenarioSetup(scenarioInfo);
#line 1883
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1884
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1885
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1886
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1887
 testRunner.Then("The font size will be 20,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1888
 testRunner.And("The font color will be black.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32314 - Verify the font size of inline labels of Submit a claim page for external" +
            " users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("32314")]
        public virtual void _32314_VerifyTheFontSizeOfInlineLabelsOfSubmitAClaimPageForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32314 - Verify the font size of inline labels of Submit a claim page for external" +
                    " users", new string[] {
                        "GUI",
                        "32314"});
#line 1891
this.ScenarioSetup(scenarioInfo);
#line 1892
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1893
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1894
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1895
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1896
 testRunner.Then("The font size of inline labels should be 12px", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32314 - Verify the font size of inline labels of Submit a claim page for internal" +
            " users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("32314")]
        public virtual void _32314_VerifyTheFontSizeOfInlineLabelsOfSubmitAClaimPageForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32314 - Verify the font size of inline labels of Submit a claim page for internal" +
                    " users", new string[] {
                        "GUI",
                        "32314"});
#line 1899
this.ScenarioSetup(scenarioInfo);
#line 1900
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1901
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1902
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1903
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1904
 testRunner.Then("The font size of inline labels should be 12px", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Remove button when Add Another " +
            "Item hyperlink is clicked for external users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfRemoveButtonWhenAddAnotherItemHyperlinkIsClickedForExternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Remove button when Add Another " +
                    "Item hyperlink is clicked for external users", new string[] {
                        "GUI",
                        "Functional"});
#line 1907
this.ScenarioSetup(scenarioInfo);
#line 1908
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1909
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1910
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1911
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1912
 testRunner.When("I click on Add Another Item hyperlink", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1913
 testRunner.Then("I should be able to view a Remove button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39549 - Verify the existence and functionality of Remove button when Add Another " +
            "Item hyperlink is clicked for internal users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _39549_VerifyTheExistenceAndFunctionalityOfRemoveButtonWhenAddAnotherItemHyperlinkIsClickedForInternalUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39549 - Verify the existence and functionality of Remove button when Add Another " +
                    "Item hyperlink is clicked for internal users", new string[] {
                        "GUI",
                        "Functional"});
#line 1916
this.ScenarioSetup(scenarioInfo);
#line 1917
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1918
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1919
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1920
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1921
 testRunner.When("I click on Add Another Item hyperlink", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1922
 testRunner.Then("I should be able to view a Remove button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("53600_Verify 3 letter station reference in \"Enter DLSW Ref # to Start Process\" fi" +
            "eld when DLSW shipment reference number with lower case letters is entered")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("53600")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint88")]
        public virtual void _53600_Verify3LetterStationReferenceInEnterDLSWRefToStartProcessFieldWhenDLSWShipmentReferenceNumberWithLowerCaseLettersIsEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("53600_Verify 3 letter station reference in \"Enter DLSW Ref # to Start Process\" fi" +
                    "eld when DLSW shipment reference number with lower case letters is entered", new string[] {
                        "53600",
                        "Sprint88"});
#line 1926
this.ScenarioSetup(scenarioInfo);
#line 1927
 testRunner.Given("I am a DLS user who have access to Insurance Claims", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1928
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1929
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1930
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1931
 testRunner.And("I enter a valid DLSW shipment reference number (with station reference in lower c" +
                    "ase) in the Enter DLSW Ref # to Start Process field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1932
 testRunner.When("I Click on Populate Form button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1933
 testRunner.Then("the three letter station reference in the DLSW Ref # should be displayed in Upper" +
                    "case alphabets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("53600_Verify 3 letter station reference in the \"DLSW Ref #\" field when DLSW shipm" +
            "ent reference number with lower case letters is entered and tabbed out")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("53600")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint88")]
        public virtual void _53600_Verify3LetterStationReferenceInTheDLSWRefFieldWhenDLSWShipmentReferenceNumberWithLowerCaseLettersIsEnteredAndTabbedOut()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("53600_Verify 3 letter station reference in the \"DLSW Ref #\" field when DLSW shipm" +
                    "ent reference number with lower case letters is entered and tabbed out", new string[] {
                        "53600",
                        "Sprint88"});
#line 1936
this.ScenarioSetup(scenarioInfo);
#line 1937
 testRunner.Given("I am a DLS user who have access to Insurance Claims", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1938
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1939
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1940
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1941
 testRunner.And("I enter a valid DLSW shipment reference number (with station reference in lower c" +
                    "ase) in the DLSW Ref # field in Carrier Information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1942
 testRunner.When("I tab out of the DLSW Ref # field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1943
 testRunner.Then("the three letter station reference in the DLSW Ref # should be displayed in Upper" +
                    "case alphabets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("53600_Verify 3 letter station reference in the DLSW Ref # field when DLSW shipmen" +
            "t reference number with lower case letters is entered and clicked anywhere outsi" +
            "de the field")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("53600")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint88")]
        public virtual void _53600_Verify3LetterStationReferenceInTheDLSWRefFieldWhenDLSWShipmentReferenceNumberWithLowerCaseLettersIsEnteredAndClickedAnywhereOutsideTheField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("53600_Verify 3 letter station reference in the DLSW Ref # field when DLSW shipmen" +
                    "t reference number with lower case letters is entered and clicked anywhere outsi" +
                    "de the field", new string[] {
                        "53600",
                        "Sprint88"});
#line 1946
this.ScenarioSetup(scenarioInfo);
#line 1947
 testRunner.Given("I am a DLS user who have access to Insurance Claims", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1948
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1949
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1950
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1951
 testRunner.And("I enter a valid DLSW shipment reference number (with station reference in lower c" +
                    "ase) in the DLSW Ref # field in Carrier Information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1952
 testRunner.When("I click anywhere outside DLSW Ref # field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1953
 testRunner.Then("the three letter station reference in the DLSW Ref # should be displayed in Upper" +
                    "case alphabets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("53600_Verify that the # (pound) character doesn\'t display when user enters valid " +
            "data in Weight(LBS) field and moves out of that field")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("53600")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint88")]
        public virtual void _53600_VerifyThatThePoundCharacterDoesntDisplayWhenUserEntersValidDataInWeightLBSFieldAndMovesOutOfThatField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("53600_Verify that the # (pound) character doesn\'t display when user enters valid " +
                    "data in Weight(LBS) field and moves out of that field", new string[] {
                        "53600",
                        "Sprint88"});
#line 1956
this.ScenarioSetup(scenarioInfo);
#line 1957
 testRunner.Given("I am a DLS user who have access to Insurance Claims", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1958
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1959
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1960
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1961
 testRunner.And("I enter valid data in the Weight (LBS) in the Claim Details section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1962
 testRunner.When("I click anywhere outside Weight (LBS) field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1963
 testRunner.Then("the # character should not be displayed in the Weight (LBS) field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("53600_Verify that the # (pound) character doesn\'t display when user enters a vali" +
            "d data in Weight(LBS) field for an additional item and moves out of that field")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("53600")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint88")]
        public virtual void _53600_VerifyThatThePoundCharacterDoesntDisplayWhenUserEntersAValidDataInWeightLBSFieldForAnAdditionalItemAndMovesOutOfThatField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("53600_Verify that the # (pound) character doesn\'t display when user enters a vali" +
                    "d data in Weight(LBS) field for an additional item and moves out of that field", new string[] {
                        "53600",
                        "Sprint88"});
#line 1966
this.ScenarioSetup(scenarioInfo);
#line 1967
 testRunner.Given("I am a DLS user who have access to Insurance Claims", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1968
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1969
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1970
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1971
 testRunner.And("I Click on Add Another Item button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1972
 testRunner.And("I enter valid data in the Weight (LBS) in the Claim Details section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1973
 testRunner.When("I click anywhere outside Weight (LBS) field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1974
 testRunner.Then("the # character should not be displayed in the Weight (LBS) field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("53600_Verify 3 letter station reference in \"Enter DLSW Ref #\" to Start Process fi" +
            "eld when DLSW shipment reference number with upper case letters is entered")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("53600")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint88")]
        public virtual void _53600_Verify3LetterStationReferenceInEnterDLSWRefToStartProcessFieldWhenDLSWShipmentReferenceNumberWithUpperCaseLettersIsEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("53600_Verify 3 letter station reference in \"Enter DLSW Ref #\" to Start Process fi" +
                    "eld when DLSW shipment reference number with upper case letters is entered", new string[] {
                        "53600",
                        "Sprint88"});
#line 1978
this.ScenarioSetup(scenarioInfo);
#line 1979
 testRunner.Given("I am a DLS user who have access to Insurance Claims", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1980
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1981
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1982
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1983
 testRunner.And("I enter a valid DLSW shipment reference number (with station reference in upper c" +
                    "ase) in the Enter DLSW Ref # to Start Process field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1984
 testRunner.When("I Click on Populate Form button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1985
 testRunner.Then("the three letter station reference in the DLSW Ref # should be displayed in Upper" +
                    "case alphabets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("53600_Verify 3 letter station reference in the \"DLSW Ref #\" field when DLSW shipm" +
            "ent reference number with upper case letters is entered and clicked anywhere out" +
            "side the field")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("53600")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint88")]
        public virtual void _53600_Verify3LetterStationReferenceInTheDLSWRefFieldWhenDLSWShipmentReferenceNumberWithUpperCaseLettersIsEnteredAndClickedAnywhereOutsideTheField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("53600_Verify 3 letter station reference in the \"DLSW Ref #\" field when DLSW shipm" +
                    "ent reference number with upper case letters is entered and clicked anywhere out" +
                    "side the field", new string[] {
                        "53600",
                        "Sprint88"});
#line 1988
this.ScenarioSetup(scenarioInfo);
#line 1989
 testRunner.Given("I am a DLS user who have access to Insurance Claims", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1990
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1991
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1992
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1993
 testRunner.And("I enter a valid DLSW shipment reference number (with station reference in upper c" +
                    "ase) in the DLSW Ref # field in Carrier Information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1994
 testRunner.When("I click anywhere outside DLSW Ref # field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1995
 testRunner.Then("the three letter station reference in the DLSW Ref # should be displayed in Upper" +
                    "case alphabets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("53600_Verify that the # character doesn\'t display when the user enters a value wi" +
            "th # character in Weight (LBS) field and moves out of that field")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("53600")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint88")]
        public virtual void _53600_VerifyThatTheCharacterDoesntDisplayWhenTheUserEntersAValueWithCharacterInWeightLBSFieldAndMovesOutOfThatField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("53600_Verify that the # character doesn\'t display when the user enters a value wi" +
                    "th # character in Weight (LBS) field and moves out of that field", new string[] {
                        "53600",
                        "Sprint88"});
#line 1998
this.ScenarioSetup(scenarioInfo);
#line 1999
 testRunner.Given("I am a DLS user who have access to Insurance Claims", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2000
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2001
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2002
 testRunner.And("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2003
 testRunner.And("I enter weight value along with # character in the Weight (LBS) in the Claim Deta" +
                    "ils section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2004
 testRunner.When("I click anywhere outside Weight (LBS) field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2005
 testRunner.Then("the # character should be removed from the Weight (LBS) field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("111029 - Zero is displayed in Quantity field of Submit a claim page by default fo" +
            "r external user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("111029")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint93")]
        public virtual void _111029_ZeroIsDisplayedInQuantityFieldOfSubmitAClaimPageByDefaultForExternalUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("111029 - Zero is displayed in Quantity field of Submit a claim page by default fo" +
                    "r external user", new string[] {
                        "111029",
                        "Sprint93"});
#line 2008
this.ScenarioSetup(scenarioInfo);
#line 2009
 testRunner.Given("I am an external user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2010
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2011
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2012
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2013
 testRunner.Then("Quantity Field Should be Empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("111029 - Zero is displayed in Quantity field of Submit a claim page by default fo" +
            "r internal user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("111029")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint93")]
        public virtual void _111029_ZeroIsDisplayedInQuantityFieldOfSubmitAClaimPageByDefaultForInternalUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("111029 - Zero is displayed in Quantity field of Submit a claim page by default fo" +
                    "r internal user", new string[] {
                        "111029",
                        "Sprint93"});
#line 2016
this.ScenarioSetup(scenarioInfo);
#line 2017
 testRunner.Given("I am an internal user who have access to the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2018
 testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2019
 testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2020
 testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2021
 testRunner.Then("Quantity Field Should be Empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void _107648VerifyThePresenceOfNewFieldCustomerClaimRefAlpha_NumericTextSpecialCharactersMaxLength20InSubmitAClaimPage(string userType, string userName, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Sprint94",
                    "107648"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("107648 Verify the presence of new field Customer Claim Ref # (alpha-numeric, text" +
                    ", special characters, max length 20) in Submit a Claim page", @__tags);
#line 2024
this.ScenarioSetup(scenarioInfo);
#line 2025
testRunner.Given(string.Format("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                        "Management, Operations, Station Owner user or claims Specialist User {0},{1},{2}" +
                        "", userType, userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2026
testRunner.And("I click on Insurance claim icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2027
testRunner.And("I click on Submit a claim button on claim list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2028
testRunner.When("I arrive on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2029
testRunner.Then("I will see a new optional field Customer Claim Ref # (editable,alpha-numeric, tex" +
                    "t, special characters, max length 20)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("107648 Verify the presence of new field Customer Claim Ref # (alpha-numeric, text" +
            ", special characters, max length 20) in Submit a Claim page: Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint94")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("107648")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "username-CurrentSprintOperations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "password-CurrentSprintOperations")]
        public virtual void _107648VerifyThePresenceOfNewFieldCustomerClaimRefAlpha_NumericTextSpecialCharactersMaxLength20InSubmitAClaimPage_Internal()
        {
#line 2024
this._107648VerifyThePresenceOfNewFieldCustomerClaimRefAlpha_NumericTextSpecialCharactersMaxLength20InSubmitAClaimPage("Internal", "username-CurrentSprintOperations", "password-CurrentSprintOperations", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("107648 Verify the presence of new field Customer Claim Ref # (alpha-numeric, text" +
            ", special characters, max length 20) in Submit a Claim page: Sales")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint94")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("107648")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sales")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "Sales")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "username-CurrentSprintSales")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "password-CurrentSprintSales")]
        public virtual void _107648VerifyThePresenceOfNewFieldCustomerClaimRefAlpha_NumericTextSpecialCharactersMaxLength20InSubmitAClaimPage_Sales()
        {
#line 2024
this._107648VerifyThePresenceOfNewFieldCustomerClaimRefAlpha_NumericTextSpecialCharactersMaxLength20InSubmitAClaimPage("Sales", "username-CurrentSprintSales", "password-CurrentSprintSales", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("107648 Verify the presence of new field Customer Claim Ref # (alpha-numeric, text" +
            ", special characters, max length 20) in Submit a Claim page: Claimspecialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint94")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("107648")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Claimspecialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "Claimspecialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "username-CurrentsprintClaimspecialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "password-CurrentsprintClaimspecialist")]
        public virtual void _107648VerifyThePresenceOfNewFieldCustomerClaimRefAlpha_NumericTextSpecialCharactersMaxLength20InSubmitAClaimPage_Claimspecialist()
        {
#line 2024
this._107648VerifyThePresenceOfNewFieldCustomerClaimRefAlpha_NumericTextSpecialCharactersMaxLength20InSubmitAClaimPage("Claimspecialist", "username-CurrentsprintClaimspecialist", "password-CurrentsprintClaimspecialist", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("107648 Verify the presence of new field Customer Claim Ref # (alpha-numeric, text" +
            ", special characters, max length 20) in Submit a Claim page: External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims_Submit a Claim Page Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint78")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint94")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("107648")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "username-CurrentSprintshpentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "password-CurrentSprintshpentry")]
        public virtual void _107648VerifyThePresenceOfNewFieldCustomerClaimRefAlpha_NumericTextSpecialCharactersMaxLength20InSubmitAClaimPage_External()
        {
#line 2024
this._107648VerifyThePresenceOfNewFieldCustomerClaimRefAlpha_NumericTextSpecialCharactersMaxLength20InSubmitAClaimPage("External", "username-CurrentSprintshpentry", "password-CurrentSprintshpentry", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion

