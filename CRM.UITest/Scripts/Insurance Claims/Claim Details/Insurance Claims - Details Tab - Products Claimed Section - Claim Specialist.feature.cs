// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.InsuranceClaims.ClaimDetails
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class InsuranceClaims_DetailsTab_ProductsClaimedSection_ClaimSpecialistFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Insurance Claims - Details Tab - Products Claimed Section - Claim Specialist.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Insurance Claims - Details Tab - Products Claimed Section - Claim Specialist", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint82",
                        "43147"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Insurance Claims - Details Tab - Products Claimed Section - Claim Specialist")))
            {
                global::CRM.UITest.Scripts.InsuranceClaims.ClaimDetails.InsuranceClaims_DetailsTab_ProductsClaimedSection_ClaimSpecialistFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("43147 - Verify the edit functionality in the Claim Details Page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Details Tab - Products Claimed Section - Claim Specialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint82")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("43147")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _43147_VerifyTheEditFunctionalityInTheClaimDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("43147 - Verify the edit functionality in the Claim Details Page", new string[] {
                        "GUI"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("I am a Claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.When("I am on the Claim Details Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.Then("I can edit Claim Type,Articles Type,Item/Model,Unit Value,Quantity,Weight,Descrip" +
                    "tion of Claimed Articles,Total Shipment Weight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 9
 testRunner.And("I will see the Add Another Item hyper link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("43147 - Verify the validations for editable fields in the Claim Details Page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Details Tab - Products Claimed Section - Claim Specialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint82")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("43147")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _43147_VerifyTheValidationsForEditableFieldsInTheClaimDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("43147 - Verify the validations for editable fields in the Claim Details Page", new string[] {
                        "GUI"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given("I am a Claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.When("I am on the Claim Details Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then("Claim Type is required, select either Shortage or Damage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
 testRunner.And("Articles Type is required, select either Used or New", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
    testRunner.And("Item/Model is required, alpha-numeric, text, special characters, max length 50", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("Unit Value is required, currency,allow up to 2 decimal places and always display " +
                    "2 decimal places, auto fill $ and 2 decimal places", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
    testRunner.And("Quantity is required, numeric only,max length 4,format with comma when greater th" +
                    "an 3 digits", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
    testRunner.And("Weight is required, numeric only,max length 6,format with comma when greater than" +
                    " 3 digits", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
    testRunner.And("Description of Claimed Articles is required, alpha-numeric, text, special charact" +
                    "ers, max length 250", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
    testRunner.And("Total Shipment Weight is required, numeric only, max length 6,format with comma w" +
                    "hen greater than 3 digits", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("43147 - Verify the add Another Item hyper link functionality in the Claim Details" +
            " Page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Details Tab - Products Claimed Section - Claim Specialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint82")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("43147")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _43147_VerifyTheAddAnotherItemHyperLinkFunctionalityInTheClaimDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("43147 - Verify the add Another Item hyper link functionality in the Claim Details" +
                    " Page", new string[] {
                        "GUI",
                        "Functional"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
 testRunner.Given("I am a Claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
 testRunner.When("I am on the Claim Details Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.When("I click on the Add Another Item hyper link in the Products Claimed section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then("I will be displayed the Claim Type,Articles Type,Item/Model,Unit Value,Quantity,W" +
                    "eight,Description of Claimed Articles,Total Shipment Weight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 30
 testRunner.And("I should be displayed with remove button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And("Articles Type is required, select either Used or New", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
    testRunner.And("Item/Model is required, alpha-numeric, text, special characters, max length 50", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And("Unit Value is required, currency,allow up to 2 decimal places and always display " +
                    "2 decimal places, auto fill $ and 2 decimal places", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
    testRunner.And("Quantity is required, numeric only,max length 4,format with comma when greater th" +
                    "an 3 digits", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
    testRunner.And("Weight is required, numeric only,max length 6,format with comma when greater than" +
                    " 3 digits", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
    testRunner.And("Description of Claimed Articles is required, alpha-numeric, text, special charact" +
                    "ers, max length 250", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
   testRunner.And("Total Shipment Weight is required, numeric only, max length 6,format with comma w" +
                    "hen greater than 3 digits", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("43147 - Verify the remove button functionality in the Claim Details Page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Details Tab - Products Claimed Section - Claim Specialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint82")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("43147")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _43147_VerifyTheRemoveButtonFunctionalityInTheClaimDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("43147 - Verify the remove button functionality in the Claim Details Page", new string[] {
                        "GUI",
                        "Functional"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
 testRunner.Given("I am a Claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.And("I am on the Claim Details Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I have Another additional Item details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.When("I click on the remove button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.Then("additional Products Claimed section will be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("43147 - Verify the updated Ttl Pcs,Ttl Wt,Ttl Val functionlity for the edited ite" +
            "m values in the Claim Details Page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Details Tab - Products Claimed Section - Claim Specialist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint82")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("43147")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _43147_VerifyTheUpdatedTtlPcsTtlWtTtlValFunctionlityForTheEditedItemValuesInTheClaimDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("43147 - Verify the updated Ttl Pcs,Ttl Wt,Ttl Val functionlity for the edited ite" +
                    "m values in the Claim Details Page", new string[] {
                        "GUI",
                        "Functional"});
#line 48
this.ScenarioSetup(scenarioInfo);
#line 49
 testRunner.Given("I am a Claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 50
 testRunner.And("I am on the Claim Details Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.When("I have Another additional Item details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
    testRunner.Then("Ttl Pcs field will update to display the sum of the Qty of all of the displayed p" +
                    "roducts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
    testRunner.And("Ttl Wt field will update to display the sum of the Ext Wt of all of the displayed" +
                    " products", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
    testRunner.And("Ttl Val field will update to display the sum of the Ext Val of all of the display" +
                    "ed products", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
