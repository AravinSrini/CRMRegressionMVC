// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.InsuranceClaims.ClaimDetails
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class InsuranceClaimsDetailsTab_FrtCalcSectionEditingFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "InsuranceClaimsDetailsTab_FrtCalcSectionEditing.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "InsuranceClaimsDetailsTab_FrtCalcSectionEditing", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint83",
                        "40066"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "InsuranceClaimsDetailsTab_FrtCalcSectionEditing")))
            {
                global::CRM.UITest.Scripts.InsuranceClaims.ClaimDetails.InsuranceClaimsDetailsTab_FrtCalcSectionEditingFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsEditableWhenItsCorrespondingFreightTypeIsFlaggedToYes(string type, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40066 Verify Original,Return,Replacement Freight Calculations section is editable" +
                    " when its Corresponding Freight Type is Flagged to Yes", @__tags);
#line 5
 this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("I am Claims Specialist User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("I on the clicked any dlsw claim reference hyper link on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And("I am on the Claim Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.When(string.Format("the Claimable field is Y for any of the Freight{0}", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then(string.Format("the Claimed Freight will be editable as for each Freight{0} as Optional, currency" +
                        " formatted, always display 2 decimal places, always display <$> before the value" +
                        " - $xx,xxx.xx", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.And(string.Format("the Carrier Charges to DLSW will be editable for each Freight{0} as Optional, cur" +
                        "rency formatted, always display 2 decimal places, always display <$> before the " +
                        "value - $xx,xxx.xx", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And(string.Format("the Charges to Cust will be editable for each Freight{0} as Optional, currency fo" +
                        "rmatted, always display 2 decimal places, always display <$> before the value - " +
                        "$xx,xxx.xx", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And(string.Format("the DLSW Ref # will be editable for each Freight{0} as Optional, alpha-numeric, t" +
                        "ext, max length 20 characters", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40066 Verify Original,Return,Replacement Freight Calculations section is editable" +
            " when its Corresponding Freight Type is Flagged to Yes: Original")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "InsuranceClaimsDetailsTab_FrtCalcSectionEditing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40066")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Original")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Type", "Original")]
        public virtual void _40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsEditableWhenItsCorrespondingFreightTypeIsFlaggedToYes_Original()
        {
#line 5
 this._40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsEditableWhenItsCorrespondingFreightTypeIsFlaggedToYes("Original", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40066 Verify Original,Return,Replacement Freight Calculations section is editable" +
            " when its Corresponding Freight Type is Flagged to Yes: Return")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "InsuranceClaimsDetailsTab_FrtCalcSectionEditing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40066")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Return")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Type", "Return")]
        public virtual void _40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsEditableWhenItsCorrespondingFreightTypeIsFlaggedToYes_Return()
        {
#line 5
 this._40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsEditableWhenItsCorrespondingFreightTypeIsFlaggedToYes("Return", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40066 Verify Original,Return,Replacement Freight Calculations section is editable" +
            " when its Corresponding Freight Type is Flagged to Yes: Replacement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "InsuranceClaimsDetailsTab_FrtCalcSectionEditing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40066")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Replacement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Type", "Replacement")]
        public virtual void _40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsEditableWhenItsCorrespondingFreightTypeIsFlaggedToYes_Replacement()
        {
#line 5
 this._40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsEditableWhenItsCorrespondingFreightTypeIsFlaggedToYes("Replacement", ((string[])(null)));
#line hidden
        }
        
        public virtual void _40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsNon_EditableWhenItsCorrespondingFreightTypeIsFlaggedToNo(string type, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40066 Verify Original,Return,Replacement Freight Calculations section is Non-edit" +
                    "able when its Corresponding Freight Type is Flagged to No", @__tags);
#line 21
 this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("I am Claims Specialist User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 23
 testRunner.And("I on the clicked any dlsw claim reference hyper link on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("I am on the Claim Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.When(string.Format("the Claimable field is N for any of the FreightTypes{0}", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.Then(string.Format("the Claimed Freight field be Non-editable for each Freight{0}", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
 testRunner.And(string.Format("the Carrier Charges to DLSW field will be Non-editable for each Freight{0}", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And(string.Format("the DLSW Charges to Cust field will be Non-editable for each Freight{0}", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And(string.Format("the DLSW Ref # field will be Non-editable for each Freight{0}", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40066 Verify Original,Return,Replacement Freight Calculations section is Non-edit" +
            "able when its Corresponding Freight Type is Flagged to No: Original")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "InsuranceClaimsDetailsTab_FrtCalcSectionEditing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40066")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Original")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Type", "Original")]
        public virtual void _40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsNon_EditableWhenItsCorrespondingFreightTypeIsFlaggedToNo_Original()
        {
#line 21
 this._40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsNon_EditableWhenItsCorrespondingFreightTypeIsFlaggedToNo("Original", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40066 Verify Original,Return,Replacement Freight Calculations section is Non-edit" +
            "able when its Corresponding Freight Type is Flagged to No: Return")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "InsuranceClaimsDetailsTab_FrtCalcSectionEditing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40066")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Return")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Type", "Return")]
        public virtual void _40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsNon_EditableWhenItsCorrespondingFreightTypeIsFlaggedToNo_Return()
        {
#line 21
 this._40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsNon_EditableWhenItsCorrespondingFreightTypeIsFlaggedToNo("Return", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40066 Verify Original,Return,Replacement Freight Calculations section is Non-edit" +
            "able when its Corresponding Freight Type is Flagged to No: Replacement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "InsuranceClaimsDetailsTab_FrtCalcSectionEditing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40066")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Replacement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Type", "Replacement")]
        public virtual void _40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsNon_EditableWhenItsCorrespondingFreightTypeIsFlaggedToNo_Replacement()
        {
#line 21
 this._40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsNon_EditableWhenItsCorrespondingFreightTypeIsFlaggedToNo("Replacement", ((string[])(null)));
#line hidden
        }
        
        public virtual void _40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsNon_EditableForTheNonClaimSpecialistUsers(string type, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40066 Verify Original,Return,Replacement Freight Calculations section is Non-edit" +
                    "able for the Non Claim Specialist Users", @__tags);
#line 39
 this.ScenarioSetup(scenarioInfo);
#line 40
 testRunner.Given("I am Non Claims Specialist User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
 testRunner.And("I on the clicked any dlsw claim reference hyper link on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.When("I am on the Claim Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
 testRunner.Then(string.Format("the Claimable Freight Type will be Non-editable for each Freight{0}", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 44
 testRunner.And(string.Format("the Claimed Freight field be Non-editable for each Freight{0}", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.And(string.Format("the Carrier Charges to DLSW field will be Non-editable for each Freight{0}", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.And(string.Format("the DLSW Charges to Cust field will be Non-editable for each Freight{0}", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And(string.Format("the DLSW Ref # field will be Non-editable for each Freight{0}", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40066 Verify Original,Return,Replacement Freight Calculations section is Non-edit" +
            "able for the Non Claim Specialist Users: Original")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "InsuranceClaimsDetailsTab_FrtCalcSectionEditing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40066")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Original")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Type", "Original")]
        public virtual void _40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsNon_EditableForTheNonClaimSpecialistUsers_Original()
        {
#line 39
 this._40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsNon_EditableForTheNonClaimSpecialistUsers("Original", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40066 Verify Original,Return,Replacement Freight Calculations section is Non-edit" +
            "able for the Non Claim Specialist Users: Return")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "InsuranceClaimsDetailsTab_FrtCalcSectionEditing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40066")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Return")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Type", "Return")]
        public virtual void _40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsNon_EditableForTheNonClaimSpecialistUsers_Return()
        {
#line 39
 this._40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsNon_EditableForTheNonClaimSpecialistUsers("Return", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40066 Verify Original,Return,Replacement Freight Calculations section is Non-edit" +
            "able for the Non Claim Specialist Users: Replacement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "InsuranceClaimsDetailsTab_FrtCalcSectionEditing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40066")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Replacement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Type", "Replacement")]
        public virtual void _40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsNon_EditableForTheNonClaimSpecialistUsers_Replacement()
        {
#line 39
 this._40066VerifyOriginalReturnReplacementFreightCalculationsSectionIsNon_EditableForTheNonClaimSpecialistUsers("Replacement", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
