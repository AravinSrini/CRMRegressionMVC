// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.InsuranceClaims.ClaimDetails
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _40366_InsuranceClaims_DocumentsTab_AddFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "40366 - Insurance Claims - Documents Tab - Add.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "40366 - Insurance Claims - Documents Tab - Add", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint84",
                        "40366"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "40366 - Insurance Claims - Documents Tab - Add")))
            {
                global::CRM.UITest.Scripts.InsuranceClaims.ClaimDetails._40366_InsuranceClaims_DocumentsTab_AddFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40366-Verify the display and behaviour of the Add Additional Document button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "40366 - Insurance Claims - Documents Tab - Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint84")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40366")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _40366_VerifyTheDisplayAndBehaviourOfTheAddAdditionalDocumentButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40366-Verify the display and behaviour of the Add Additional Document button", new string[] {
                        "GUI"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
          testRunner.Given("I am a Claims Specialist User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
          testRunner.And("I clicked on the hyperlink of any displayed claim on the Claim list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
          testRunner.And("I arrive on the Claim Details page of the selected claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
          testRunner.And("I clicked on the Document Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
    testRunner.When("I click on the Add Additional Document button on the Document tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
    testRunner.Then("I will see a Document Type drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 13
    testRunner.And("the default selection in the drop down list will be <Select document type...>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
          testRunner.And("I will see an inactive document upload icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
          testRunner.And("I will see the verbiage <No file currently uploaded> next to the document upload " +
                    "icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
          testRunner.And("I will see a Remove button for the Additional Document Type section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
          testRunner.And("I will see an Add Additional Document button on the Document Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40366-Verify the Document Type drop down list values and order of the list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "40366 - Insurance Claims - Documents Tab - Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint84")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40366")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _40366_VerifyTheDocumentTypeDropDownListValuesAndOrderOfTheList()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40366-Verify the Document Type drop down list values and order of the list", new string[] {
                        "GUI"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
          testRunner.Given("I am a Claims Specialist User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
          testRunner.And("I clicked on the hyperlink of any displayed claim on the Claim list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
          testRunner.And("I arrive on the Claim Details page of the selected claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
          testRunner.And("I clicked on the Document Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
    testRunner.And("I clicked on the Add Additional Document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
    testRunner.When("I click in the Document Type drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
    testRunner.Then(@"I will see list of Document types <""Complete Vendor Invoice"", ""Airway Bill"", ""Bill of Lading"", ""Claimant's Form W-9"", ""Concealed Damage Notification"", ""Customs Document"", ""Delivery Receipt"", ""Inspection Report"", ""Ocean Bill of Lading"", ""Packing List"", ""Pictures - On Receipt"", ""Pictures - Prior to Shipment"", ""Repair Invoice"", ""Other"">", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 28
    testRunner.And("<Complete Vendor Invoice> will be displayed first in the list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
    testRunner.And("<Other> will be displayed last in the list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
    testRunner.And("all other documents will displayed alphabetically after <Complete Vendor Invoice>" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
    testRunner.And("the document list is configurable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40366-Verify the behaviour of the upload icon when I select the Document Type fro" +
            "m the drop down list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "40366 - Insurance Claims - Documents Tab - Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint84")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40366")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _40366_VerifyTheBehaviourOfTheUploadIconWhenISelectTheDocumentTypeFromTheDropDownList()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40366-Verify the behaviour of the upload icon when I select the Document Type fro" +
                    "m the drop down list", new string[] {
                        "GUI"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 35
          testRunner.Given("I am a Claims Specialist User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
          testRunner.And("I clicked on the hyperlink of any displayed claim on the Claim list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
          testRunner.And("I arrive on the Claim Details page of the selected claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
          testRunner.And("I clicked on the Document Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
    testRunner.And("I clicked on the Add Additional Document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
    testRunner.When("I choose a document type from the document type drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
    testRunner.Then("the document upload icon should be active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40366-Verify the Acceptable file type validation while uploading a document")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "40366 - Insurance Claims - Documents Tab - Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint84")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40366")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _40366_VerifyTheAcceptableFileTypeValidationWhileUploadingADocument()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40366-Verify the Acceptable file type validation while uploading a document", new string[] {
                        "GUI"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
          testRunner.Given("I am a Claims Specialist User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
          testRunner.And("I clicked on the hyperlink of any displayed claim on the Claim list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
          testRunner.And("I arrive on the Claim Details page of the selected claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
          testRunner.And("I clicked on the Document Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
    testRunner.And("I have selected a valid document to upload <.doc, .docx, .xls, .xlsx, .ppt, .pptx" +
                    ", .pdf, .txt, .tif, .jpg, .png> from Add Additional Document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
    testRunner.When("I close the search dialogue box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
    testRunner.Then("the selected file must pass the Acceptable file type validation", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40366-Verify the Document display on Document Tab when it passes the Acceptable f" +
            "ile type validation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "40366 - Insurance Claims - Documents Tab - Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint84")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40366")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _40366_VerifyTheDocumentDisplayOnDocumentTabWhenItPassesTheAcceptableFileTypeValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40366-Verify the Document display on Document Tab when it passes the Acceptable f" +
                    "ile type validation", new string[] {
                        "GUI"});
#line 56
this.ScenarioSetup(scenarioInfo);
#line 57
          testRunner.Given("I am a Claims Specialist User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
          testRunner.And("I clicked on the hyperlink of any displayed claim on the Claim list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
          testRunner.And("I arrive on the Claim Details page of the selected claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
          testRunner.And("I clicked on the Document Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
    testRunner.And("I clicked on the Add Additional Document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
    testRunner.And("I selected a document type from the drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
    testRunner.And("I clicked on the file upload icon to select a valid document to upload", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
    testRunner.When("the document passes the Acceptable file type and size validation", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
    testRunner.Then("I should see uploaded document displayed on the Document Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40366-Verify the message displayed when the document selected is not an acceptabl" +
            "e type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "40366 - Insurance Claims - Documents Tab - Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint84")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40366")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _40366_VerifyTheMessageDisplayedWhenTheDocumentSelectedIsNotAnAcceptableType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40366-Verify the message displayed when the document selected is not an acceptabl" +
                    "e type", new string[] {
                        "GUI"});
#line 69
this.ScenarioSetup(scenarioInfo);
#line 70
          testRunner.Given("I am a Claims Specialist User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 71
          testRunner.And("I clicked on the hyperlink of any displayed claim on the Claim list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
          testRunner.And("I arrive on the Claim Details page of the selected claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
          testRunner.And("I clicked on the Document Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
    testRunner.And("I clicked on the Add Additional Document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
    testRunner.And("I selected a document type from the drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
    testRunner.And("I clicked on the file upload icon to select a invalid document to upload", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
    testRunner.And("I closed the search dialogue box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
    testRunner.When("the document selected is not an acceptable type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
    testRunner.Then("I will see a message : <The selected file type is not allowed.  Please select an " +
                    "approved file type.>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 80
    testRunner.And("the document will not be displayed on the Document Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40366-Verify the message displayed when the document selected is greater than 10M" +
            "B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "40366 - Insurance Claims - Documents Tab - Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint84")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40366")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _40366_VerifyTheMessageDisplayedWhenTheDocumentSelectedIsGreaterThan10MB()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40366-Verify the message displayed when the document selected is greater than 10M" +
                    "B", new string[] {
                        "GUI"});
#line 83
this.ScenarioSetup(scenarioInfo);
#line 84
          testRunner.Given("I am a Claims Specialist User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 85
          testRunner.And("I clicked on the hyperlink of any displayed claim on the Claim list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
          testRunner.And("I arrive on the Claim Details page of the selected claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
          testRunner.And("I clicked on the Document Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
    testRunner.And("I clicked on the Add Additional Document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
    testRunner.And("I selected a document type from the drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
    testRunner.And("I clicked on the file upload icon to select a file greater than tenMB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
    testRunner.And("I closed the search dialogue box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
    testRunner.When("the document selected size is greater than 10MB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 93
    testRunner.Then("I will see a message as <The selected file size exceeds 10MB. Please attach a fil" +
                    "e that is less than 10MB.>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 94
    testRunner.And("the document will not be displayed on the Document Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40366-Verify the behaviour of the Remove button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "40366 - Insurance Claims - Documents Tab - Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint84")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40366")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _40366_VerifyTheBehaviourOfTheRemoveButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40366-Verify the behaviour of the Remove button", new string[] {
                        "GUI",
                        "Ignore"});
#line 97
this.ScenarioSetup(scenarioInfo);
#line 98
          testRunner.Given("I am a Claims Specialist User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 99
          testRunner.And("I clicked on the hyperlink of any displayed claim on the Claim list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
          testRunner.And("I arrive on the Claim Details page of the selected claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
          testRunner.And("I clicked on the Document Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
    testRunner.And("I clicked on the Add Additional Document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
    testRunner.When("I click on the Remove button for the Additional Document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
    testRunner.Then("the additional Document Type section should be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40366-Verify the non existance of Remove button for station users")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "40366 - Insurance Claims - Documents Tab - Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint84")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40366")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _40366_VerifyTheNonExistanceOfRemoveButtonForStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40366-Verify the non existance of Remove button for station users", new string[] {
                        "GUI"});
#line 107
this.ScenarioSetup(scenarioInfo);
#line 108
          testRunner.Given("I am a sales, sales management, operations, or station owner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 109
    testRunner.And("I clicked on the hyperlink of any displayed claim on the Claim list for station u" +
                    "sers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
          testRunner.And("I arrive on the Claim Details page of the selected claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
          testRunner.When("I click on the Document tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
          testRunner.Then("I should not see the Remove button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40366-Verify the non existance of Add Additional Document button for station user" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "40366 - Insurance Claims - Documents Tab - Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint84")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40366")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _40366_VerifyTheNonExistanceOfAddAdditionalDocumentButtonForStationUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40366-Verify the non existance of Add Additional Document button for station user" +
                    "s", new string[] {
                        "GUI"});
#line 115
this.ScenarioSetup(scenarioInfo);
#line 116
          testRunner.Given("I am a sales, sales management, operations, or station owner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 117
          testRunner.And("I clicked on the hyperlink of any displayed claim on the Claim list for station u" +
                    "sers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
          testRunner.And("I arrive on the Claim Details page of the selected claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
          testRunner.When("I click on the Document tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 120
          testRunner.Then("I should not see the Add Additional Document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
