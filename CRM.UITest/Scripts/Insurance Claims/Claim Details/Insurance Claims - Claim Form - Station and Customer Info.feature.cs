// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.InsuranceClaims.ClaimDetails
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class InsuranceClaims_ClaimForm_StationAndCustomerInfoFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Insurance Claims - Claim Form - Station and Customer Info.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Insurance Claims - Claim Form - Station and Customer Info", null, ProgrammingLanguage.CSharp, new string[] {
                        "39278",
                        "Sprint82"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Insurance Claims - Claim Form - Station and Customer Info")))
            {
                global::CRM.UITest.Scripts.InsuranceClaims.ClaimDetails.InsuranceClaims_ClaimForm_StationAndCustomerInfoFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39278_Verify the Station and Customer are the required fields on the Claim form p" +
            "age")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claim Form - Station and Customer Info")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39278")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint82")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39278_VerifyTheStationAndCustomerAreTheRequiredFieldsOnTheClaimFormPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39278_Verify the Station and Customer are the required fields on the Claim form p" +
                    "age", new string[] {
                        "GUI"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
   testRunner.Given("I am a Sales, Sales Management, Operations, Station Owner, or Claims Specialist u" +
                    "ser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
   testRunner.When("I arrive on the Insurance Claim - Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
   testRunner.Then("I should see Station and Customer drop down fields beneath the Enter DLSW Ref# to" +
                    " Start Process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
   testRunner.And("Station and Customer drop down fields should be the required fields", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void _39278_VerifyTheEditableAndAutoPopulationFunctionalityOfTheStationAndCustomerFieldsAfterClickOnThePopulateFormButton(string dLSWBOLNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39278_Verify the editable and auto population functionality of the station and Cu" +
                    "stomer fields after click on the Populate Form button", @__tags);
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
  testRunner.Given("I am a Sales, Sales Management, Operations, Station Owner, or Claims Specialist u" +
                    "ser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
  testRunner.And("I am on the Insurance Claim - Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
  testRunner.And(string.Format("I entered valid DLSW Ref Number {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
  testRunner.And("Click on the Populate Form button on the Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
  testRunner.When(string.Format("I receive the data for the submitted DLSW reference number from MG {0}", dLSWBOLNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
  testRunner.Then("the Station and Customer field should be auto populated with the Station and Cust" +
                    "omer associated with the DLSW Ref#", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 21
  testRunner.And("I should not be able to edit the Station and Customer fields", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39278_Verify the editable and auto population functionality of the station and Cu" +
            "stomer fields after click on the Populate Form button: ZZX00208760")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claim Form - Station and Customer Info")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39278")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint82")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZX00208760")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DLSWBOLNumber", "ZZX00208760")]
        public virtual void _39278_VerifyTheEditableAndAutoPopulationFunctionalityOfTheStationAndCustomerFieldsAfterClickOnThePopulateFormButton_ZZX00208760()
        {
#line 14
this._39278_VerifyTheEditableAndAutoPopulationFunctionalityOfTheStationAndCustomerFieldsAfterClickOnThePopulateFormButton("ZZX00208760", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39278_Verify the list of stations associated to logged in user on the Submit a Cl" +
            "aim page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claim Form - Station and Customer Info")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39278")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint82")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39278_VerifyTheListOfStationsAssociatedToLoggedInUserOnTheSubmitAClaimPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39278_Verify the list of stations associated to logged in user on the Submit a Cl" +
                    "aim page", new string[] {
                        "GUI"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
    testRunner.Given("I am a Sales, Sales Management, Operations, Station Owner, or Claims Specialist u" +
                    "ser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
 testRunner.And("I am on the Insurance Claim - Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.When("I Click on the Station drop down field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.Then("I should see only list of Stations to which user is associated to", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
 testRunner.And("the stations should be listed first in numerical then in alphabetical order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39278_Verify the list of Customers associated to logged in user on the Submit a C" +
            "laim page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claim Form - Station and Customer Info")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39278")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint82")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39278_VerifyTheListOfCustomersAssociatedToLoggedInUserOnTheSubmitAClaimPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39278_Verify the list of Customers associated to logged in user on the Submit a C" +
                    "laim page", new string[] {
                        "GUI"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
    testRunner.Given("I am a Sales, Sales Management, Operations, Station Owner, or Claims Specialist u" +
                    "ser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
 testRunner.And("I am on the Insurance Claim - Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I Click on the Station drop down field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.When("I Click on the Customer drop down field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.Then("I should see only list of Customer to which user is associated to", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
 testRunner.And("the Customer names should be listed first in numerical then in alphabetical order" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39278_Verify the Order and hierarchy for of Customer field drop down list on the " +
            "Submit a Claim page for Sales User")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claim Form - Station and Customer Info")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39278")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint82")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _39278_VerifyTheOrderAndHierarchyForOfCustomerFieldDropDownListOnTheSubmitAClaimPageForSalesUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39278_Verify the Order and hierarchy for of Customer field drop down list on the " +
                    "Submit a Claim page for Sales User", new string[] {
                        "GUI"});
#line 47
this.ScenarioSetup(scenarioInfo);
#line 48
    testRunner.Given("I am a crm Sales user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
 testRunner.And("I am on the Insurance Claim - Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And("I Click on the Station drop down field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.When("I Click on the Customer drop down field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
 testRunner.Then("the Customer names should be listed in hierarchy format", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
 testRunner.And("the Customer names should be listed first in numerical then in alphabetical order" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39278_Verify the Submit a Claim functionality when all data is passed and display" +
            "ed in Claim List page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Claim Form - Station and Customer Info")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39278")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint82")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("EndtoEnd")]
        public virtual void _39278_VerifyTheSubmitAClaimFunctionalityWhenAllDataIsPassedAndDisplayedInClaimListPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39278_Verify the Submit a Claim functionality when all data is passed and display" +
                    "ed in Claim List page", new string[] {
                        "EndtoEnd"});
#line 56
this.ScenarioSetup(scenarioInfo);
#line 57
    testRunner.Given("I am a Sales, Sales Management, Operations, Station Owner, or Claims Specialist u" +
                    "ser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
 testRunner.And("I am on the Insurance Claim - Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And("I select Station and Customer to which I am associated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I pass data to all the fields on SUbmit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.When("I click on Submit Claim button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.Then("All the passed data should get saved in DB along with the username of the user th" +
                    "at submitted the claim, First name  and last name of the submitted user, date an" +
                    "d time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
 testRunner.And("Submitted Claim will be placed in Pending Status.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion


