// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.InsuranceClaims.ClaimDetails
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _91183_InsuranceClaimsB_PaymentTab_OutstandingAmountFieldFunctionalityFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality" +
                    "", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint92",
                        "91183"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality" +
                            "")))
            {
                global::CRM.UITest.Scripts.InsuranceClaims.ClaimDetails._91183_InsuranceClaimsB_PaymentTab_OutstandingAmountFieldFunctionalityFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _91183_VerifyOutstandingAmountValueWhenUserAddsPaymentWithType_CarrierDirectPayToClaimantOrCarrierPaymentToDLSWOrCreditOrSubrogation(string paymentType, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("91183 - Verify Outstanding amount value when user adds Payment with type - Carrie" +
                    "r Direct Pay To Claimant or Carrier Payment To DLSW or Credit or Subrogation", exampleTags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.And("I am on the Payments tab of Claim Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
 testRunner.And("I clicked the Add Payment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And(string.Format("I selected Payment Type as {0} in the Add Payment modal", paymentType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("I entered all other required information in the Add Payment modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.When("I click on Add Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("The value in the Outstanding Amount field of the Payments tab will be reduced by " +
                    "the amount entered in the Payment Amount field of the Add Payment modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("91183 - Verify Outstanding amount value when user adds Payment with type - Carrie" +
            "r Direct Pay To Claimant or Carrier Payment To DLSW or Credit or Subrogation: Ca" +
            "rrierDirectPayToClaimant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint92")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("91183")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CarrierDirectPayToClaimant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentType", "CarrierDirectPayToClaimant")]
        public virtual void _91183_VerifyOutstandingAmountValueWhenUserAddsPaymentWithType_CarrierDirectPayToClaimantOrCarrierPaymentToDLSWOrCreditOrSubrogation_CarrierDirectPayToClaimant()
        {
#line 4
this._91183_VerifyOutstandingAmountValueWhenUserAddsPaymentWithType_CarrierDirectPayToClaimantOrCarrierPaymentToDLSWOrCreditOrSubrogation("CarrierDirectPayToClaimant", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("91183 - Verify Outstanding amount value when user adds Payment with type - Carrie" +
            "r Direct Pay To Claimant or Carrier Payment To DLSW or Credit or Subrogation: Ca" +
            "rrierPaymentToDLSW")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint92")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("91183")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CarrierPaymentToDLSW")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentType", "CarrierPaymentToDLSW")]
        public virtual void _91183_VerifyOutstandingAmountValueWhenUserAddsPaymentWithType_CarrierDirectPayToClaimantOrCarrierPaymentToDLSWOrCreditOrSubrogation_CarrierPaymentToDLSW()
        {
#line 4
this._91183_VerifyOutstandingAmountValueWhenUserAddsPaymentWithType_CarrierDirectPayToClaimantOrCarrierPaymentToDLSWOrCreditOrSubrogation("CarrierPaymentToDLSW", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("91183 - Verify Outstanding amount value when user adds Payment with type - Carrie" +
            "r Direct Pay To Claimant or Carrier Payment To DLSW or Credit or Subrogation: Cr" +
            "edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint92")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("91183")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Credit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentType", "Credit")]
        public virtual void _91183_VerifyOutstandingAmountValueWhenUserAddsPaymentWithType_CarrierDirectPayToClaimantOrCarrierPaymentToDLSWOrCreditOrSubrogation_Credit()
        {
#line 4
this._91183_VerifyOutstandingAmountValueWhenUserAddsPaymentWithType_CarrierDirectPayToClaimantOrCarrierPaymentToDLSWOrCreditOrSubrogation("Credit", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("91183 - Verify Outstanding amount value when user adds Payment with type - Carrie" +
            "r Direct Pay To Claimant or Carrier Payment To DLSW or Credit or Subrogation: Su" +
            "brogation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint92")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("91183")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Subrogation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentType", "Subrogation")]
        public virtual void _91183_VerifyOutstandingAmountValueWhenUserAddsPaymentWithType_CarrierDirectPayToClaimantOrCarrierPaymentToDLSWOrCreditOrSubrogation_Subrogation()
        {
#line 4
this._91183_VerifyOutstandingAmountValueWhenUserAddsPaymentWithType_CarrierDirectPayToClaimantOrCarrierPaymentToDLSWOrCreditOrSubrogation("Subrogation", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("91183 - Verify the amount value in the Claim List page grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint92")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("91183")]
        public virtual void _91183_VerifyTheAmountValueInTheClaimListPageGrid()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("91183 - Verify the amount value in the Claim List page grid", ((string[])(null)));
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.When("I am on the Claims List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.Then("The Amount value of each displayed claim will equal the value of the Total Claime" +
                    "d Freight field of the Claim Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("91183 - Verify if Total Claimed Freight value is getting added to Outstanding Amo" +
            "unt field of the Payments tab_InternalUser")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint92")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("91183")]
        public virtual void _91183_VerifyIfTotalClaimedFreightValueIsGettingAddedToOutstandingAmountFieldOfThePaymentsTab_InternalUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("91183 - Verify if Total Claimed Freight value is getting added to Outstanding Amo" +
                    "unt field of the Payments tab_InternalUser", ((string[])(null)));
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
 testRunner.Given("I am a user with access to submit a claim \'username-CurrentSprintOperations\' \'pas" +
                    "sword-CurrentSprintOperations\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
 testRunner.When("the claim has been submitted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.Then("The value of the Total Claimed Freight field on the Claim Details page will be ad" +
                    "ded to the Outstanding Amount field of the Payments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("91183 - Verify if Total Claimed Freight value is getting added to Outstanding Amo" +
            "unt field on Payments tab_ClaimspecialistUser")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint92")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("91183")]
        public virtual void _91183_VerifyIfTotalClaimedFreightValueIsGettingAddedToOutstandingAmountFieldOnPaymentsTab_ClaimspecialistUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("91183 - Verify if Total Claimed Freight value is getting added to Outstanding Amo" +
                    "unt field on Payments tab_ClaimspecialistUser", ((string[])(null)));
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
 testRunner.Given("I am a user with access to submit a claim \'username-CurrentsprintClaimspecialist\'" +
                    " \'password-CurrentsprintClaimspecialist\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 32
 testRunner.When("the claim has been submitted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.Then("The value of the Total Claimed Freight field on the Claim Details page will be ad" +
                    "ded to the Outstanding Amount field of the Payments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("91183 - Verify outstanding amount value when user edits FreightCalculations secti" +
            "on and clicks on Save Claim Details button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint92")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("91183")]
        public virtual void _91183_VerifyOutstandingAmountValueWhenUserEditsFreightCalculationsSectionAndClicksOnSaveClaimDetailsButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("91183 - Verify outstanding amount value when user edits FreightCalculations secti" +
                    "on and clicks on Save Claim Details button", ((string[])(null)));
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
 testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 37
 testRunner.And("I am on Claim Details Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And("I have made Edits to  FreightCalculations of Claim details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("The value of the Total Claimed Freight field changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.When("I click on Save Claim Details button of Claim Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
 testRunner.Then("The Outstanding Amount equals (Updated Value of Total Claimed Freight) - (Previou" +
                    "s Value of Total Claimed Freight) + (Current Value of Outstanding Amount)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("91183 - Verify list of payment Type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint92")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("91183")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint94")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("91024")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("92206")]
        public virtual void _91183_VerifyListOfPaymentType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("91183 - Verify list of payment Type", new string[] {
                        "Sprint94",
                        "91024",
                        "92206"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
 testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
 testRunner.And("I am on the Payments tab of Claim Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And("I clicked the Add Payment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.When("I click on Add Payment Model", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
 testRunner.Then("I should see All PaymentType in Paymenttype dropdwon list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("109227 - Verify Total Claimed Freight value when user add and edits Products Clai" +
            "med section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint92")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("91183")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint94")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("109227")]
        public virtual void _109227_VerifyTotalClaimedFreightValueWhenUserAddAndEditsProductsClaimedSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("109227 - Verify Total Claimed Freight value when user add and edits Products Clai" +
                    "med section", new string[] {
                        "Sprint94",
                        "109227"});
#line 53
this.ScenarioSetup(scenarioInfo);
#line 54
 testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
 testRunner.And("I am on Claim Details Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.When("I made Edits to Products Claimed section of Claim details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.Then("The value of the Total Claimed Freight equals (TTL VAL) + (Original Claimed Freig" +
                    "ht) + (Return Claimed Freight) + (Replacement Claimed Freight)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("109227 - Verify Total Claimed Freight value when user edits existing Products Cla" +
            "imed section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint92")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("91183")]
        public virtual void _109227_VerifyTotalClaimedFreightValueWhenUserEditsExistingProductsClaimedSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("109227 - Verify Total Claimed Freight value when user edits existing Products Cla" +
                    "imed section", ((string[])(null)));
#line 59
this.ScenarioSetup(scenarioInfo);
#line 60
 testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
 testRunner.And("I am on Claim Details Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.When("I made Edits to existing Products Claimed section of Claim details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
 testRunner.Then("The value of the Total Claimed Freight equals (TTL VAL) + (Original Claimed Freig" +
                    "ht) + (Return Claimed Freight) + (Replacement Claimed Freight)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("109227 - Verify Outstanding Amount value when user edits Products Claimed section" +
            " and clicks on Save Claim Details")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "91183_Insurance Claims (B) - Payment Tab - Outstanding Amount Field Functionality" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint92")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("91183")]
        public virtual void _109227_VerifyOutstandingAmountValueWhenUserEditsProductsClaimedSectionAndClicksOnSaveClaimDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("109227 - Verify Outstanding Amount value when user edits Products Claimed section" +
                    " and clicks on Save Claim Details", ((string[])(null)));
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
 testRunner.Given("I am a claim specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
 testRunner.And("I am on Claim Details Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And("I made Edits to Products Claimed section of Claim details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And("The value of the Total Claimed Freight changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.When("I click on Save Claim Details button of Claim Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
 testRunner.Then("Outstanding Amount equals (Updated Value of Total Claimed Freight) - (Previous Va" +
                    "lue of Total Claimed Freight) + (Current Value of Outstanding Amount)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

