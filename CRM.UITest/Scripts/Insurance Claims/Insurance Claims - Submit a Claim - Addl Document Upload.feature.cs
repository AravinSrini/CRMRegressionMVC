// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.InsuranceClaims
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class InsuranceClaims_SubmitAClaim_AddlDocumentUploadFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Insurance Claims - Submit a Claim - Addl Document Upload.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Insurance Claims - Submit a Claim - Addl Document Upload", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint79",
                        "Regression"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Insurance Claims - Submit a Claim - Addl Document Upload")))
            {
                global::CRM.UITest.Scripts.InsuranceClaims.InsuranceClaims_SubmitAClaim_AddlDocumentUploadFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify document Type drop down on Submit a claim page on click of Add Add" +
            "itional document button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_VerifyDocumentTypeDropDownOnSubmitAClaimPageOnClickOfAddAdditionalDocumentButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify document Type drop down on Submit a claim page on click of Add Add" +
                    "itional document button", new string[] {
                        "GUI"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
  testRunner.When("I click on Add Additional Document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
  testRunner.Then("I should be able to view a Document Type drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
  testRunner.And("The default selection in the drop down list should be - Select document type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify the existence of document upload button on click of Add Additional" +
            " Document button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_VerifyTheExistenceOfDocumentUploadButtonOnClickOfAddAdditionalDocumentButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify the existence of document upload button on click of Add Additional" +
                    " Document button", new string[] {
                        "GUI"});
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
  testRunner.When("I click on Add Additional Document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
  testRunner.Then("I should be able to view document upload button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 18
  testRunner.And("The document upload button should be inactive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify the verbiage next to document upload button on submit a claim page" +
            " on click of Add Additional Document button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_VerifyTheVerbiageNextToDocumentUploadButtonOnSubmitAClaimPageOnClickOfAddAdditionalDocumentButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify the verbiage next to document upload button on submit a claim page" +
                    " on click of Add Additional Document button", new string[] {
                        "GUI"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 23
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
  testRunner.When("I click on Add Additional Document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
  testRunner.Then("I should be able to view a verbiage next to document upload button stating - No f" +
                    "ile currently uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify the existence of Remove button on click of Add Additional Document" +
            " button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_VerifyTheExistenceOfRemoveButtonOnClickOfAddAdditionalDocumentButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify the existence of Remove button on click of Add Additional Document" +
                    " button", new string[] {
                        "GUI"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
  testRunner.When("I click on Add Additional Document button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
  testRunner.Then("I should be able to view remove button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify document upload icon behaviour while selecting a document from the" +
            " document drop down list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_VerifyDocumentUploadIconBehaviourWhileSelectingADocumentFromTheDocumentDropDownList()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify document upload icon behaviour while selecting a document from the" +
                    " document drop down list", new string[] {
                        "GUI"});
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 37
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
  testRunner.And("Additional Document section is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
  testRunner.When("I select a document from the document drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
  testRunner.Then("The document upload icon will be active.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify the existence of expected Document Type field drop down list value" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_VerifyTheExistenceOfExpectedDocumentTypeFieldDropDownListValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify the existence of expected Document Type field drop down list value" +
                    "s", new string[] {
                        "GUI"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
  testRunner.And("Additional Document section is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
  testRunner.When("I click on Document Type field drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
  testRunner.Then(@"I should be able to view the following values in the Document Type field drop down list - Complete Vendor Invoice, Airway Bill, Bill of Lading, Claimant's Form W-9, Concealed Damage Notification, Customs Document, Delivery Receipt, Inspection Report, Ocean Bill of Lading, Packing List, Pictures - On Receipt, Pictures - Prior to Shipment, Repair Invoice, Other", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify the first and last selectable option in the Document Type field dr" +
            "op down list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_VerifyTheFirstAndLastSelectableOptionInTheDocumentTypeFieldDropDownList()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify the first and last selectable option in the Document Type field dr" +
                    "op down list", new string[] {
                        "GUI"});
#line 51
this.ScenarioSetup(scenarioInfo);
#line 52
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 53
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
  testRunner.And("Additional Document section is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
  testRunner.When("I click on Document Type field drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
  testRunner.Then("Complete Vendor Invoice should be displayed first in the list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
  testRunner.And("Other should be displayed last in the list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify if document selection options in the Document Type field drop down" +
            " list is in alphabetical order except for the first and last option")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_VerifyIfDocumentSelectionOptionsInTheDocumentTypeFieldDropDownListIsInAlphabeticalOrderExceptForTheFirstAndLastOption()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify if document selection options in the Document Type field drop down" +
                    " list is in alphabetical order except for the first and last option", new string[] {
                        "GUI"});
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
  testRunner.And("Additional Document section is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
  testRunner.When("I click on Document Type field drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
  testRunner.Then("I should be able to view document selection options in the Document Type field dr" +
                    "op down list sorted alphabetically except for the first and last option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify document selection options in the Document Type field drop down li" +
            "st with DB")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        public virtual void _32016_VerifyDocumentSelectionOptionsInTheDocumentTypeFieldDropDownListWithDB()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify document selection options in the Document Type field drop down li" +
                    "st with DB", new string[] {
                        "DBVerification"});
#line 68
this.ScenarioSetup(scenarioInfo);
#line 69
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
  testRunner.And("Additional Document section is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
  testRunner.When("I click on Document Type field drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
  testRunner.Then("All the displayed document selection options should be present in DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify tool tip verbiage when Repair Invoice is selected as document type" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_VerifyToolTipVerbiageWhenRepairInvoiceIsSelectedAsDocumentType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify tool tip verbiage when Repair Invoice is selected as document type" +
                    "", new string[] {
                        "GUI"});
#line 76
this.ScenarioSetup(scenarioInfo);
#line 77
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 78
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
  testRunner.And("Additional Document section is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
  testRunner.When("I select Repair Invoice as document type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
  testRunner.Then("I should be able to view a tool tip for Repair Invoice", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 82
  testRunner.And("On mouse hover i should see a verbiage stating - This should be detailed out by p" +
                    "arts and labor, including labor rate.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify tool tip verbiage when Complete Vendor Invoice is selected as docu" +
            "ment type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_VerifyToolTipVerbiageWhenCompleteVendorInvoiceIsSelectedAsDocumentType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify tool tip verbiage when Complete Vendor Invoice is selected as docu" +
                    "ment type", new string[] {
                        "GUI"});
#line 85
this.ScenarioSetup(scenarioInfo);
#line 86
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 87
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
  testRunner.And("Additional Document section is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
  testRunner.When("I select Complete Vendor Invoice as document type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
  testRunner.Then("I should be able to view a tool tip for Complete Vendor Invoice", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 91
  testRunner.And("On mouse hover i should see a verbiage stating - This invoice should show your co" +
                    "st for the product being claimed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify the functionality of Remove button on Add Additional Document sect" +
            "ion")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _32016_VerifyTheFunctionalityOfRemoveButtonOnAddAdditionalDocumentSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify the functionality of Remove button on Add Additional Document sect" +
                    "ion", new string[] {
                        "Functional"});
#line 94
this.ScenarioSetup(scenarioInfo);
#line 95
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 96
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
  testRunner.And("Additional Document section is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
  testRunner.When("I click on the Remove button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
  testRunner.Then("The additional document section will be removed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Try to submit claim without uploading document in the Add Additional Docu" +
            "ment section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_TryToSubmitClaimWithoutUploadingDocumentInTheAddAdditionalDocumentSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Try to submit claim without uploading document in the Add Additional Docu" +
                    "ment section", new string[] {
                        "Functional",
                        "GUI"});
#line 102
this.ScenarioSetup(scenarioInfo);
#line 103
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 104
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
  testRunner.And("Additional Document section is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
  testRunner.And("Document is not been uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
  testRunner.When("I click Submit Claim button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 108
  testRunner.Then("I will receive an error message stating - Please add document to claim form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 109
  testRunner.And("The page will be focused to the Additional Document section.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Try selecting any document type from the Document Type field drop down li" +
            "st and upload a document")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _32016_TrySelectingAnyDocumentTypeFromTheDocumentTypeFieldDropDownListAndUploadADocument()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Try selecting any document type from the Document Type field drop down li" +
                    "st and upload a document", new string[] {
                        "Functional"});
#line 112
this.ScenarioSetup(scenarioInfo);
#line 113
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 114
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
  testRunner.And("Additional Document section is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
  testRunner.When("I click on Document Type field drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
  testRunner.Then("I should be able to select any document type from the Document Type field drop do" +
                    "wn list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 118
  testRunner.And("I should be able to upload a document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify document upload button behaviour when user clicks on Document Type" +
            " field drop down list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_VerifyDocumentUploadButtonBehaviourWhenUserClicksOnDocumentTypeFieldDropDownList()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify document upload button behaviour when user clicks on Document Type" +
                    " field drop down list", new string[] {
                        "GUI"});
#line 121
this.ScenarioSetup(scenarioInfo);
#line 122
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 123
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
  testRunner.And("Additional Document section is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
  testRunner.When("I click on Document Type field drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 126
  testRunner.Then("Document upload button should be inactive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify Document type dropdown behaviour when user uploads a Valid documen" +
            "t")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_VerifyDocumentTypeDropdownBehaviourWhenUserUploadsAValidDocument()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify Document type dropdown behaviour when user uploads a Valid documen" +
                    "t", new string[] {
                        "GUI"});
#line 129
this.ScenarioSetup(scenarioInfo);
#line 130
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 131
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
  testRunner.And("Additional Document section is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
  testRunner.When("I upload a valid document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 134
  testRunner.Then("Document type dropdown should be in disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify Document type dropdown behaviour when user deletes uploaded docume" +
            "nt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_VerifyDocumentTypeDropdownBehaviourWhenUserDeletesUploadedDocument()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify Document type dropdown behaviour when user deletes uploaded docume" +
                    "nt", new string[] {
                        "GUI"});
#line 137
this.ScenarioSetup(scenarioInfo);
#line 138
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 139
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
  testRunner.And("Additional Document section is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
  testRunner.When("I delete an uploaded document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 142
  testRunner.Then("Document type dropdown should be enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("32016 - Verify Document Upload button behaviour when user deletes uploaded docume" +
            "nt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance Claims - Submit a Claim - Addl Document Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint79")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        public virtual void _32016_VerifyDocumentUploadButtonBehaviourWhenUserDeletesUploadedDocument()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32016 - Verify Document Upload button behaviour when user deletes uploaded docume" +
                    "nt", new string[] {
                        "GUI"});
#line 145
this.ScenarioSetup(scenarioInfo);
#line 146
  testRunner.Given("I am a shp.inquiry, shp.inquirynorates, shp.entry, shp.entrynorates Sales, Sales " +
                    "Management, Operations, Station Owner user or claims Specialist user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 147
  testRunner.And("I am on Submit a Claim page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
  testRunner.And("Additional Document section is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
  testRunner.When("I delete an uploaded document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 150
  testRunner.Then("Document upload button will be enabled once document type is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
