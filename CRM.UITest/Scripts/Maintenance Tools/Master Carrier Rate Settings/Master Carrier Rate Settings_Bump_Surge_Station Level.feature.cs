// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.MaintenanceTools.MasterCarrierRateSettings
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
    public partial class MasterCarrierRateSettings_Bump_Surge_StationLevelFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Master Carrier Rate Settings_Bump_Surge_Station Level.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Master Carrier Rate Settings_Bump_Surge_Station Level", null, ProgrammingLanguage.CSharp, new string[] {
                        "35277",
                        "Sprint74",
                        "Ignore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Master Carrier Rate Settings_Bump_Surge_Station Level")))
            {
                CRM.UITest.Scripts.MaintenanceTools.MasterCarrierRateSettings.MasterCarrierRateSettings_Bump_Surge_StationLevelFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyDisplayOfBumpAndSurgeValuesAtAllStationLevelOnMasterCarrierRateSettingsPageWhenBothValuesExists(string scenario, string username, string password, string masterCarrierPageTitle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify display of Bump and Surge values at all station level on Master Carrier Ra" +
                    "te Settings page when both values exists", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("I am a System Admin or Pricing Configuration user - {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", masterCarrierPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.When("I have selected all Stations", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.And("I have selected one or more carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.Then("Surge and Bump values will be displayed on the Master Carrier Rate Settings page." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void VerifyDisplayOfBumpAndSurgeValuesAtAllStationLevelOnMasterCarrierRateSettingsPageWhenBothValuesDoesNotExists(string scenario, string username, string password, string masterCarrierPageTitle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify display of Bump and Surge values at all station level on Master Carrier Ra" +
                    "te Settings page when both values does not exists", @__tags);
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given(string.Format("I am a System Admin or Pricing Configuration user - {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", masterCarrierPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.When("I have selected all Stations", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.And("I have selected one or more carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.Then("Surge and Bump values will be displayed as None if values does not exists for the" +
                    " carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void UpdateBumpOrSurgeValuesForACarrierBySelectingAllStationsAndVerifyTheValuesEnteredAreSavedInDbAndDisplayedOnMasterCarrierRateSettingsPage(string scenario, string username, string password, string masterCarrierPageTitle, string surge, string bump, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Bump or Surge values for a carrier by selecting all stations and verify th" +
                    "e values entered are saved in db and displayed on Master Carrier Rate Settings p" +
                    "age", @__tags);
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
 testRunner.Given(string.Format("I am a System Admin or Pricing Configuration user - {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", masterCarrierPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.When("I have selected all Stations", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.And("I have selected one carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And(string.Format("I update Surge or Bump fields {0},{1}", surge, bump), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.Then(string.Format("the values will be saved to the database for all stations {0},{1}", bump, surge), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 34
 testRunner.And(string.Format("the values will be saved to the database for all customers, and their sub-custome" +
                        "rs {0},{1}", bump, surge), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void UpdateBumpOrSurgeValuesForACarrierBySelectingAStationAndVerifyTheValuesEnteredAreSavedInDbAndDisplayedOnMasterCarrierRateSettingsPage(string scenario, string username, string password, string masterCarrierPageTitle, string stationName, string surge, string bump, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Bump or Surge values for a carrier by selecting a station and verify the v" +
                    "alues entered are saved in db and displayed on Master Carrier Rate Settings page" +
                    "", @__tags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
 testRunner.Given(string.Format("I am a System Admin or Pricing Configuration user - {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", masterCarrierPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.When(string.Format("I have selected one Station {0}", stationName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.And("I have selected one carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.And(string.Format("I update Surge or Bump fields {0},{1}", surge, bump), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.Then(string.Format("the values will be saved to the database for the station selected {0},{1},{2}", stationName, bump, surge), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 47
 testRunner.And(string.Format("the values will be saved to the database for all customers, and their sub-custome" +
                        "rs, associated to the station {0},{1},{2}", stationName, bump, surge), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void VerifyDisplayOfBumpAndSurgeValuesOnMasterCarrierRateSettingsPageBySelectingOneStation(string scenario, string username, string password, string masterCarrierPageTitle, string stationName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify display of Bump and Surge values on Master Carrier Rate Settings page by s" +
                    "electing one station", @__tags);
#line 53
this.ScenarioSetup(scenarioInfo);
#line 54
 testRunner.Given(string.Format("I am a System Admin or Pricing Configuration user - {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
 testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", masterCarrierPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.When(string.Format("I have selected one Station {0}", stationName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.And("I have selected one or more carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.Then(string.Format("Surge and Bump values will be displayed on the Master Carrier Rate Settings page " +
                        "{0}", stationName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void UpdateBumpOrSurgeValuesForMoreThanOneCarrierBySelectingAllStationsAndVerifyTheValuesEnteredAreSavedInDbAndDisplayedOnMasterCarrierRateSettingsPage(string scenario, string username, string password, string masterCarrierPageTitle, string stationName, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Bump or Surge values for more than one carrier by selecting all stations a" +
                    "nd verify the values entered are saved in db and displayed on Master Carrier Rat" +
                    "e Settings page", exampleTags);
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
 testRunner.Given(string.Format("I am a System Admin or Pricing Configuration user - {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 65
 testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", masterCarrierPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.When("I have selected all Stations", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
 testRunner.And("I selected two carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And("I update Surge or Bump fields <Surge>,<Bump>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.Then("the values for the selected carriers will be saved to the database for all statio" +
                    "ns <Bump>,<Surge>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 70
 testRunner.And("the values for the selected carriers will be saved to the database for all custom" +
                    "ers, and their sub-customers <Bump>,<Surge>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void UpdateBumpOrSurgeValuesForAllCarriersBySelectingAllStationsAndVerifyTheValuesEnteredAreSavedInDbAndDisplayedOnMasterCarrierRateSettingsPage(string scenario, string username, string password, string masterCarrierPageTitle, string stationName, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Bump or Surge values for all carriers by selecting all stations and verify" +
                    " the values entered are saved in db and displayed on Master Carrier Rate Setting" +
                    "s page", exampleTags);
#line 75
this.ScenarioSetup(scenarioInfo);
#line 76
 testRunner.Given(string.Format("I am a System Admin or Pricing Configuration user - {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 77
 testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", masterCarrierPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.When("I have selected all Stations", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
 testRunner.And("I have selected all carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.And("I update Surge or Bump fields <Surge>,<Bump>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.Then("the values for all carriers will be saved to the database for all stations <Bump>" +
                    ",<Surge>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 82
 testRunner.And("the values for all carriers will be saved to the database for all customers, and " +
                    "their sub-customers <Bump>,<Surge>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void UpdateBumpOrSurgeValuesForMoreThanOneCarrierBySelectingAStationAndVerifyTheValuesEnteredAreSavedInDbAndDisplayedOnMasterCarrierRateSettingsPage(string scenario, string username, string password, string masterCarrierPageTitle, string stationName, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Bump or Surge values for more than one carrier by selecting a station and " +
                    "verify the values entered are saved in db and displayed on Master Carrier Rate S" +
                    "ettings page", exampleTags);
#line 87
this.ScenarioSetup(scenarioInfo);
#line 88
 testRunner.Given(string.Format("I am a System Admin or Pricing Configuration user - {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 89
 testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", masterCarrierPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.When(string.Format("I have selected one Station {0}", stationName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
 testRunner.And("I selected two carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And("I update Surge or Bump fields <Surge>,<Bump>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.Then(string.Format("the values for the selected carriers will be saved to the database of the station" +
                        " selected {0},<Bump>,<Surge>", stationName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 94
 testRunner.And(string.Format("the values for the selected carriers will be saved to the database of all custome" +
                        "rs, and their sub-customers {0},<Bump>,<Surge>", stationName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void UpdateBumpOrSurgeValuesForAllCarriersBySelectingAStationAndVerifyTheValuesEnteredAreSavedInDbAndDisplayedOnMasterCarrierRateSettingsPage(string scenario, string username, string password, string masterCarrierPageTitle, string stationName, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Bump or Surge values for all carriers by selecting a station and verify th" +
                    "e values entered are saved in db and displayed on Master Carrier Rate Settings p" +
                    "age", exampleTags);
#line 99
this.ScenarioSetup(scenarioInfo);
#line 100
 testRunner.Given(string.Format("I am a System Admin or Pricing Configuration user - {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 101
 testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", masterCarrierPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.When(string.Format("I have selected one Station {0}", stationName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 103
 testRunner.And("I have selected all carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
 testRunner.And("I update Surge or Bump fields <Surge>,<Bump>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.Then(string.Format("the values for all carriers will be saved to the database of the station selected" +
                        " {0},<Bump>,<Surge>", stationName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 106
 testRunner.And(string.Format("the values for all carriers will be saved to the database of all customers, and t" +
                        "heir sub-customers {0},<Bump>,<Surge>", stationName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
