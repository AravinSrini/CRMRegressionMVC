// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.MaintenanceTools.MasterCarrierRateSettings
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CarrierRateSettings_AdminView_StationOrCustomerFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CarrierRateSettings_AdminView_StationOrCustomer.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CarrierRateSettings_AdminView_StationOrCustomer", null, ProgrammingLanguage.CSharp, new string[] {
                        "25384",
                        "Sprint66"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CarrierRateSettings_AdminView_StationOrCustomer")))
            {
                CRM.UITest.Scripts.MaintenanceTools.MasterCarrierRateSettings.CarrierRateSettings_AdminView_StationOrCustomerFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void CompareAndVerifyTheDisplayingStationsCountWithDatabase(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare and verify the displaying stations count with database", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("I should see all stations and select individual customers dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
 testRunner.And(string.Format("I should see all the stations exists in the database under all stations dropdown " +
                        "{0}", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Compare and verify the displaying stations count with database: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void CompareAndVerifyTheDisplayingStationsCountWithDatabase_S1()
        {
            this.CompareAndVerifyTheDisplayingStationsCountWithDatabase("S1", "tst.admnsys16", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void CompareAndVerifyTheMappedAccountsToTheStationsWithDatabase(string scenario, string username, string password, string stationname, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare and verify the mapped accounts to the stations with database", @__tags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.Then("I should see all stations and select individual customers dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
 testRunner.And(string.Format("displaying accounts for a selected station {0} should match with the database", stationname), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Compare and verify the mapped accounts to the stations with database: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Stationname", "zagg station")]
        public virtual void CompareAndVerifyTheMappedAccountsToTheStationsWithDatabase_S1()
        {
            this.CompareAndVerifyTheMappedAccountsToTheStationsWithDatabase("S1", "tst.admnsys16", "Te$t1234", "zagg station", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheDefaultSelectedOptionUnderAllStationsDropdown(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the default selected option under all stations dropdown", @__tags);
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.Then("I should see all stations and select individual customers dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 34
 testRunner.And("All stations should be selected by default in all stations dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the default selected option under all stations dropdown: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyTheDefaultSelectedOptionUnderAllStationsDropdown_S1()
        {
            this.VerifyTheDefaultSelectedOptionUnderAllStationsDropdown("S1", "tst.admnsys16", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void TryToSelectMultipleStationsFromTheAllStationsDropdown(string scenario, string username, string password, string station1, string station2, string station3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Try to select multiple stations from the all stations dropdown", @__tags);
#line 41
this.ScenarioSetup(scenarioInfo);
#line 42
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 43
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.Then("I should see all stations and select individual customers dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
 testRunner.And(string.Format("I should be able to select multiple stations {0}, {1} and {2}", station1, station2, station3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Try to select multiple stations from the all stations dropdown: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station1", "STATIONTEST K")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station2", "SAGGEZZAINDIA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station3", "test11223344")]
        public virtual void TryToSelectMultipleStationsFromTheAllStationsDropdown_S1()
        {
            this.TryToSelectMultipleStationsFromTheAllStationsDropdown("S1", "tst.admnsys16", "Te$t1234", "STATIONTEST K", "SAGGEZZAINDIA", "test11223344", ((string[])(null)));
#line hidden
        }
        
        public virtual void TryToSelectMultipleAccountsFromTheIndividualCustomersDropdown(string scenario, string username, string password, string account1, string account2, string account3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Try to select multiple accounts from the individual customers dropdown", @__tags);
#line 53
this.ScenarioSetup(scenarioInfo);
#line 54
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.Then("I should see all stations and select individual customers dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 58
 testRunner.And(string.Format("I should be able to select multiple accounts {0}, {1} and {2}", account1, account2, account3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Try to select multiple accounts from the individual customers dropdown: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account1", "Test Customer 1045")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account2", "Test Customer 1207")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account3", "lavakumar_portal_check")]
        public virtual void TryToSelectMultipleAccountsFromTheIndividualCustomersDropdown_S1()
        {
            this.TryToSelectMultipleAccountsFromTheIndividualCustomersDropdown("S1", "tst.admnsys16", "Te$t1234", "Test Customer 1045", "Test Customer 1207", "lavakumar_portal_check", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheIndividualCustomersDropdownWhenAnyOptionIsSelectedFromTheAllStationDropdown(string scenario, string username, string password, string station1, string station2, string station3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the individual customers dropdown when any option is selected from the all" +
                    " station dropdown", @__tags);
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
 testRunner.Then(string.Format("I should be able to select multiple stations {0}, {1} and {2}", station1, station2, station3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 70
 testRunner.And("Individual customers dropdown should be disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the individual customers dropdown when any option is selected from the all" +
            " station dropdown: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station1", "STATIONTEST K")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station2", "SAGGEZZAINDIA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station3", "test11223344")]
        public virtual void VerifyTheIndividualCustomersDropdownWhenAnyOptionIsSelectedFromTheAllStationDropdown_S1()
        {
            this.VerifyTheIndividualCustomersDropdownWhenAnyOptionIsSelectedFromTheAllStationDropdown("S1", "tst.admnsys16", "Te$t1234", "STATIONTEST K", "SAGGEZZAINDIA", "test11223344", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheAllStationsDropdownWhenAnyOptionIsSelectedFromTheIndividualCustomersDropdown(string scenario, string username, string password, string account1, string account2, string account3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the all stations dropdown when any option is selected from the individual " +
                    "customers dropdown", @__tags);
#line 77
this.ScenarioSetup(scenarioInfo);
#line 78
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 79
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
 testRunner.Then(string.Format("I should be able to select multiple accounts {0}, {1} and {2}", account1, account2, account3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 82
 testRunner.And("All stations dropdown should be disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the all stations dropdown when any option is selected from the individual " +
            "customers dropdown: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account1", "010-test account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account2", "tarrif_check")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account3", "ZZZ Sandbox DLS Worldwide")]
        public virtual void VerifyTheAllStationsDropdownWhenAnyOptionIsSelectedFromTheIndividualCustomersDropdown_S1()
        {
            this.VerifyTheAllStationsDropdownWhenAnyOptionIsSelectedFromTheIndividualCustomersDropdown("S1", "tst.admnsys16", "Te$t1234", "010-test account", "tarrif_check", "ZZZ Sandbox DLS Worldwide", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheGridWhenAnyAccountSelected(string scenario, string username, string password, string account1, string account2, string account3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the grid when any account selected", @__tags);
#line 89
this.ScenarioSetup(scenarioInfo);
#line 90
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 91
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 93
 testRunner.Then(string.Format("I should be able to select multiple accounts {0}, {1} and {2}", account1, account2, account3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 94
 testRunner.And("I should be able to see these options within grid - Gainshare, Minimum, Min Thres" +
                    "hold, Min Amount, Master Accessorial charge", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the grid when any account selected: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account1", "010-test account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account2", "tarrif_check")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account3", "ZZZ Sandbox DLS Worldwide")]
        public virtual void VerifyTheGridWhenAnyAccountSelected_S1()
        {
            this.VerifyTheGridWhenAnyAccountSelected("S1", "tst.admnsys16", "Te$t1234", "010-test account", "tarrif_check", "ZZZ Sandbox DLS Worldwide", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheTextBoxesWhenAnyAccountSelected(string scenario, string username, string password, string account1, string account2, string account3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the text boxes when any account selected", @__tags);
#line 101
this.ScenarioSetup(scenarioInfo);
#line 102
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 103
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 105
 testRunner.Then(string.Format("I should be able to select multiple accounts {0}, {1} and {2}", account1, account2, account3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 106
 testRunner.And("I should be able to see following text boxes - Minimum, Min Threshold, Min Amount" +
                    " and Set Accessorials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the text boxes when any account selected: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account1", "010-test account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account2", "tarrif_check")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account3", "ZZZ Sandbox DLS Worldwide")]
        public virtual void VerifyTheTextBoxesWhenAnyAccountSelected_S1()
        {
            this.VerifyTheTextBoxesWhenAnyAccountSelected("S1", "tst.admnsys16", "Te$t1234", "010-test account", "tarrif_check", "ZZZ Sandbox DLS Worldwide", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheButtonsWhenAnyAccountSelected(string scenario, string username, string password, string account1, string account2, string account3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Buttons when any account selected", @__tags);
#line 113
this.ScenarioSetup(scenarioInfo);
#line 114
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 115
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
 testRunner.Then(string.Format("I should be able to select multiple accounts {0}, {1} and {2}", account1, account2, account3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 118
 testRunner.And("I should be able to see following buttons - Minimum, Min Threshold, Min Amount an" +
                    "d Set Accessorials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Buttons when any account selected: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account1", "010-test account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account2", "tarrif_check")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account3", "ZZZ Sandbox DLS Worldwide")]
        public virtual void VerifyTheButtonsWhenAnyAccountSelected_S1()
        {
            this.VerifyTheButtonsWhenAnyAccountSelected("S1", "tst.admnsys16", "Te$t1234", "010-test account", "tarrif_check", "ZZZ Sandbox DLS Worldwide", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheButtonsWhenValuesAreNotPassedInTextBoxes(string scenario, string username, string password, string account1, string account2, string account3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the buttons when values are not passed in text boxes", @__tags);
#line 125
this.ScenarioSetup(scenarioInfo);
#line 126
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 127
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 129
 testRunner.Then(string.Format("I should be able to select multiple accounts {0}, {1} and {2}", account1, account2, account3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 130
 testRunner.And("I should be able to see following text boxes - Minimum, Min Threshold, Min Amount" +
                    " and Set Accessorials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.And("and Minimum, Min Threshold and Min Amount buttons should be disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the buttons when values are not passed in text boxes: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account1", "010-test account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account2", "tarrif_check")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account3", "ZZZ Sandbox DLS Worldwide")]
        public virtual void VerifyTheButtonsWhenValuesAreNotPassedInTextBoxes_S1()
        {
            this.VerifyTheButtonsWhenValuesAreNotPassedInTextBoxes("S1", "tst.admnsys16", "Te$t1234", "010-test account", "tarrif_check", "ZZZ Sandbox DLS Worldwide", ((string[])(null)));
#line hidden
        }
        
        public virtual void TryToPassTheDataWithinTheTextBoxesAndVerifyTheFields(string scenario, string username, string password, string account1, string account2, string account3, string minimum, string minThreshold, string minAmount, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Try to pass the data within the text boxes and verify the fields", @__tags);
#line 138
this.ScenarioSetup(scenarioInfo);
#line 139
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 140
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 142
 testRunner.Then(string.Format("I should be able to select multiple accounts {0}, {1} and {2}", account1, account2, account3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 143
 testRunner.And("I select any carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.And(string.Format("I should be able enter the data in text boxes - {0}, {1} and {2}", minimum, minThreshold, minAmount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.And("and Minimum, Min Threshold and Min Amount buttons should be enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Try to pass the data within the text boxes and verify the fields: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account1", "010-test account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account2", "tarrif_check")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account3", "ZZZ Sandbox DLS Worldwide")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum", "10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinThreshold", "11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinAmount", "12")]
        public virtual void TryToPassTheDataWithinTheTextBoxesAndVerifyTheFields_S1()
        {
            this.TryToPassTheDataWithinTheTextBoxesAndVerifyTheFields("S1", "tst.admnsys16", "Te$t1234", "010-test account", "tarrif_check", "ZZZ Sandbox DLS Worldwide", "10", "11", "12", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheDataFormatForTheTextBoxesAndVerifyTheFields(string scenario, string username, string password, string account1, string account2, string account3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the data format for the text boxes and verify the fields", @__tags);
#line 152
this.ScenarioSetup(scenarioInfo);
#line 153
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 154
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 156
 testRunner.Then(string.Format("I should be able to select multiple accounts {0}, {1} and {2}", account1, account2, account3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 157
 testRunner.And("Minimum text box format should be currency or percentage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
 testRunner.And("MinThreshold text box format should be currency", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.And("MinAmount text box format should be currency", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the data format for the text boxes and verify the fields: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account1", "010-test account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account2", "tarrif_check")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account3", "ZZZ Sandbox DLS Worldwide")]
        public virtual void VerifyTheDataFormatForTheTextBoxesAndVerifyTheFields_S1()
        {
            this.VerifyTheDataFormatForTheTextBoxesAndVerifyTheFields("S1", "tst.admnsys16", "Te$t1234", "010-test account", "tarrif_check", "ZZZ Sandbox DLS Worldwide", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyMinColumnFieldsWhenDataIsAppliedForMinimumColumn(string scenario, string username, string password, string account1, string account2, string account3, string minimum, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Min column fields when data is applied for Minimum column", @__tags);
#line 166
this.ScenarioSetup(scenarioInfo);
#line 167
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 168
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 170
 testRunner.Then(string.Format("I should be able to select multiple accounts {0}, {1} and {2}", account1, account2, account3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 171
 testRunner.And("I select any carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
 testRunner.And(string.Format("I should be able enter the data in {0} and click on Min button", minimum), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
 testRunner.And(string.Format("Passed data in min text box should be applied for Minimum column fields {0}", minimum), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Min column fields when data is applied for Minimum column: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account1", "010-test account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account2", "tarrif_check")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account3", "ZZZ Sandbox DLS Worldwide")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum", "10.0")]
        public virtual void VerifyMinColumnFieldsWhenDataIsAppliedForMinimumColumn_S1()
        {
            this.VerifyMinColumnFieldsWhenDataIsAppliedForMinimumColumn("S1", "tst.admnsys16", "Te$t1234", "010-test account", "tarrif_check", "ZZZ Sandbox DLS Worldwide", "10.0", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyMinThresholdColumnFieldsWhenDataIsAppliedForMinimumThresholdColumn(string scenario, string username, string password, string account1, string account2, string account3, string minimumThreshold, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Min threshold column fields when data is applied for Minimum Threshold col" +
                    "umn", @__tags);
#line 181
this.ScenarioSetup(scenarioInfo);
#line 182
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 183
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 185
 testRunner.Then(string.Format("I should be able to select multiple accounts {0}, {1} and {2}", account1, account2, account3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 186
 testRunner.And("I select any carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
 testRunner.And(string.Format("I should be able enter the data in {0} and click on Minimum threshold button", minimumThreshold), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 188
 testRunner.And(string.Format("Passed data in min text box should be applied for Minimum Threshold column fields" +
                        " {0}", minimumThreshold), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Min threshold column fields when data is applied for Minimum Threshold col" +
            "umn: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account1", "010-test account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account2", "tarrif_check")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account3", "ZZZ Sandbox DLS Worldwide")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinimumThreshold", "10.0")]
        public virtual void VerifyMinThresholdColumnFieldsWhenDataIsAppliedForMinimumThresholdColumn_S1()
        {
            this.VerifyMinThresholdColumnFieldsWhenDataIsAppliedForMinimumThresholdColumn("S1", "tst.admnsys16", "Te$t1234", "010-test account", "tarrif_check", "ZZZ Sandbox DLS Worldwide", "10.0", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyMinAmountColumnFieldsWhenDataIsAppliedForMinimumAmountColumn(string scenario, string username, string password, string account1, string account2, string account3, string minAmount, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Min amount column fields when data is applied for Minimum Amount column", @__tags);
#line 195
this.ScenarioSetup(scenarioInfo);
#line 196
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 197
 testRunner.And("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.When("I click on Pricing button from Maintenance tool page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 199
 testRunner.Then(string.Format("I should be able to select multiple accounts {0}, {1} and {2}", account1, account2, account3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 200
 testRunner.And("I select any carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
 testRunner.And(string.Format("I should be able enter the data in {0} and click on Minimum ammount button", minAmount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
 testRunner.And(string.Format("Passed data in min text box should be applied for Minimum amount column fields {0" +
                        "}", minAmount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Min amount column fields when data is applied for Minimum Amount column: S" +
            "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CarrierRateSettings_AdminView_StationOrCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25384")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "tst.admnsys16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account1", "010-test account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account2", "tarrif_check")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Account3", "ZZZ Sandbox DLS Worldwide")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinAmount", "10.0")]
        public virtual void VerifyMinAmountColumnFieldsWhenDataIsAppliedForMinimumAmountColumn_S1()
        {
            this.VerifyMinAmountColumnFieldsWhenDataIsAppliedForMinimumAmountColumn("S1", "tst.admnsys16", "Te$t1234", "010-test account", "tarrif_check", "ZZZ Sandbox DLS Worldwide", "10.0", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
