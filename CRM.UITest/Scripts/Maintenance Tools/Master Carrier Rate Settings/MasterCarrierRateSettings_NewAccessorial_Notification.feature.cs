// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.MaintenanceTools.MasterCarrierRateSettings
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class MasterCarrierRateSettings_NewAccessorial_NotificationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "MasterCarrierRateSettings_NewAccessorial_Notification.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MasterCarrierRateSettings_NewAccessorial_Notification", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint83",
                        "44491"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "MasterCarrierRateSettings_NewAccessorial_Notification")))
            {
                global::CRM.UITest.Scripts.MaintenanceTools.MasterCarrierRateSettings.MasterCarrierRateSettings_NewAccessorial_NotificationFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _44491VerifyNotificationAccessorialAndItsInAlphabeticalOrderInTheAccessorialTypeDropdownList(string carriers, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44491 Verify Notification Accessorial and its in Alphabetical order in the Access" +
                    "orial type dropdown list", @__tags);
#line 5
 this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("I am a pricing configuration or config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("I have selected Customer in Master Carrier Rate settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And(string.Format("I have selected one or more{0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("I clicked on the Set Accessorials button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("the Set Individual Accessorials modal is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.When("I click Select Accessorial Type dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.Then("I will see Notification as one of the Accessorial in the Select Accessorial Type " +
                    "dropdown list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 13
 testRunner.And("the Notification Accessorial will be displayed alphabetically within the Select A" +
                    "ccessorial Type dropdown list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44491 Verify Notification Accessorial and its in Alphabetical order in the Access" +
            "orial type dropdown list: Single")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_NewAccessorial_Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44491")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Single")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Carriers", "Single")]
        public virtual void _44491VerifyNotificationAccessorialAndItsInAlphabeticalOrderInTheAccessorialTypeDropdownList_Single()
        {
#line 5
 this._44491VerifyNotificationAccessorialAndItsInAlphabeticalOrderInTheAccessorialTypeDropdownList("Single", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44491 Verify Notification Accessorial and its in Alphabetical order in the Access" +
            "orial type dropdown list: Multiple")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_NewAccessorial_Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44491")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Multiple")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Carriers", "Multiple")]
        public virtual void _44491VerifyNotificationAccessorialAndItsInAlphabeticalOrderInTheAccessorialTypeDropdownList_Multiple()
        {
#line 5
 this._44491VerifyNotificationAccessorialAndItsInAlphabeticalOrderInTheAccessorialTypeDropdownList("Multiple", ((string[])(null)));
#line hidden
        }
        
        public virtual void _44491VerifyNotificationAccessorialAndItsDisplayedInAlphabeticalOrderInTheAdditionalAccessorialTypeDropdownList(string carriers, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44491 Verify Notification Accessorial and its displayed in Alphabetical order in " +
                    "the additional Accessorial type dropdown list", @__tags);
#line 20
 this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given("I am a pricing configuration or config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.And("I have selected Customer in Master Carrier Rate settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And(string.Format("I have selected one or more{0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("I clicked on the Set Accessorials button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("the Set Individual Accessorials modal is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I clicked on the Add Another Accessorial button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.When("I click the added additional Select Accessorial Type dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.Then("I will see Notification as one of the Accessorial in the added additional Select " +
                    "Accessorial Type dropdown list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 29
 testRunner.And("the Notification Accessorial will be displayed alphabetically within the added ad" +
                    "ditional Select Accessorial Type dropdown list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44491 Verify Notification Accessorial and its displayed in Alphabetical order in " +
            "the additional Accessorial type dropdown list: Single")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_NewAccessorial_Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44491")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Single")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Carriers", "Single")]
        public virtual void _44491VerifyNotificationAccessorialAndItsDisplayedInAlphabeticalOrderInTheAdditionalAccessorialTypeDropdownList_Single()
        {
#line 20
 this._44491VerifyNotificationAccessorialAndItsDisplayedInAlphabeticalOrderInTheAdditionalAccessorialTypeDropdownList("Single", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44491 Verify Notification Accessorial and its displayed in Alphabetical order in " +
            "the additional Accessorial type dropdown list: Multiple")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_NewAccessorial_Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44491")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Multiple")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Carriers", "Multiple")]
        public virtual void _44491VerifyNotificationAccessorialAndItsDisplayedInAlphabeticalOrderInTheAdditionalAccessorialTypeDropdownList_Multiple()
        {
#line 20
 this._44491VerifyNotificationAccessorialAndItsDisplayedInAlphabeticalOrderInTheAdditionalAccessorialTypeDropdownList("Multiple", ((string[])(null)));
#line hidden
        }
        
        public virtual void _44491VerifyTheMasterCarrierRateSettingsGridDisplaysNotificationAccessorialAndItsValuesForTheSelectedCarrier(string carriers, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44491 Verify the Master Carrier Rate Settings grid displays Notification Accessor" +
                    "ial and its values for the selected Carrier", @__tags);
#line 36
 this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("I am a pricing configuration or config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
 testRunner.And("I have selected Customer in Master Carrier Rate settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And(string.Format("I have selected one or more{0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I clicked on the Set Accessorials button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("I selected as Notification Accessorial from the Select Accessorial Type dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("I entered valid data in Accessorial value field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.When("I click on save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.Then("the Notification Accessorial will be displayed as one of the column in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
 testRunner.And("the value will be displayed for each carrier selected in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44491 Verify the Master Carrier Rate Settings grid displays Notification Accessor" +
            "ial and its values for the selected Carrier: Single")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_NewAccessorial_Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44491")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Single")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Carriers", "Single")]
        public virtual void _44491VerifyTheMasterCarrierRateSettingsGridDisplaysNotificationAccessorialAndItsValuesForTheSelectedCarrier_Single()
        {
#line 36
 this._44491VerifyTheMasterCarrierRateSettingsGridDisplaysNotificationAccessorialAndItsValuesForTheSelectedCarrier("Single", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44491 Verify the Master Carrier Rate Settings grid displays Notification Accessor" +
            "ial and its values for the selected Carrier: Multiple")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_NewAccessorial_Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44491")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Multiple")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Carriers", "Multiple")]
        public virtual void _44491VerifyTheMasterCarrierRateSettingsGridDisplaysNotificationAccessorialAndItsValuesForTheSelectedCarrier_Multiple()
        {
#line 36
 this._44491VerifyTheMasterCarrierRateSettingsGridDisplaysNotificationAccessorialAndItsValuesForTheSelectedCarrier("Multiple", ((string[])(null)));
#line hidden
        }
        
        public virtual void _44491VerifyTheNotificationAccessorialIsDisplayedInTheDeleteIndividualAccessorialModalPop_Up(string carriers, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44491 Verify the Notification Accessorial is displayed in the Delete Individual A" +
                    "ccessorial Modal Pop-Up", @__tags);
#line 52
 this.ScenarioSetup(scenarioInfo);
#line 53
 testRunner.Given("I am a pricing configuration or config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.And("I have selected Customer with Notification Accessorial in Master Carrier Rate set" +
                    "tings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.And(string.Format("I have selected one or more{0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And("I clicked on the Delete Accessorials button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.When("the Delete Individual Accessorials modal is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
 testRunner.Then("I will see the Notification Accessorial is displayed in the Delete Individual Acc" +
                    "essorial Modal Pop-Up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44491 Verify the Notification Accessorial is displayed in the Delete Individual A" +
            "ccessorial Modal Pop-Up: Single")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_NewAccessorial_Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44491")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Single")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Carriers", "Single")]
        public virtual void _44491VerifyTheNotificationAccessorialIsDisplayedInTheDeleteIndividualAccessorialModalPop_Up_Single()
        {
#line 52
 this._44491VerifyTheNotificationAccessorialIsDisplayedInTheDeleteIndividualAccessorialModalPop_Up("Single", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44491 Verify the Notification Accessorial is displayed in the Delete Individual A" +
            "ccessorial Modal Pop-Up: Multiple")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_NewAccessorial_Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44491")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Multiple")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Carriers", "Multiple")]
        public virtual void _44491VerifyTheNotificationAccessorialIsDisplayedInTheDeleteIndividualAccessorialModalPop_Up_Multiple()
        {
#line 52
 this._44491VerifyTheNotificationAccessorialIsDisplayedInTheDeleteIndividualAccessorialModalPop_Up("Multiple", ((string[])(null)));
#line hidden
        }
        
        public virtual void _44491VerifyNADisplayedInNotificationAccessorialColumnInTheGridForTheSelectedCarrierWhenNotificationAccessorialIsDeleted(string carriers, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44491 Verify N/A displayed in Notification Accessorial column in the grid for the" +
                    " selected carrier when Notification Accessorial is deleted", @__tags);
#line 65
 this.ScenarioSetup(scenarioInfo);
#line 66
 testRunner.Given("I am a pricing configuration or config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
 testRunner.And("I have selected Customer with Notification Accessorial in Master Carrier Rate set" +
                    "tings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And(string.Format("I have selected one or more{0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And("I clicked on the Delete Accessorials button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.And("I have selected Notification Accessorial from the Delete Individual Accessorials " +
                    "modal PopUp", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.When("I click the Delete button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
 testRunner.Then("the value N/A will be displayed for the Notification Accessorial column in the gr" +
                    "id for each selected Carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44491 Verify N/A displayed in Notification Accessorial column in the grid for the" +
            " selected carrier when Notification Accessorial is deleted: Single")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_NewAccessorial_Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44491")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Single")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Carriers", "Single")]
        public virtual void _44491VerifyNADisplayedInNotificationAccessorialColumnInTheGridForTheSelectedCarrierWhenNotificationAccessorialIsDeleted_Single()
        {
#line 65
 this._44491VerifyNADisplayedInNotificationAccessorialColumnInTheGridForTheSelectedCarrierWhenNotificationAccessorialIsDeleted("Single", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44491 Verify N/A displayed in Notification Accessorial column in the grid for the" +
            " selected carrier when Notification Accessorial is deleted: Multiple")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_NewAccessorial_Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44491")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Multiple")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Carriers", "Multiple")]
        public virtual void _44491VerifyNADisplayedInNotificationAccessorialColumnInTheGridForTheSelectedCarrierWhenNotificationAccessorialIsDeleted_Multiple()
        {
#line 65
 this._44491VerifyNADisplayedInNotificationAccessorialColumnInTheGridForTheSelectedCarrierWhenNotificationAccessorialIsDeleted("Multiple", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("44491 Verify Notification Accessorial column will not be displayed in the grid wh" +
            "en its deleted for all selected carrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_NewAccessorial_Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44491")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        public virtual void _44491VerifyNotificationAccessorialColumnWillNotBeDisplayedInTheGridWhenItsDeletedForAllSelectedCarrier()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44491 Verify Notification Accessorial column will not be displayed in the grid wh" +
                    "en its deleted for all selected carrier", new string[] {
                        "Functional"});
#line 79
 this.ScenarioSetup(scenarioInfo);
#line 80
 testRunner.Given("I am a pricing configuration or config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
 testRunner.And("I have selected Customer with Notification Accessorial in Master Carrier Rate set" +
                    "tings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.And("I have selected all Carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.And("I clicked on the Delete Accessorials button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.And("I have selected Notification Accessorial from the Delete Individual Accessorials " +
                    "modal PopUp", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.When("I click the Delete button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 86
 testRunner.Then("the Notification Accessorial column will not be displayed in the grid for all the" +
                    " Carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
