// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.MaintenanceTools.MasterCarrierRateSettings
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class MasterCarrierRateSettings_PageDisplaysFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MasterCarrierRateSettings_PageDisplays.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MasterCarrierRateSettings_PageDisplays", null, ProgrammingLanguage.CSharp, new string[] {
                        "33386",
                        "Sprint72"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "MasterCarrierRateSettings_PageDisplays")))
            {
                CRM.UITest.Scripts.MaintenanceTools.MasterCarrierRateSettings.MasterCarrierRateSettings_PageDisplaysFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _33386_VerifyUserSelectingOnlyOneCustomer(string scenario, string userName, string password, string customerName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("33386_Verify user selecting only one customer", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given(string.Format("I am a system admin or pricing user {0} and {1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.When("I am on Master Carrier Rate Settings Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
testRunner.Then(string.Format("I am able to select one customer {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("33386_Verify user selecting only one customer: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_PageDisplays")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("33386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint72")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:userName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:customerName", "testMCRSpage1226")]
        public virtual void _33386_VerifyUserSelectingOnlyOneCustomer_S1()
        {
            this._33386_VerifyUserSelectingOnlyOneCustomer("s1", "systemadmin", "Te$t1234", "testMCRSpage1226", ((string[])(null)));
#line hidden
        }
        
        public virtual void _33386_VerifyTheGridWhenUserSelectedCustomerDoesNotHaveCarrierSpecificPricing(string scenario, string userName, string password, string customerName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("33386_Verify the grid when user selected customer does not have carrier specific " +
                    "pricing", @__tags);
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
testRunner.Given(string.Format("I am a system admin or pricing user {0} and {1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
testRunner.And("I am on Master Carrier Rate Settings Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
testRunner.When(string.Format("I select the customer that does not have carrier specific pricing {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
testRunner.Then("the grid will display for all carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
testRunner.And(string.Format("the fields Gainshare, Minimum, Min Threshold, Min Amount and Master Accessorial C" +
                        "harge will update with the values submitted in CSR for the customer {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("33386_Verify the grid when user selected customer does not have carrier specific " +
            "pricing: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_PageDisplays")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("33386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint72")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:userName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:customerName", "custolevelgainshareswa")]
        public virtual void _33386_VerifyTheGridWhenUserSelectedCustomerDoesNotHaveCarrierSpecificPricing_S1()
        {
            this._33386_VerifyTheGridWhenUserSelectedCustomerDoesNotHaveCarrierSpecificPricing("s1", "systemadmin", "Te$t1234", "custolevelgainshareswa", ((string[])(null)));
#line hidden
        }
        
        public virtual void _33386_VerifyTheGridWhenUserSelectedCustomerHasCarrierSpecificPricing(string scenario, string userName, string password, string customerName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("33386_Verify the grid when user selected customer has carrier specific pricing", @__tags);
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
testRunner.Given(string.Format("I am a system admin or pricing user {0} and {1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
testRunner.And("I am on Master Carrier Rate Settings Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
testRunner.When(string.Format("I select the customer that has carrier specific pricing {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
testRunner.Then("the grid will display for all carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
testRunner.And(string.Format("the fields Gainshare, Minimum, Min Threshold, Min Amount and Master Accessorial C" +
                        "harge will update with the values submitted in CSR for carriers with carrier spe" +
                        "cific pricing {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("33386_Verify the grid when user selected customer has carrier specific pricing: s" +
            "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_PageDisplays")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("33386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint72")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:userName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:customerName", "MasterCRSPTest")]
        public virtual void _33386_VerifyTheGridWhenUserSelectedCustomerHasCarrierSpecificPricing_S1()
        {
            this._33386_VerifyTheGridWhenUserSelectedCustomerHasCarrierSpecificPricing("s1", "systemadmin", "Te$t1234", "MasterCRSPTest", ((string[])(null)));
#line hidden
        }
        
        public virtual void _33386_VerifyTheGridWhenTheSelectedCustomerHaveOneOrMoreIndividualAccessorials(string scenario, string userName, string password, string customerName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("33386_Verify the grid when the selected customer have one or more individual acce" +
                    "ssorials", @__tags);
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
testRunner.Given(string.Format("I am a system admin or pricing user {0} and {1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
testRunner.And("I am on Master Carrier Rate Settings Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
testRunner.When(string.Format("I selected the customer {0} having one or more individual accessorials", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
testRunner.Then(string.Format("the grid must be updated with individual accessorials associated with selected cu" +
                        "stomer {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("33386_Verify the grid when the selected customer have one or more individual acce" +
            "ssorials: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_PageDisplays")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("33386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint72")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:userName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:customerName", "testMCRSpage1226")]
        public virtual void _33386_VerifyTheGridWhenTheSelectedCustomerHaveOneOrMoreIndividualAccessorials_S1()
        {
            this._33386_VerifyTheGridWhenTheSelectedCustomerHaveOneOrMoreIndividualAccessorials("s1", "systemadmin", "Te$t1234", "testMCRSpage1226", ((string[])(null)));
#line hidden
        }
        
        public virtual void _33386_VerifyTheGridWhenUserExcludedTheCarriersWhileSubmittingCSR(string scenario, string userName, string password, string customerName, string excludedCarriers, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("33386_Verify the grid when user excluded the carriers while submitting CSR", @__tags);
#line 50
this.ScenarioSetup(scenarioInfo);
#line 51
testRunner.Given(string.Format("I am a system admin or pricing user {0} and {1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 52
testRunner.And("I am on Master Carrier Rate Settings Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
testRunner.When(string.Format("I selected {0} with excludedcarriers", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
testRunner.Then(string.Format("the {0} will be inactive in grid", excludedCarriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("33386_Verify the grid when user excluded the carriers while submitting CSR: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_PageDisplays")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("33386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint72")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:userName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:customerName", "MasterCRSPTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:excludedCarriers", "Con-Way,R & L Carriers")]
        public virtual void _33386_VerifyTheGridWhenUserExcludedTheCarriersWhileSubmittingCSR_S1()
        {
            this._33386_VerifyTheGridWhenUserExcludedTheCarriersWhileSubmittingCSR("s1", "systemadmin", "Te$t1234", "MasterCRSPTest", "Con-Way,R & L Carriers", ((string[])(null)));
#line hidden
        }
        
        public virtual void _33386_VerifyTheCarrierListOfAlphabeticalOrder(string scenario, string userName, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("33386_Verify the carrier list of alphabetical order", @__tags);
#line 61
this.ScenarioSetup(scenarioInfo);
#line 62
testRunner.Given(string.Format("I am a system admin or pricing user {0} and {1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 63
testRunner.When("I am on Master Carrier Rate Settings Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
testRunner.Then("carriers should be displayed in alphabetical order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("33386_Verify the carrier list of alphabetical order: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MasterCarrierRateSettings_PageDisplays")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("33386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint72")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:userName", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        public virtual void _33386_VerifyTheCarrierListOfAlphabeticalOrder_S1()
        {
            this._33386_VerifyTheCarrierListOfAlphabeticalOrder("s1", "systemadmin", "Te$t1234", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
