// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.MaintenanceTools.MasterCarrierRateSettings
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _48628_MasterCarrierRateSettings_AccessorialGainshareType_OptionsAndDisplayFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Display.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
                    "splay", null, ProgrammingLanguage.CSharp, new string[] {
                        "48628",
                        "Sprint87"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
                            "splay")))
            {
                global::CRM.UITest.Scripts.MaintenanceTools.MasterCarrierRateSettings._48628_MasterCarrierRateSettings_AccessorialGainshareType_OptionsAndDisplayFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _48628_VerifyTheSetGainshareTypeField(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 - Verify the Set Gainshare Type field", exampleTags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.When("I arrive on the Set Individual Accessorials modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("I will see a new field Set Gainshare Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
 testRunner.And("the Set Gainshare Type field will be a drop down list with the following options:" +
                    " % over cost,Flat over cost,Set flat amount", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("I will no longer see the field Accessorial Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 - Verify the Set Gainshare Type field: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628_VerifyTheSetGainshareTypeField_SingleCarrier()
        {
#line 4
this._48628_VerifyTheSetGainshareTypeField("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 - Verify the Set Gainshare Type field: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628_VerifyTheSetGainshareTypeField_MultipleCarrier()
        {
#line 4
this._48628_VerifyTheSetGainshareTypeField("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628_VerifyTheSetGainshareTypeFieldWhileAddingAnotherAccessorial(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 - Verify the Set Gainshare Type field while adding another accessorial", exampleTags);
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I am on Set Individual Accessorials modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.When("I click on Add Another Accessorial button of Set Individual Accessorials modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.Then("I will see a new field named Set Gainshare Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 29
 testRunner.And("Set Gainshare Type field will be a drop down list with the following options: % o" +
                    "ver cost,Flat over cost,Set flat amount", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("I will no longer see the field Accessorial Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 - Verify the Set Gainshare Type field while adding another accessorial: Sin" +
            "gleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628_VerifyTheSetGainshareTypeFieldWhileAddingAnotherAccessorial_SingleCarrier()
        {
#line 20
this._48628_VerifyTheSetGainshareTypeFieldWhileAddingAnotherAccessorial("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 - Verify the Set Gainshare Type field while adding another accessorial: Mul" +
            "tipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628_VerifyTheSetGainshareTypeFieldWhileAddingAnotherAccessorial_MultipleCarrier()
        {
#line 20
this._48628_VerifyTheSetGainshareTypeFieldWhileAddingAnotherAccessorial("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628_VerifyAndValidateOverCostField(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 - Verify and validate % over cost field", exampleTags);
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I am on Set Individual Accessorials modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.When("I Select % over cost from the Set Gainshare Type drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.Then("I will see a new field called % over cost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
 testRunner.And("Over cost field will be required, editable, numeric", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And("Over cost field will be % formatted, allow up to 2 decimal places, auto-populate " +
                    "to 2 decimal places", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And("Over cost field will take one as min value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And("Over cost field will take hundred as max value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 - Verify and validate % over cost field: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628_VerifyAndValidateOverCostField_SingleCarrier()
        {
#line 37
this._48628_VerifyAndValidateOverCostField("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 - Verify and validate % over cost field: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628_VerifyAndValidateOverCostField_MultipleCarrier()
        {
#line 37
this._48628_VerifyAndValidateOverCostField("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628_VerifyOverCostFieldWhileEnteringAValueLessThan1(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 - Verify over cost field while entering a value less than 1", exampleTags);
#line 56
this.ScenarioSetup(scenarioInfo);
#line 57
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.And("I am on Set Individual Accessorials modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.And("I selected % over cost from the Set Gainshare Type drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.When("Over cost value entered is less than one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
 testRunner.Then("Over cost field will not accept the value less than one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 - Verify over cost field while entering a value less than 1: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628_VerifyOverCostFieldWhileEnteringAValueLessThan1_SingleCarrier()
        {
#line 56
this._48628_VerifyOverCostFieldWhileEnteringAValueLessThan1("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 - Verify over cost field while entering a value less than 1: MultipleCarrie" +
            "r")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628_VerifyOverCostFieldWhileEnteringAValueLessThan1_MultipleCarrier()
        {
#line 56
this._48628_VerifyOverCostFieldWhileEnteringAValueLessThan1("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628_VerifyOverCostFieldWhileEnteringMoreThan100(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 - Verify over cost field while entering more than 100", exampleTags);
#line 72
this.ScenarioSetup(scenarioInfo);
#line 73
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 74
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.And("I am on Set Individual Accessorials modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("I selected % over cost from the Set Gainshare Type drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.When("entered Over cost value is more than hundred", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
 testRunner.Then("Over cost field will not accept more than more than hundred", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 - Verify over cost field while entering more than 100: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628_VerifyOverCostFieldWhileEnteringMoreThan100_SingleCarrier()
        {
#line 72
this._48628_VerifyOverCostFieldWhileEnteringMoreThan100("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 - Verify over cost field while entering more than 100: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628_VerifyOverCostFieldWhileEnteringMoreThan100_MultipleCarrier()
        {
#line 72
this._48628_VerifyOverCostFieldWhileEnteringMoreThan100("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628_VerifyAndValidateFlatOverCostField(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 - Verify and validate Flat over cost field", exampleTags);
#line 89
this.ScenarioSetup(scenarioInfo);
#line 90
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 91
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.And("I am on Set Individual Accessorials modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.When("I Select Flat over cost from the Set Gainshare Type drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
 testRunner.Then("I will see a new field called Flat over cost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 98
 testRunner.And("Flat over cost field will be required, editable, numeric", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
 testRunner.And("Flat over cost field will be us currency formatted formatted, allow up to 2 decim" +
                    "al places, auto-populate to 2 decimal places", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
 testRunner.And("Flat over cost field will take min value as one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.And("Flat over cost field will take 999 point 99 as max value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 - Verify and validate Flat over cost field: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628_VerifyAndValidateFlatOverCostField_SingleCarrier()
        {
#line 89
this._48628_VerifyAndValidateFlatOverCostField("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 - Verify and validate Flat over cost field: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628_VerifyAndValidateFlatOverCostField_MultipleCarrier()
        {
#line 89
this._48628_VerifyAndValidateFlatOverCostField("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyFlatOverCostWhileEnteringAValueLessThan1(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Flat over cost while entering a value less than 1", exampleTags);
#line 108
this.ScenarioSetup(scenarioInfo);
#line 109
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 110
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
 testRunner.And("I am on Set Individual Accessorials modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
 testRunner.And("I selected Flat over cost from the Set Gainshare Type drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.When("I have entered Flat over cost value less than one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
 testRunner.Then("Flat over cost field will not accept the value less than one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Flat over cost while entering a value less than 1: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void VerifyFlatOverCostWhileEnteringAValueLessThan1_SingleCarrier()
        {
#line 108
this.VerifyFlatOverCostWhileEnteringAValueLessThan1("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Flat over cost while entering a value less than 1: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void VerifyFlatOverCostWhileEnteringAValueLessThan1_MultipleCarrier()
        {
#line 108
this.VerifyFlatOverCostWhileEnteringAValueLessThan1("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyFlatOverCostWhileEnteringAValueMoreThan999_99(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Flat over cost while entering a value more than 999.99", exampleTags);
#line 124
this.ScenarioSetup(scenarioInfo);
#line 125
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 126
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
 testRunner.And("I am on Set Individual Accessorials modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.And("I selected Flat over cost from the Set Gainshare Type drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
 testRunner.When("I have entered Flat over cost value more than 999.99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
 testRunner.Then("Flat over cost field will not accept the value more than 999.99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Flat over cost while entering a value more than 999.99: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void VerifyFlatOverCostWhileEnteringAValueMoreThan999_99_SingleCarrier()
        {
#line 124
this.VerifyFlatOverCostWhileEnteringAValueMoreThan999_99("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Flat over cost while entering a value more than 999.99: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void VerifyFlatOverCostWhileEnteringAValueMoreThan999_99_MultipleCarrier()
        {
#line 124
this.VerifyFlatOverCostWhileEnteringAValueMoreThan999_99("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628_VerifyAndValidateSetFlatAmountFields(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 - Verify and validate Set flat amount fields", exampleTags);
#line 141
this.ScenarioSetup(scenarioInfo);
#line 142
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 143
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
 testRunner.And("I am on Set Individual Accessorials modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
 testRunner.When("I Select Set flat amount from the Set Gainshare Type drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 149
 testRunner.Then("I will see a new field called Set flat amount", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 150
 testRunner.And("Set flat amount field will be required, editable, numeric", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.And("Set flat amount field will be $ formatted, allow up two decimal places, auto-popu" +
                    "late two decimal places", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.And("Set flat amount field will take min value as one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
 testRunner.And("Set flat amount field will take 999 point 99 as max value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 - Verify and validate Set flat amount fields: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628_VerifyAndValidateSetFlatAmountFields_SingleCarrier()
        {
#line 141
this._48628_VerifyAndValidateSetFlatAmountFields("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 - Verify and validate Set flat amount fields: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628_VerifyAndValidateSetFlatAmountFields_MultipleCarrier()
        {
#line 141
this._48628_VerifyAndValidateSetFlatAmountFields("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifySetFlatAmountWhileEnteringAValueLessThan1(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Set flat amount while entering a value less than 1", exampleTags);
#line 161
this.ScenarioSetup(scenarioInfo);
#line 162
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 163
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
 testRunner.And("I am on Set Individual Accessorials modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 168
 testRunner.And("I selected Set flat amount from the Set Gainshare Type drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.When("I have entered Set flat amount less than one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 170
 testRunner.Then("Set flat amount field will not accept a value less than one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Set flat amount while entering a value less than 1: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void VerifySetFlatAmountWhileEnteringAValueLessThan1_SingleCarrier()
        {
#line 161
this.VerifySetFlatAmountWhileEnteringAValueLessThan1("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Set flat amount while entering a value less than 1: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void VerifySetFlatAmountWhileEnteringAValueLessThan1_MultipleCarrier()
        {
#line 161
this.VerifySetFlatAmountWhileEnteringAValueLessThan1("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifySetFlatAmountWhileEnteringMoreThan100(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Set flat amount while entering more than 100", exampleTags);
#line 177
this.ScenarioSetup(scenarioInfo);
#line 178
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 179
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.And("I am on Set Individual Accessorials modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
 testRunner.And("I selected Set flat amount from the Set Gainshare Type drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
 testRunner.When("I have entered \'999.99\' as Set flat amount", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 186
 testRunner.Then("The field will not accept more than \'999.99\' value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Set flat amount while entering more than 100: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void VerifySetFlatAmountWhileEnteringMoreThan100_SingleCarrier()
        {
#line 177
this.VerifySetFlatAmountWhileEnteringMoreThan100("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Set flat amount while entering more than 100: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void VerifySetFlatAmountWhileEnteringMoreThan100_MultipleCarrier()
        {
#line 177
this.VerifySetFlatAmountWhileEnteringMoreThan100("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628VerifyValidationOfOverCostFieldWhenUserSelectsOverCostFromTheSetGainshareTypeDropDownList(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Verify validation of % over cost field when user selects % over cost from" +
                    " the Set Gainshare Type drop down list", exampleTags);
#line 194
this.ScenarioSetup(scenarioInfo);
#line 195
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 196
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
 testRunner.And("I clicked on the Add Another Accessorial button in the Set Individual Accessorial" +
                    "s modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
 testRunner.When("I Select % over cost from the Set Gainshare Type dropdown list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 202
 testRunner.Then("I will see a new required field % over cost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 203
 testRunner.And("% over cost is editable, allows numeric values upto two decimal places", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 204
 testRunner.And("% over cost % formatted, displays % after the numeric value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
 testRunner.And("The Min value % over cost field takes is 1.00%", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 206
 testRunner.And("The max value % over cost field accepts is 100.00%", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Verify validation of % over cost field when user selects % over cost from" +
            " the Set Gainshare Type drop down list: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628VerifyValidationOfOverCostFieldWhenUserSelectsOverCostFromTheSetGainshareTypeDropDownList_SingleCarrier()
        {
#line 194
this._48628VerifyValidationOfOverCostFieldWhenUserSelectsOverCostFromTheSetGainshareTypeDropDownList("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Verify validation of % over cost field when user selects % over cost from" +
            " the Set Gainshare Type drop down list: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628VerifyValidationOfOverCostFieldWhenUserSelectsOverCostFromTheSetGainshareTypeDropDownList_MultipleCarrier()
        {
#line 194
this._48628VerifyValidationOfOverCostFieldWhenUserSelectsOverCostFromTheSetGainshareTypeDropDownList("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628TryToPassAValueMoreThan2DecimalPlacesToOverCostFieldAndVerifyTheValidation(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Try to pass a value more than 2 decimal places to % over cost field and v" +
                    "erify the validation", exampleTags);
#line 213
this.ScenarioSetup(scenarioInfo);
#line 214
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 215
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.And("I clicked on the Add Another Accessorial button in the Set Individual Accessorial" +
                    "s modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 220
 testRunner.And("% over cost has been selected as Set Gainshare Type from the drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
 testRunner.When("I enter a value more than two decimal places to % over cost field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 222
 testRunner.Then("% over cost field should not accept a value which is more than two decimal places" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value more than 2 decimal places to % over cost field and v" +
            "erify the validation: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628TryToPassAValueMoreThan2DecimalPlacesToOverCostFieldAndVerifyTheValidation_SingleCarrier()
        {
#line 213
this._48628TryToPassAValueMoreThan2DecimalPlacesToOverCostFieldAndVerifyTheValidation("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value more than 2 decimal places to % over cost field and v" +
            "erify the validation: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628TryToPassAValueMoreThan2DecimalPlacesToOverCostFieldAndVerifyTheValidation_MultipleCarrier()
        {
#line 213
this._48628TryToPassAValueMoreThan2DecimalPlacesToOverCostFieldAndVerifyTheValidation("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628TryToPassAValueLessThan1_00ToOverCostFieldAndVerifyTheValidation(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Try to pass a value less than 1.00% to % over cost field and verify the v" +
                    "alidation", exampleTags);
#line 229
this.ScenarioSetup(scenarioInfo);
#line 230
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 231
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 232
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 233
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 234
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
 testRunner.And("I clicked on the Add Another Accessorial button in the Set Individual Accessorial" +
                    "s modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 236
 testRunner.And("% over cost has been selected as Set Gainshare Type from the drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 237
 testRunner.When("I enter a value less than one to % over cost field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 238
 testRunner.Then("% over cost field should not accept a value less than one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value less than 1.00% to % over cost field and verify the v" +
            "alidation: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628TryToPassAValueLessThan1_00ToOverCostFieldAndVerifyTheValidation_SingleCarrier()
        {
#line 229
this._48628TryToPassAValueLessThan1_00ToOverCostFieldAndVerifyTheValidation("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value less than 1.00% to % over cost field and verify the v" +
            "alidation: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628TryToPassAValueLessThan1_00ToOverCostFieldAndVerifyTheValidation_MultipleCarrier()
        {
#line 229
this._48628TryToPassAValueLessThan1_00ToOverCostFieldAndVerifyTheValidation("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628TryToPassAValueMoreThan100_00ToOverCostFieldAndVerifyTheValidation(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Try to pass a value more than 100.00% to % over cost field and verify the" +
                    " validation", exampleTags);
#line 245
this.ScenarioSetup(scenarioInfo);
#line 246
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 247
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 248
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 249
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 250
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 251
 testRunner.And("I clicked on the Add Another Accessorial button in the Set Individual Accessorial" +
                    "s modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 252
 testRunner.And("% over cost has been selected as Set Gainshare Type from the drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 253
 testRunner.When("I enter a value more than hundred to % over cost field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 254
 testRunner.Then("% over cost field should not accept a value more than hundred", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value more than 100.00% to % over cost field and verify the" +
            " validation: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628TryToPassAValueMoreThan100_00ToOverCostFieldAndVerifyTheValidation_SingleCarrier()
        {
#line 245
this._48628TryToPassAValueMoreThan100_00ToOverCostFieldAndVerifyTheValidation("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value more than 100.00% to % over cost field and verify the" +
            " validation: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628TryToPassAValueMoreThan100_00ToOverCostFieldAndVerifyTheValidation_MultipleCarrier()
        {
#line 245
this._48628TryToPassAValueMoreThan100_00ToOverCostFieldAndVerifyTheValidation("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628VerifyValidationOfFlatOverCostFieldWhenUserSelectsFlatOverCostFromTheSetGainshareTypeDropDownList(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Verify validation of Flat over cost field when user selects Flat over cos" +
                    "t from the Set Gainshare Type drop down list", exampleTags);
#line 261
this.ScenarioSetup(scenarioInfo);
#line 262
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 263
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
 testRunner.And("I clicked on the Add Another Accessorial button in the Set Individual Accessorial" +
                    "s modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
 testRunner.When("I Select Flat over cost from the Set Gainshare Type dropdown list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 269
 testRunner.Then("I will see a new required field Flat over cost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 270
 testRunner.And("Flat over cost is editable, allows numeric values upto two decimal places", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 271
 testRunner.And("Flat over cost currency formatted, displays $ before the numeric value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 272
 testRunner.And("The Min value Flat over cost field takes is $1.00", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 273
 testRunner.And("The max value Flat over cost field accepts is $999.99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Verify validation of Flat over cost field when user selects Flat over cos" +
            "t from the Set Gainshare Type drop down list: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628VerifyValidationOfFlatOverCostFieldWhenUserSelectsFlatOverCostFromTheSetGainshareTypeDropDownList_SingleCarrier()
        {
#line 261
this._48628VerifyValidationOfFlatOverCostFieldWhenUserSelectsFlatOverCostFromTheSetGainshareTypeDropDownList("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Verify validation of Flat over cost field when user selects Flat over cos" +
            "t from the Set Gainshare Type drop down list: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628VerifyValidationOfFlatOverCostFieldWhenUserSelectsFlatOverCostFromTheSetGainshareTypeDropDownList_MultipleCarrier()
        {
#line 261
this._48628VerifyValidationOfFlatOverCostFieldWhenUserSelectsFlatOverCostFromTheSetGainshareTypeDropDownList("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628TryToPassAValueMoreThan2DecimalPlacesToFlatOverCostFieldAndVerifyTheValidation(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Try to pass a value more than 2 decimal places to Flat over cost field an" +
                    "d verify the validation", exampleTags);
#line 280
this.ScenarioSetup(scenarioInfo);
#line 281
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 282
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 283
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 284
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 286
 testRunner.And("I clicked on the Add Another Accessorial button in the Set Individual Accessorial" +
                    "s modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 287
 testRunner.And("Flat over cost has been selected as Set Gainshare Type from the drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
 testRunner.When("I enter a value more than two decimal places to Flat over cost field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 289
 testRunner.Then("Flat over cost field should not accept a value which is more than two decimal pla" +
                    "ces", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value more than 2 decimal places to Flat over cost field an" +
            "d verify the validation: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628TryToPassAValueMoreThan2DecimalPlacesToFlatOverCostFieldAndVerifyTheValidation_SingleCarrier()
        {
#line 280
this._48628TryToPassAValueMoreThan2DecimalPlacesToFlatOverCostFieldAndVerifyTheValidation("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value more than 2 decimal places to Flat over cost field an" +
            "d verify the validation: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628TryToPassAValueMoreThan2DecimalPlacesToFlatOverCostFieldAndVerifyTheValidation_MultipleCarrier()
        {
#line 280
this._48628TryToPassAValueMoreThan2DecimalPlacesToFlatOverCostFieldAndVerifyTheValidation("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628TryToPassAValueLessThan1_00ToFlatOverCostFieldAndVerifyTheValidation(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Try to pass a value less than $1.00 to Flat over cost field and verify th" +
                    "e validation", exampleTags);
#line 296
this.ScenarioSetup(scenarioInfo);
#line 297
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 298
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 299
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 300
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 301
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
 testRunner.And("I clicked on the Add Another Accessorial button in the Set Individual Accessorial" +
                    "s modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
 testRunner.And("Flat over cost has been selected as Set Gainshare Type from the drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 304
 testRunner.When("I enter a value less than one to Flat over cost field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 305
 testRunner.Then("Flat over cost field should not accept a value less than one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value less than $1.00 to Flat over cost field and verify th" +
            "e validation: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628TryToPassAValueLessThan1_00ToFlatOverCostFieldAndVerifyTheValidation_SingleCarrier()
        {
#line 296
this._48628TryToPassAValueLessThan1_00ToFlatOverCostFieldAndVerifyTheValidation("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value less than $1.00 to Flat over cost field and verify th" +
            "e validation: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628TryToPassAValueLessThan1_00ToFlatOverCostFieldAndVerifyTheValidation_MultipleCarrier()
        {
#line 296
this._48628TryToPassAValueLessThan1_00ToFlatOverCostFieldAndVerifyTheValidation("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628TryToPassAValueMoreThan999_99ToFlatOverCostFieldAndVerifyTheValidation(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Try to pass a value more than $999.99 to Flat over cost field and verify " +
                    "the validation", exampleTags);
#line 312
this.ScenarioSetup(scenarioInfo);
#line 313
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 314
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 315
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
 testRunner.And("I clicked on the Add Another Accessorial button in the Set Individual Accessorial" +
                    "s modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 319
 testRunner.And("Flat over cost has been selected as Set Gainshare Type from the drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 320
 testRunner.When("I enter a value more than $999.99 to Flat over cost field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 321
 testRunner.Then("Flat over cost field should not accept a value more than $999.99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value more than $999.99 to Flat over cost field and verify " +
            "the validation: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628TryToPassAValueMoreThan999_99ToFlatOverCostFieldAndVerifyTheValidation_SingleCarrier()
        {
#line 312
this._48628TryToPassAValueMoreThan999_99ToFlatOverCostFieldAndVerifyTheValidation("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value more than $999.99 to Flat over cost field and verify " +
            "the validation: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628TryToPassAValueMoreThan999_99ToFlatOverCostFieldAndVerifyTheValidation_MultipleCarrier()
        {
#line 312
this._48628TryToPassAValueMoreThan999_99ToFlatOverCostFieldAndVerifyTheValidation("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628VerifyValidationOfSetFlatAmountFieldWhenUserSelectsSetFlatAmountFromTheSetGainshareTypeDropDownList(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Verify validation of Set flat amount field when user selects Set flat amo" +
                    "unt from the Set Gainshare Type drop down list", exampleTags);
#line 328
this.ScenarioSetup(scenarioInfo);
#line 329
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 330
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 331
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 332
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 333
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 334
 testRunner.And("I clicked on the Add Another Accessorial button in the Set Individual Accessorial" +
                    "s modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 335
 testRunner.When("I Select Set flat amount from the Set Gainshare Type dropdown list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 336
 testRunner.Then("I will see a new required field Set flat amount", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 337
 testRunner.And("Set flat amount is editable, allows numeric values upto two decimal places", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 338
 testRunner.And("Set flat amount currency formatted, displays $ before the numeric value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 339
 testRunner.And("The Min value Set flat amount field takes is $1.00", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 340
 testRunner.And("The max value Set flat amount field accepts is $999.99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Verify validation of Set flat amount field when user selects Set flat amo" +
            "unt from the Set Gainshare Type drop down list: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628VerifyValidationOfSetFlatAmountFieldWhenUserSelectsSetFlatAmountFromTheSetGainshareTypeDropDownList_SingleCarrier()
        {
#line 328
this._48628VerifyValidationOfSetFlatAmountFieldWhenUserSelectsSetFlatAmountFromTheSetGainshareTypeDropDownList("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Verify validation of Set flat amount field when user selects Set flat amo" +
            "unt from the Set Gainshare Type drop down list: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628VerifyValidationOfSetFlatAmountFieldWhenUserSelectsSetFlatAmountFromTheSetGainshareTypeDropDownList_MultipleCarrier()
        {
#line 328
this._48628VerifyValidationOfSetFlatAmountFieldWhenUserSelectsSetFlatAmountFromTheSetGainshareTypeDropDownList("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628TryToPassAValueMoreThan2DecimalPlacesToSetFlatAmountFieldAndVerifyTheValidation(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Try to pass a value more than 2 decimal places to Set flat amount field a" +
                    "nd verify the validation", exampleTags);
#line 347
this.ScenarioSetup(scenarioInfo);
#line 348
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 349
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 352
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
 testRunner.And("I clicked on the Add Another Accessorial button in the Set Individual Accessorial" +
                    "s modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
 testRunner.And("Set flat amount has been selected as Set Gainshare Type from the drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
 testRunner.When("I enter a value more than two decimal places to Set flat amount field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 356
 testRunner.Then("Set flat amount field should not accept a value which is more than two decimal pl" +
                    "aces", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value more than 2 decimal places to Set flat amount field a" +
            "nd verify the validation: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628TryToPassAValueMoreThan2DecimalPlacesToSetFlatAmountFieldAndVerifyTheValidation_SingleCarrier()
        {
#line 347
this._48628TryToPassAValueMoreThan2DecimalPlacesToSetFlatAmountFieldAndVerifyTheValidation("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value more than 2 decimal places to Set flat amount field a" +
            "nd verify the validation: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628TryToPassAValueMoreThan2DecimalPlacesToSetFlatAmountFieldAndVerifyTheValidation_MultipleCarrier()
        {
#line 347
this._48628TryToPassAValueMoreThan2DecimalPlacesToSetFlatAmountFieldAndVerifyTheValidation("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628TryToPassAValueLessThan1_00ToSetFlatAmountFieldAndVerifyTheValidation(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Try to pass a value less than $1.00 to Set flat amount field and verify t" +
                    "he validation", exampleTags);
#line 363
this.ScenarioSetup(scenarioInfo);
#line 364
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 365
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 366
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 367
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 368
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 369
 testRunner.And("I clicked on the Add Another Accessorial button in the Set Individual Accessorial" +
                    "s modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 370
 testRunner.And("Set flat amount has been selected as Set Gainshare Type from the drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 371
 testRunner.When("I enter a value less than one to Set flat amount field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 372
 testRunner.Then("Set flat amount field should not accept a value less than one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value less than $1.00 to Set flat amount field and verify t" +
            "he validation: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628TryToPassAValueLessThan1_00ToSetFlatAmountFieldAndVerifyTheValidation_SingleCarrier()
        {
#line 363
this._48628TryToPassAValueLessThan1_00ToSetFlatAmountFieldAndVerifyTheValidation("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value less than $1.00 to Set flat amount field and verify t" +
            "he validation: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628TryToPassAValueLessThan1_00ToSetFlatAmountFieldAndVerifyTheValidation_MultipleCarrier()
        {
#line 363
this._48628TryToPassAValueLessThan1_00ToSetFlatAmountFieldAndVerifyTheValidation("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628TryToPassAValueMoreThan999_99ToSetFlatAmountFieldAndVerifyTheValidation(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Try to pass a value more than $999.99 to Set flat amount field and verify" +
                    " the validation", exampleTags);
#line 379
this.ScenarioSetup(scenarioInfo);
#line 380
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 381
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 382
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 383
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 384
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 385
 testRunner.And("I clicked on the Add Another Accessorial button in the Set Individual Accessorial" +
                    "s modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 386
 testRunner.And("Set flat amount has been selected as Set Gainshare Type from the drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 387
 testRunner.When("I enter a value more than $999.99 to Set flat amount field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 388
 testRunner.Then("Set flat amount field should not accept a value more than $999.99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value more than $999.99 to Set flat amount field and verify" +
            " the validation: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628TryToPassAValueMoreThan999_99ToSetFlatAmountFieldAndVerifyTheValidation_SingleCarrier()
        {
#line 379
this._48628TryToPassAValueMoreThan999_99ToSetFlatAmountFieldAndVerifyTheValidation("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Try to pass a value more than $999.99 to Set flat amount field and verify" +
            " the validation: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628TryToPassAValueMoreThan999_99ToSetFlatAmountFieldAndVerifyTheValidation_MultipleCarrier()
        {
#line 379
this._48628TryToPassAValueMoreThan999_99ToSetFlatAmountFieldAndVerifyTheValidation("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628VerifyTheFunctionalityOfSaveButtonOnSetIndividualAccessorialsModal(string carriers, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Verify the functionality of save button on Set Individual Accessorials mo" +
                    "dal", exampleTags);
#line 395
this.ScenarioSetup(scenarioInfo);
#line 396
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 397
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 398
 testRunner.And("I have selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 399
 testRunner.And(string.Format("I selected one or more Carriers from the Master Carrier Rate Settings page {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 400
 testRunner.And("Clicked on the Set Accessorials Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 401
 testRunner.And("I set values on Set Individual Accessorials Modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 402
 testRunner.When("I click on the Save button of Set Individual Accessorials Modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 403
 testRunner.Then(string.Format("The Accessorial Gainshare types and associated values will be saved {0}", carriers), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Verify the functionality of save button on Set Individual Accessorials mo" +
            "dal: SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "SingleCarrier")]
        public virtual void _48628VerifyTheFunctionalityOfSaveButtonOnSetIndividualAccessorialsModal_SingleCarrier()
        {
#line 395
this._48628VerifyTheFunctionalityOfSaveButtonOnSetIndividualAccessorialsModal("SingleCarrier", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Verify the functionality of save button on Set Individual Accessorials mo" +
            "dal: MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleCarrier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carriers", "MultipleCarrier")]
        public virtual void _48628VerifyTheFunctionalityOfSaveButtonOnSetIndividualAccessorialsModal_MultipleCarrier()
        {
#line 395
this._48628VerifyTheFunctionalityOfSaveButtonOnSetIndividualAccessorialsModal("MultipleCarrier", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628VerifyTheDisplayOfOverCostValueOnTheGrid(string accessorials, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Verify the display of % over cost value on the grid", exampleTags);
#line 410
this.ScenarioSetup(scenarioInfo);
#line 411
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 412
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 413
 testRunner.And("I selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 414
 testRunner.And("I selected a carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 415
 testRunner.And(string.Format("One or more Individual accessorials has been set for the customer {0}", accessorials), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 416
 testRunner.When(string.Format("% over cost is selected as the Gainshare Type for the individual accessorial {0}", accessorials), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 417
 testRunner.Then(string.Format("I will see value displayed as xx.xx % on the grid {0}", accessorials), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 418
 testRunner.And(string.Format("(% over) will be displayed beneath the value {0}", accessorials), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Verify the display of % over cost value on the grid: SingleAccessorial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleAccessorial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:accessorials", "SingleAccessorial")]
        public virtual void _48628VerifyTheDisplayOfOverCostValueOnTheGrid_SingleAccessorial()
        {
#line 410
this._48628VerifyTheDisplayOfOverCostValueOnTheGrid("SingleAccessorial", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Verify the display of % over cost value on the grid: MultipleAccessorial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleAccessorial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:accessorials", "MultipleAccessorial")]
        public virtual void _48628VerifyTheDisplayOfOverCostValueOnTheGrid_MultipleAccessorial()
        {
#line 410
this._48628VerifyTheDisplayOfOverCostValueOnTheGrid("MultipleAccessorial", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628VerifyTheDisplayOfFlatOverCostValueOnTheGrid(string accessorials, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Verify the display of Flat over cost value on the grid", exampleTags);
#line 425
 this.ScenarioSetup(scenarioInfo);
#line 426
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 427
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 428
 testRunner.And("I selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 429
 testRunner.And("I selected a carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 430
 testRunner.And(string.Format("One or more Individual accessorials has been set for the customer {0}", accessorials), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 431
 testRunner.When(string.Format("Flat over cost is selected as the Gainshare Type for the individual accessorial {" +
                        "0}", accessorials), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 432
 testRunner.Then(string.Format("I will see the value displayed as $xx.xx on the grid {0}", accessorials), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 433
 testRunner.And(string.Format("(flat over) will be displayed beneath the value {0}", accessorials), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Verify the display of Flat over cost value on the grid: SingleAccessorial" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleAccessorial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:accessorials", "SingleAccessorial")]
        public virtual void _48628VerifyTheDisplayOfFlatOverCostValueOnTheGrid_SingleAccessorial()
        {
#line 425
 this._48628VerifyTheDisplayOfFlatOverCostValueOnTheGrid("SingleAccessorial", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Verify the display of Flat over cost value on the grid: MultipleAccessori" +
            "al")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleAccessorial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:accessorials", "MultipleAccessorial")]
        public virtual void _48628VerifyTheDisplayOfFlatOverCostValueOnTheGrid_MultipleAccessorial()
        {
#line 425
 this._48628VerifyTheDisplayOfFlatOverCostValueOnTheGrid("MultipleAccessorial", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48628VerifyTheDisplayOfSetFlatAmountValueOnTheGrid(string accessorials, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48628 : Verify the display of Set flat amount value on the grid", exampleTags);
#line 440
this.ScenarioSetup(scenarioInfo);
#line 441
 testRunner.Given("I am a Pricing config or a Config manager user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 442
 testRunner.And("I am on the Master Carrier Rate Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 443
 testRunner.And("I selected a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 444
 testRunner.And("I selected a carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 445
 testRunner.And(string.Format("One or more Individual accessorials has been set for the customer {0}", accessorials), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 446
 testRunner.When(string.Format("Set flat amount is selected as the Gainshare Type for the individual accessorial " +
                        "{0}", accessorials), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 447
 testRunner.Then(string.Format("I will see the value displayed as $xx.xx on the grid {0}", accessorials), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 448
 testRunner.And(string.Format("(flat amt) will be displayed beneath the value {0}", accessorials), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Verify the display of Set flat amount value on the grid: SingleAccessoria" +
            "l")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleAccessorial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:accessorials", "SingleAccessorial")]
        public virtual void _48628VerifyTheDisplayOfSetFlatAmountValueOnTheGrid_SingleAccessorial()
        {
#line 440
this._48628VerifyTheDisplayOfSetFlatAmountValueOnTheGrid("SingleAccessorial", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48628 : Verify the display of Set flat amount value on the grid: MultipleAccessor" +
            "ial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "48628 - Master Carrier Rate Settings - Accessorial Gainshare Type _Options and Di" +
            "splay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint87")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MultipleAccessorial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:accessorials", "MultipleAccessorial")]
        public virtual void _48628VerifyTheDisplayOfSetFlatAmountValueOnTheGrid_MultipleAccessorial()
        {
#line 440
this._48628VerifyTheDisplayOfSetFlatAmountValueOnTheGrid("MultipleAccessorial", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
