// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.MaintenanceTools.MasterCarrierRateSettings
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class MasterCarrierRateSettings_RecordEdits_AuditFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Master Carrier Rate Settings_Record Edits_Audit.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Master Carrier Rate Settings_Record Edits_Audit", null, ProgrammingLanguage.CSharp, new string[] {
                        "35282",
                        "Sprint74"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Master Carrier Rate Settings_Record Edits_Audit")))
            {
                CRM.UITest.Scripts.MaintenanceTools.MasterCarrierRateSettings.MasterCarrierRateSettings_RecordEdits_AuditFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForSurgeField(string scenario, string username, string password, string title, string customerName, string surge, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify if all the Column values are getting recorded in the new Record Edit DB wh" +
                    "en an edit is saved for Surge Field", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given(string.Format("I am a System Admin user {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
testRunner.When(string.Format("I have selected a customer {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
testRunner.And("I have selected one carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
testRunner.And("I get surge value before editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
testRunner.And(string.Format("I edit {0} value on Master Carrier Rate Settings page", surge), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
testRunner.Then(string.Format("The following values should get recorded in the new Record Edit DB - Station, Cus" +
                        "tomer,Carrier, Field Name, Field Value - Old Surge, Field Value - new Surge, Use" +
                        "r ID, Date/Time of edit.{0},{1}", customerName, username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify if all the Column values are getting recorded in the new Record Edit DB wh" +
            "en an edit is saved for Surge Field: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Master Carrier Rate Settings_Record Edits_Audit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint74")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Title", "Master Carrier Rate Settings")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "Sam Demo GS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Surge", "5")]
        public virtual void VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForSurgeField_S1()
        {
            this.VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForSurgeField("S1", "systemadmin", "Te$t1234", "Master Carrier Rate Settings", "Sam Demo GS", "5", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyIfAllTheColumValuesAreGettingRecordedInTheNewRecordEditStationDBWhenAnEditIsSavedForBumpField(string scenario, string username, string password, string title, string surge, string stationName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify if all the colum values are getting recorded in the new Record Edit statio" +
                    "n DB when an edit is saved for Bump Field", @__tags);
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
testRunner.Given(string.Format("I am a System Admin user {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
testRunner.When(string.Format("I have selected one Station {0}", stationName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
testRunner.And("I have selected one carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
testRunner.And("I get surge value before editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
testRunner.And(string.Format("I edit {0} value on Master Carrier Rate Settings page", surge), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
testRunner.Then(string.Format("The following values should get saved in Station setup new Record Edit DB -Statio" +
                        "n, Customer,Carrier, Field Name, Field Value - Old Surge, Field Value - new Surg" +
                        "e, User ID, Date/Time of edit.{0},{1}", stationName, username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify if all the colum values are getting recorded in the new Record Edit statio" +
            "n DB when an edit is saved for Bump Field: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Master Carrier Rate Settings_Record Edits_Audit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint74")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Title", "Master Carrier Rate Settings")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Surge", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationName", "ZZZ - Web Services Test")]
        public virtual void VerifyIfAllTheColumValuesAreGettingRecordedInTheNewRecordEditStationDBWhenAnEditIsSavedForBumpField_S1()
        {
            this.VerifyIfAllTheColumValuesAreGettingRecordedInTheNewRecordEditStationDBWhenAnEditIsSavedForBumpField("S1", "systemadmin", "Te$t1234", "Master Carrier Rate Settings", "5", "ZZZ - Web Services Test", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForBumpField(string scenario, string username, string password, string title, string customerName, string bump, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify if all the Column values are getting recorded in the new Record Edit DB wh" +
                    "en an edit is saved for Bump Field", @__tags);
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
testRunner.Given(string.Format("I am a System Admin user {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
testRunner.When(string.Format("I have selected a customer {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
testRunner.And("I have selected one carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
testRunner.And("I get Bump value before editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
testRunner.When(string.Format("I will edit {0} value on Master Carrier Rate Settings page", bump), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
testRunner.Then(string.Format("The following values should get recorded in the new Record Edit DB - Station, Cus" +
                        "tomer,Carrier, Field Name, Field Value - Old Bump, Field Value - new Bump, User " +
                        "ID, Date/Time of edit.{0},{1}", customerName, username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify if all the Column values are getting recorded in the new Record Edit DB wh" +
            "en an edit is saved for Bump Field: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Master Carrier Rate Settings_Record Edits_Audit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint74")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Title", "Master Carrier Rate Settings")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "Sam Demo GS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Bump", "8")]
        public virtual void VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForBumpField_S1()
        {
            this.VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForBumpField("S1", "systemadmin", "Te$t1234", "Master Carrier Rate Settings", "Sam Demo GS", "8", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForMinField(string scenario, string username, string password, string title, string customerName, string min, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify if all the Column values are getting recorded in the new Record Edit DB wh" +
                    "en an edit is saved for Min Field", @__tags);
#line 47
this.ScenarioSetup(scenarioInfo);
#line 48
testRunner.Given(string.Format("I am a System Admin user {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
testRunner.When(string.Format("I have selected a customer {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
testRunner.And("I have selected one carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.And("I get Minimum value before editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
testRunner.When(string.Format("I edit minimum value in Master Carrier Rate Settings page {0}", min), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
testRunner.Then(string.Format("The following values should get recorded in the new Record Edit DB - Station, Cus" +
                        "tomer, Carrier, Field Name, Field Value - Old Min, Field Value - new Min, User I" +
                        "D, Date/Time of edit.{0},{1}", customerName, username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify if all the Column values are getting recorded in the new Record Edit DB wh" +
            "en an edit is saved for Min Field: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Master Carrier Rate Settings_Record Edits_Audit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint74")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Title", "Master Carrier Rate Settings")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "Sam Demo GS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Min", "22")]
        public virtual void VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForMinField_S1()
        {
            this.VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForMinField("S1", "systemadmin", "Te$t1234", "Master Carrier Rate Settings", "Sam Demo GS", "22", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForMinThresholdField(string scenario, string username, string password, string title, string customerName, string minThreshold, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify if all the Column values are getting recorded in the new Record Edit DB wh" +
                    "en an edit is saved for Min Threshold Field", @__tags);
#line 61
this.ScenarioSetup(scenarioInfo);
#line 62
testRunner.Given(string.Format("I am a System Admin user {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 63
testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
testRunner.When(string.Format("I have selected a customer {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
testRunner.And("I have selected one carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
testRunner.And("I get Minimum Threshold value before editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
testRunner.When(string.Format("I edit minimum threshold value in Master Carrier Rate Settings page {0}", minThreshold), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
testRunner.Then(string.Format("The following values should get recorded in the new Record Edit DB - Station, Cus" +
                        "tomer, Carrier, Field Name, Field Value - Old Min Threshold, Field Value - new M" +
                        "in Threshold, User ID, Date/Time of edit.{0},{1}", customerName, username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify if all the Column values are getting recorded in the new Record Edit DB wh" +
            "en an edit is saved for Min Threshold Field: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Master Carrier Rate Settings_Record Edits_Audit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint74")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Title", "Master Carrier Rate Settings")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "Sam Demo GS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinThreshold", "43")]
        public virtual void VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForMinThresholdField_S1()
        {
            this.VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForMinThresholdField("S1", "systemadmin", "Te$t1234", "Master Carrier Rate Settings", "Sam Demo GS", "43", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForMinAmountField(string scenario, string username, string password, string title, string customerName, string minAmount, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify if all the Column values are getting recorded in the new Record Edit DB wh" +
                    "en an edit is saved for Min Amount Field", @__tags);
#line 75
this.ScenarioSetup(scenarioInfo);
#line 76
testRunner.Given(string.Format("I am a System Admin user {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 77
testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
testRunner.When(string.Format("I have selected a customer {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
testRunner.And("I have selected one carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
testRunner.And("I get Minimum Amount value before editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
testRunner.When("I edit Minimum Amount value on Master Carrier Rate Settings page <MinAmount>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
testRunner.Then(string.Format("The following values should get recorded in the new Record Edit DB - Station, Cus" +
                        "tomer,Carrier, Field Name, Field Value - Old Min Amount, Field Value - new Min A" +
                        "mount, User ID, Date/Time of edit.{0},{1}", customerName, username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify if all the Column values are getting recorded in the new Record Edit DB wh" +
            "en an edit is saved for Min Amount Field: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Master Carrier Rate Settings_Record Edits_Audit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint74")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Title", "Master Carrier Rate Settings")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "Sam Demo GS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Min Amount", "54")]
        public virtual void VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForMinAmountField_S1()
        {
            this.VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForMinAmountField("S1", "systemadmin", "Te$t1234", "Master Carrier Rate Settings", "Sam Demo GS", "54", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForMasterAccessorialChargeField(string scenario, string username, string password, string title, string customerName, string masterAccessorialCharge, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify if all the Column values are getting recorded in the new Record Edit DB wh" +
                    "en an edit is saved for Master Accessorial Charge Field", @__tags);
#line 90
this.ScenarioSetup(scenarioInfo);
#line 91
testRunner.Given(string.Format("I am a System Admin user {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
testRunner.When(string.Format("I have selected a customer {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
testRunner.And("I have selected one carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
testRunner.And("I get Master Accessorial Charge before editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
testRunner.When(string.Format("I edit Master Accessorial Charge on Master Carrier Rate Settings page {0}", masterAccessorialCharge), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
testRunner.Then(string.Format("The following values should get recorded in the new Record Edit DB - Station, Cus" +
                        "tomer,Carrier, Field Name, Field Value - Old Master Accessorial Charge, Field Va" +
                        "lue - new Master Accessorial Charge, User ID, Date/Time of edit.{0},{1}", customerName, username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify if all the Column values are getting recorded in the new Record Edit DB wh" +
            "en an edit is saved for Master Accessorial Charge Field: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Master Carrier Rate Settings_Record Edits_Audit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint74")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Title", "Master Carrier Rate Settings")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "Sam Demo GS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MasterAccessorialCharge", "32")]
        public virtual void VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForMasterAccessorialChargeField_S1()
        {
            this.VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForMasterAccessorialChargeField("S1", "systemadmin", "Te$t1234", "Master Carrier Rate Settings", "Sam Demo GS", "32", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForSetAccessorialField(string scenario, string username, string password, string title, string customerName, string setAccessorial, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify if all the Column values are getting recorded in the new Record Edit DB wh" +
                    "en an edit is saved for Set Accessorial Field", @__tags);
#line 104
this.ScenarioSetup(scenarioInfo);
#line 105
testRunner.Given(string.Format("I am a System Admin user {0}, {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 106
testRunner.And(string.Format("I am on the Master Carrier Rate Settings page {0}", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
testRunner.When(string.Format("I have selected a customer {0}", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 108
testRunner.And("I have selected one carriers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
testRunner.And("I get Accessorial charge before editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
testRunner.When(string.Format("I edit set Accessorial value on Master Carrier Rate Settings page {0}", setAccessorial), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 111
testRunner.Then(string.Format("The following values should get recorded in the new Record Edit DB - Station, Cus" +
                        "tomer,Carrier, Field Name, Field Value - Old Set Accessorial, Field Value - new " +
                        "Set Accessorial, User ID, Date/Time of edit.{0},{1}", customerName, username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify if all the Column values are getting recorded in the new Record Edit DB wh" +
            "en an edit is saved for Set Accessorial Field: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Master Carrier Rate Settings_Record Edits_Audit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint74")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Title", "Master Carrier Rate Settings")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "CustomerAccountSprint73")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SetAccessorial", "34")]
        public virtual void VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForSetAccessorialField_S1()
        {
            this.VerifyIfAllTheColumnValuesAreGettingRecordedInTheNewRecordEditDBWhenAnEditIsSavedForSetAccessorialField("S1", "systemadmin", "Te$t1234", "Master Carrier Rate Settings", "CustomerAccountSprint73", "34", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
