// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.MaintenanceTools.CustomerSpecificBranding
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CRMCustomerSpecficBrandingConfiguration_DesktopFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CRMCustomerSpecficBrandingConfiguration_Desktop.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CRMCustomerSpecficBrandingConfiguration_Desktop", null, ProgrammingLanguage.CSharp, new string[] {
                        "CRMCustomerSpecficBrandingConfiguration",
                        "19300",
                        "Sprint62"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CRMCustomerSpecficBrandingConfiguration_Desktop")))
            {
                CRM.UITest.Scripts.MaintenanceTools.CustomerSpecificBranding.CRMCustomerSpecficBrandingConfiguration_DesktopFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyThatUserHaveTheOptionToConfigureCustomerSpecificBranding(string scenario, string username, string password, string customerSpecificBranding, string description, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user have the option to configure Customer Specific Branding", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then(string.Format("I will have the option \'{0}\' to configure Customer Specific Branding", customerSpecificBranding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
 testRunner.And(string.Format("I will have the \'{0}\' for the Customer Specific Branding option", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user have the option to configure Customer Specific Branding: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecficBrandingConfiguration_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBrandingConfiguration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerSpecificBranding", "Customer Specific Branding")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:description", "Replace the DLS logo with a customer logo.")]
        public virtual void VerifyThatUserHaveTheOptionToConfigureCustomerSpecificBranding_S1()
        {
            this.VerifyThatUserHaveTheOptionToConfigureCustomerSpecificBranding("S1", "crmSystemAdmin", "Te$t1234", "Customer Specific Branding", "Replace the DLS logo with a customer logo.", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatUserCanAbleToDirectedToTheCustomerSpecificBrandingPageIfUserHasTheRequiredClaim(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that user can able to directed to the Customer Specific Branding page if u" +
                    "ser has the required claim", @__tags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.Then("I will have the option \'<CustomerSpecificBranding>\' to configure Customer Specifi" +
                    "c Branding", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
 testRunner.And(string.Format("I am able to click CustomerSpecificBranding button and able to navigate to the Cu" +
                        "stomer Specific Branding page when \'{0}\' have the required claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that user can able to directed to the Customer Specific Branding page if u" +
            "ser has the required claim: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecficBrandingConfiguration_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBrandingConfiguration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyThatUserCanAbleToDirectedToTheCustomerSpecificBrandingPageIfUserHasTheRequiredClaim_S1()
        {
            this.VerifyThatUserCanAbleToDirectedToTheCustomerSpecificBrandingPageIfUserHasTheRequiredClaim("S1", "crmSystemAdmin", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCustomerSpecificBrandingPageForTheCorrectness(
                    string scenario, 
                    string username, 
                    string password, 
                    string backtoMaintenanceTool, 
                    string stationLbl, 
                    string selectstation, 
                    string customerLbl, 
                    string selectcustomer, 
                    string addLogoFileLbl, 
                    string browse, 
                    string filesizeinfo, 
                    string save, 
                    string customerSpecificLogosLbl, 
                    string view, 
                    string stationDD, 
                    string customernameDD, 
                    string logoFile, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Customer Specific Branding page for the correctness", @__tags);
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
    testRunner.And(string.Format("I am able to click CustomerSpecificBranding button and able to navigate to the Cu" +
                        "stomer Specific Branding page when \'{0}\' have the required claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.Then(string.Format("I should see an option to go back to the Maintenance Tool Screen with the default" +
                        " text as \'{0}\'", backtoMaintenanceTool), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 35
 testRunner.And(string.Format("I should see an option to select a station with lable \'{0}\' and \'{1}\' as default " +
                        "text", stationLbl, selectstation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And(string.Format("I should see an option to select a customer account based on the station that was" +
                        " selected with lable \'{0}\' and with the default text as \'{1}\'", customerLbl, selectcustomer), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.And(string.Format("I should see an option to upload a custom logo and with the lable \'{0}\', default " +
                        "text to \'{1}\' and \'{2}\'", addLogoFileLbl, browse, filesizeinfo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And(string.Format("I should see an option to Save the uploaded file with the default text as \'{0}\'", save), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And(string.Format("I should see list of existing Customer Specific Logos with lable \'{0}\', Paginatio" +
                        "n header view \'{1}\', \'{2}\', \'{3}\', \'{4}\'", customerSpecificLogosLbl, view, stationDD, customernameDD, logoFile), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Customer Specific Branding page for the correctness: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecficBrandingConfiguration_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBrandingConfiguration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:backtoMaintenanceTool", "Back to Maintenance Tools")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationLbl", "STATION *")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Selectstation", "Select station...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerLbl", "CUSTOMER *")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Selectcustomer", "Select customer...")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddLogoFileLbl", "ADD LOGO FILE *")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:browse", "browse")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Filesizeinfo", "** File size limit: 20MB Acceptable file type is PNG or JPG Only one file per cus" +
            "tomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Save", "Save")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerSpecificLogosLbl", "Customer Specific Logos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:View", "VIEW")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationDD", "STATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomernameDD", "CUSTOMER NAME")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LogoFile", "LOGO FILE")]
        public virtual void VerifyTheCustomerSpecificBrandingPageForTheCorrectness_S1()
        {
            this.VerifyTheCustomerSpecificBrandingPageForTheCorrectness("S1", "crmSystemAdmin", "Te$t1234", "Back to Maintenance Tools", "STATION *", "Select station...", "CUSTOMER *", "Select customer...", "ADD LOGO FILE *", "browse", "** File size limit: 20MB Acceptable file type is PNG or JPG Only one file per cus" +
                    "tomer", "Save", "Customer Specific Logos", "VIEW", "STATION", "CUSTOMER NAME", "LOGO FILE", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatTheCustomLogoFlagWillBeSetToOnByDefaultWhenUserUploadedNewLogoToTheCustomer(string scenario, string username, string password, string filepath, string filename, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that the custom logo flag will be set to On by default when user uploaded " +
                    "new logo to the customer", @__tags);
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.And(string.Format("I am able to click CustomerSpecificBranding button and able to navigate to the Cu" +
                        "stomer Specific Branding page when \'{0}\' have the required claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("I click on the station drop down and select one station from drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.And("I click on the customer drop down and select one customer from drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.And("I delete the customer account if present in the customer specific logos grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.And(string.Format("I upload a file from \'{0}\' through file explorer", filepath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.And("I click on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.Then(string.Format("Verify the logo name \'{0}\' updated in the Customer Specific Logos list and Custom" +
                        " logo flag set to On by default", filename), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that the custom logo flag will be set to On by default when user uploaded " +
            "new logo to the customer: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecficBrandingConfiguration_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBrandingConfiguration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:filepath", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/BrandingLogo.jpg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Filename", "BrandingLogo.jpg")]
        public virtual void VerifyThatTheCustomLogoFlagWillBeSetToOnByDefaultWhenUserUploadedNewLogoToTheCustomer_S1()
        {
            this.VerifyThatTheCustomLogoFlagWillBeSetToOnByDefaultWhenUserUploadedNewLogoToTheCustomer("S1", "crmSystemAdmin", "Te$t1234", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/BrandingLogo.jpg", "BrandingLogo.jpg", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatAPopUpShouldDisplayWhenThereIsAlreadyALogoSavedForTheCustomer(string scenario, string username, string password, string filepath, string filename, string overwrite, string overwriteDescription, string yes, string no, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that a pop up should display when there is already a logo saved for the cu" +
                    "stomer", @__tags);
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 65
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
 testRunner.And(string.Format("I am able to click CustomerSpecificBranding button and able to navigate to the Cu" +
                        "stomer Specific Branding page when \'{0}\' have the required claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And("I click on the station drop down and select one station from drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And("I click on the customer drop down and select one customer from drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.And(string.Format("Verify the customer account has already uploaded with \'{0}\'", filename), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.And(string.Format("I upload a file from \'{0}\' through file explorer", filepath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.And("I click on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
    testRunner.Then(string.Format("verify the pop up window with \'{0}\', \'{1}\' and buttons with \'{2}\' and \'{3}\'", overwrite, overwriteDescription, yes, no), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that a pop up should display when there is already a logo saved for the cu" +
            "stomer: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecficBrandingConfiguration_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBrandingConfiguration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:filepath", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/BrandingLogo.jpg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Filename", "BrandingLogo.jpg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:overwrite", "Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OverwriteDescription", "Are you sure you want to overwrite the logo?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Yes", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:No", "No")]
        public virtual void VerifyThatAPopUpShouldDisplayWhenThereIsAlreadyALogoSavedForTheCustomer_S1()
        {
            this.VerifyThatAPopUpShouldDisplayWhenThereIsAlreadyALogoSavedForTheCustomer("S1", "crmSystemAdmin", "Te$t1234", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/BrandingLogo.jpg", "BrandingLogo.jpg", "Confirmation", "Are you sure you want to overwrite the logo?", "Yes", "No", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatFileOverwrittenFunctionalityWhenThereIsAlreadyALogoSavedForTheCustomer(string scenario, string username, string password, string filename, string filepath, string newFilename, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that file overwritten functionality when there is already a logo saved for" +
                    " the customer", @__tags);
#line 80
this.ScenarioSetup(scenarioInfo);
#line 81
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 82
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
 testRunner.And(string.Format("I am able to click CustomerSpecificBranding button and able to navigate to the Cu" +
                        "stomer Specific Branding page when \'{0}\' have the required claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
    testRunner.And("I click on the station drop down and select one station from drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
 testRunner.And("I click on the customer drop down and select one customer from drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.And(string.Format("Verify the customer account has already uploaded with \'{0}\'", filename), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
 testRunner.And(string.Format("I upload a file from \'{0}\' through file explorer", filepath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
 testRunner.And("I click on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.And("I click on the yes button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.Then(string.Format("Verify the old logo file name \'{0}\' should overwritten by the new logo file name " +
                        "\'{1}\'", filename, newFilename), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that file overwritten functionality when there is already a logo saved for" +
            " the customer: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecficBrandingConfiguration_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBrandingConfiguration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Filename", "BrandingLogo.jpg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:filepath", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/testJuneLogo.png")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewFilename", "testJuneLogo.png")]
        public virtual void VerifyThatFileOverwrittenFunctionalityWhenThereIsAlreadyALogoSavedForTheCustomer_S1()
        {
            this.VerifyThatFileOverwrittenFunctionalityWhenThereIsAlreadyALogoSavedForTheCustomer("S1", "crmSystemAdmin", "Te$t1234", "BrandingLogo.jpg", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/testJuneLogo.png", "testJuneLogo.png", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatPopUpShouldCloseWhenClickOnNoInTheOverwrittenPopUp(string scenario, string username, string password, string filename, string filepath, string newFilename, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that pop up should close when click on No in the overwritten pop up", @__tags);
#line 98
this.ScenarioSetup(scenarioInfo);
#line 99
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 100
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 102
 testRunner.And(string.Format("I am able to click CustomerSpecificBranding button and able to navigate to the Cu" +
                        "stomer Specific Branding page when \'{0}\' have the required claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.And("I click on the station drop down and select one station from drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
 testRunner.And("I click on the customer drop down and select one customer from drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.And(string.Format("Verify the customer account has already uploaded with \'{0}\'", filename), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.And(string.Format("I upload a file from \'{0}\' through file explorer", filepath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
 testRunner.And("I click on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
 testRunner.And("I click on the No button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.Then("Verify the pop up should close", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that pop up should close when click on No in the overwritten pop up: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecficBrandingConfiguration_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBrandingConfiguration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Filename", "BrandingLogo.jpg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:filepath", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/testJuneLogo.png")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewFilename", "testJuneLogo.png")]
        public virtual void VerifyThatPopUpShouldCloseWhenClickOnNoInTheOverwrittenPopUp_S1()
        {
            this.VerifyThatPopUpShouldCloseWhenClickOnNoInTheOverwrittenPopUp("S1", "crmSystemAdmin", "Te$t1234", "BrandingLogo.jpg", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/testJuneLogo.png", "testJuneLogo.png", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThatTheFunctionalityOfTheBackToMaintenanceToolsButton(string scenario, string username, string password, string maintenanceTools, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that the functionality of the Back to maintenance tools button", @__tags);
#line 116
this.ScenarioSetup(scenarioInfo);
#line 117
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 118
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 120
 testRunner.And(string.Format("I am able to click CustomerSpecificBranding button and able to navigate to the Cu" +
                        "stomer Specific Branding page when \'{0}\' have the required claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
 testRunner.And("I click on the backtoMaintenanceTool button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
 testRunner.Then(string.Format("I should navigate to the Maintenance Tools landing page \'{0}\'", maintenanceTools), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that the functionality of the Back to maintenance tools button: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecficBrandingConfiguration_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBrandingConfiguration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MaintenanceTools", "Maintenance Tools")]
        public virtual void VerifyThatTheFunctionalityOfTheBackToMaintenanceToolsButton_S1()
        {
            this.VerifyThatTheFunctionalityOfTheBackToMaintenanceToolsButton("S1", "crmSystemAdmin", "Te$t1234", "Maintenance Tools", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheErrorMessageWhenUserClicksOnTheSaveButtonWithOutSelectingRequiredFields(string scenario, string username, string password, string errormsg, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the error message when user clicks on the save button with out selecting r" +
                    "equired fields", @__tags);
#line 129
this.ScenarioSetup(scenarioInfo);
#line 130
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 131
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
 testRunner.And(string.Format("I am able to click CustomerSpecificBranding button and able to navigate to the Cu" +
                        "stomer Specific Branding page when \'{0}\' have the required claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.And("I click on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
 testRunner.Then(string.Format("I should see the \'{0}\' error message in the add customer specific logo section", errormsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the error message when user clicks on the save button with out selecting r" +
            "equired fields: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecficBrandingConfiguration_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBrandingConfiguration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:errormsg", "PLEASE ENTER ALL REQUIRED INFORMATION")]
        public virtual void VerifyTheErrorMessageWhenUserClicksOnTheSaveButtonWithOutSelectingRequiredFields_S1()
        {
            this.VerifyTheErrorMessageWhenUserClicksOnTheSaveButtonWithOutSelectingRequiredFields("S1", "crmSystemAdmin", "Te$t1234", "PLEASE ENTER ALL REQUIRED INFORMATION", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheErrorMessageWhenUserTryToUploadFileSizeMoreThan20MB(string scenario, string username, string password, string filepath, string errormsg, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the error message when user try to upload file size more than 20MB", @__tags);
#line 142
this.ScenarioSetup(scenarioInfo);
#line 143
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 144
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
 testRunner.And(string.Format("I am able to click CustomerSpecificBranding button and able to navigate to the Cu" +
                        "stomer Specific Branding page when \'{0}\' have the required claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
 testRunner.And("I click on the station drop down and select one station from drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
 testRunner.And("I click on the customer drop down and select one customer from drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.And(string.Format("I upload a file from \'{0}\' through file explorer", filepath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
 testRunner.Then(string.Format("I should see the \'{0}\' error message in the add customer specific logo section wh" +
                        "en image size exceed limits", errormsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the error message when user try to upload file size more than 20MB: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecficBrandingConfiguration_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBrandingConfiguration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:filepath", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/picsize47MB.jpg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:errormsg", "The selected file exceeds the file size limit.")]
        public virtual void VerifyTheErrorMessageWhenUserTryToUploadFileSizeMoreThan20MB_S1()
        {
            this.VerifyTheErrorMessageWhenUserTryToUploadFileSizeMoreThan20MB("S1", "crmSystemAdmin", "Te$t1234", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/picsize47MB.jpg", "The selected file exceeds the file size limit.", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheErrorMessageWhenUserTryToUploadWrongFileFormat(string scenario, string username, string password, string filepath, string errormsg, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the error message when user try to upload wrong file format", @__tags);
#line 157
this.ScenarioSetup(scenarioInfo);
#line 158
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 159
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 161
 testRunner.And(string.Format("I am able to click CustomerSpecificBranding button and able to navigate to the Cu" +
                        "stomer Specific Branding page when \'{0}\' have the required claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.And(string.Format("I upload a file from \'{0}\' through file explorer", filepath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
 testRunner.Then(string.Format("I should see the \'{0}\' error message in the add customer specific logo section wh" +
                        "en image wrong format", errormsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the error message when user try to upload wrong file format: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecficBrandingConfiguration_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBrandingConfiguration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:filepath", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/WrongImageFormat.gi" +
            "f")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:errormsg", "The selected file is not in png or jpg format.")]
        public virtual void VerifyTheErrorMessageWhenUserTryToUploadWrongFileFormat_S1()
        {
            this.VerifyTheErrorMessageWhenUserTryToUploadWrongFileFormat("S1", "crmSystemAdmin", "Te$t1234", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/WrongImageFormat.gi" +
                    "f", "The selected file is not in png or jpg format.", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheFuctionalityOfTheToggleUpButtonInTheAddCustomerSpecificLogoHeaderSection(string scenario, string username, string password, string stationLbl, string customerLbl, string addLogoFileLbl, string browse, string save, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the fuctionality of the toggle up button in the add customer specific logo" +
                    " header section", @__tags);
#line 172
this.ScenarioSetup(scenarioInfo);
#line 173
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 174
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 176
 testRunner.And(string.Format("I am able to click CustomerSpecificBranding button and able to navigate to the Cu" +
                        "stomer Specific Branding page when \'{0}\' have the required claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
 testRunner.And("When I click on the add customer specific logo expand or collapse button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
 testRunner.And(string.Format("I should not see an option to select a station with lable\'{0}\' and with the defau" +
                        "lt text as \'<Selectstation>\'", stationLbl), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
 testRunner.And("When I click on the add customer specific logo expand or collapse button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
 testRunner.Then(string.Format("I should see all the required labels {0}, {1}, {2}, {3} and {4} buttons", stationLbl, customerLbl, addLogoFileLbl, browse, save), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the fuctionality of the toggle up button in the add customer specific logo" +
            " header section: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecficBrandingConfiguration_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBrandingConfiguration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationLbl", "STATION *")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerLbl", "CUSTOMER *")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddLogoFileLbl", "ADD LOGO FILE *")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:browse", "browse")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Save", "Save")]
        public virtual void VerifyTheFuctionalityOfTheToggleUpButtonInTheAddCustomerSpecificLogoHeaderSection_S1()
        {
            this.VerifyTheFuctionalityOfTheToggleUpButtonInTheAddCustomerSpecificLogoHeaderSection("S1", "crmSystemAdmin", "Te$t1234", "STATION *", "CUSTOMER *", "ADD LOGO FILE *", "browse", "Save", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheDeleteButtonFunctionalityInTheCustomerSpecificLogoSection(string scenario, string username, string password, string filepath, string filename, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the delete button functionality in the Customer Specific Logo section", @__tags);
#line 188
this.ScenarioSetup(scenarioInfo);
#line 189
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 190
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 192
 testRunner.And(string.Format("I am able to click CustomerSpecificBranding button and able to navigate to the Cu" +
                        "stomer Specific Branding page when \'{0}\' have the required claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
 testRunner.When("I click on the station drop down and select one station from drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 194
 testRunner.And("I click on the customer drop down and select one customer from drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.And("I delete the customer account if present in the customer specific logos grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
 testRunner.And(string.Format("I upload a file from \'{0}\' through file explorer", filepath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
 testRunner.And("I click on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.Then("Delete the uploaded logo by click on the delete button in the Customer Specific L" +
                    "ogo section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 199
 testRunner.And(string.Format("Verify the uploaded \'{0}\' must not be present in the grid", filename), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the delete button functionality in the Customer Specific Logo section: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecficBrandingConfiguration_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBrandingConfiguration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:filepath", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/BrandingLogo-ToDele" +
            "te.jpg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Filename", "BrandingLogo-ToDelete.jpg")]
        public virtual void VerifyTheDeleteButtonFunctionalityInTheCustomerSpecificLogoSection_S1()
        {
            this.VerifyTheDeleteButtonFunctionalityInTheCustomerSpecificLogoSection("S1", "crmSystemAdmin", "Te$t1234", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/BrandingLogo-ToDele" +
                    "te.jpg", "BrandingLogo-ToDelete.jpg", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheToggleButtonFunctionalityInTheCustomerSpecificLogoSection(string scenario, string username, string password, string oN, string oFF, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Toggle button functionality in the Customer Specific Logo section", @__tags);
#line 206
this.ScenarioSetup(scenarioInfo);
#line 207
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 208
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 210
 testRunner.And(string.Format("I am able to click CustomerSpecificBranding button and able to navigate to the Cu" +
                        "stomer Specific Branding page when \'{0}\' have the required claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
 testRunner.Then(string.Format("Verify toggle button have \'{0}\' and \'{1}\' lables", oN, oFF), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 212
 testRunner.And(string.Format("Verify the Toggle on \'{0}\' button state", oN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
 testRunner.And(string.Format("Verify the Toggle off \'{0}\' button  state", oFF), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Toggle button functionality in the Customer Specific Logo section: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecficBrandingConfiguration_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBrandingConfiguration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ON", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OFF", "OFF")]
        public virtual void VerifyTheToggleButtonFunctionalityInTheCustomerSpecificLogoSection_S1()
        {
            this.VerifyTheToggleButtonFunctionalityInTheCustomerSpecificLogoSection("S1", "crmSystemAdmin", "Te$t1234", "ON", "OFF", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
