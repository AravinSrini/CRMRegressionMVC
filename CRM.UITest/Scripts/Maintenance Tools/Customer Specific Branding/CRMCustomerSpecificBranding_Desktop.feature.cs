// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.MaintenanceTools.CustomerSpecificBranding
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CRMCustomerSpecificBranding_DesktopFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CRMCustomerSpecificBranding_Desktop.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CRMCustomerSpecificBranding_Desktop", null, ProgrammingLanguage.CSharp, new string[] {
                        "CRMCustomerSpecficBranding",
                        "20242",
                        "Sprint62"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CRMCustomerSpecificBranding_Desktop")))
            {
                CRM.UITest.Scripts.MaintenanceTools.CustomerSpecificBranding.CRMCustomerSpecificBranding_DesktopFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyThatTheCustomerLogoIsUploadedForTheCustomerSpecificAccount(string scenario, string username, string password, string userDropdown, string filename_Path, string station, string customeraccount, string filename, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that the customer logo is uploaded for the customer specific account", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("I am landing on DLS Worldwide homepage with RRD logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.When(string.Format("I click on the Maintenance Tools Menu available in the Landing Page navigate to M" +
                        "aintenance Tools landing page if \'{0}\' have claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.And(string.Format("I am able to click CustomerSpecificBranding button and able to navigate to the Cu" +
                        "stomer Specific Branding page when \'{0}\' have the required claim", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And(string.Format("I click on the station drop down and select the \'{0}\' from the drop down list", station), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And(string.Format("I click on the customer drop down and select the \'{0}\' from the drop down list", customeraccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("I delete the customer account if present in the customer specific logos grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And(string.Format("I upload a file with \'{0}\' through file explorer", filename_Path), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("I click on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.Then(string.Format("Verify the logo name \'{0}\' updated in the Customer Specific Logos list and Custom" +
                        " logo flag set to On by default", filename), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that the customer logo is uploaded for the customer specific account: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecificBranding_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBranding")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("20242")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserDropdown", "system Admin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Filename_path", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/BrandingLogo.jpg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:station", "James")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:customeraccount", "010-test account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Filename", "BrandingLogo.jpg")]
        public virtual void VerifyThatTheCustomerLogoIsUploadedForTheCustomerSpecificAccount_S1()
        {
            this.VerifyThatTheCustomerLogoIsUploadedForTheCustomerSpecificAccount("S1", "crmSystemAdmin", "Te$t1234", "system Admin", "../../Scripts/TestData/Testfiles_MaintenanceUpload/ValidFiles/BrandingLogo.jpg", "James", "010-test account", "BrandingLogo.jpg", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCustomerAccountIsUpdatedWithTheCustomerSpecificLogo(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the customer account is updated with the Customer Specific Logo", @__tags);
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 25
 testRunner.When("I land on the Dashboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.Then("Verify the customer account is updated with the customer specific logo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the customer account is updated with the Customer Specific Logo: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecificBranding_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBranding")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("20242")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "zzz")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void VerifyTheCustomerAccountIsUpdatedWithTheCustomerSpecificLogo_S1()
        {
            this.VerifyTheCustomerAccountIsUpdatedWithTheCustomerSpecificLogo("S1", "zzz", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCustomerAccountIsHavingCustomerSpecificLogoInByDefaultLeftAligned(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional",
                    "DBVerification",
                    "Sprint66",
                    "25239"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the customer account is having Customer Specific Logo in by default left a" +
                    "ligned", @__tags);
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
 testRunner.When("I land on the Dashboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.Then("Verify that the UI displays the logo as left aligned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the customer account is having Customer Specific Logo in by default left a" +
            "ligned: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecificBranding_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBranding")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("20242")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25239")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "logoleft1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Passw0rd!")]
        public virtual void VerifyTheCustomerAccountIsHavingCustomerSpecificLogoInByDefaultLeftAligned_S1()
        {
            this.VerifyTheCustomerAccountIsHavingCustomerSpecificLogoInByDefaultLeftAligned("S1", "logoleft1", "Passw0rd!", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCustomerAccountIsHavingCustomerSpecificLogoInCenterAligned(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional",
                    "DBVerification",
                    "Sprint66",
                    "25239"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the customer account is having Customer Specific Logo in center aligned", @__tags);
#line 50
this.ScenarioSetup(scenarioInfo);
#line 51
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 52
 testRunner.When("I land on the Dashboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
 testRunner.Then("Verify that the UI displays the logo as center aligned for the logged in customer" +
                    " with header logo changed to center", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the customer account is having Customer Specific Logo in center aligned: S" +
            "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CRMCustomerSpecificBranding_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CRMCustomerSpecficBranding")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("20242")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("25239")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "centerlogo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Passw0rd!")]
        public virtual void VerifyTheCustomerAccountIsHavingCustomerSpecificLogoInCenterAligned_S1()
        {
            this.VerifyTheCustomerAccountIsHavingCustomerSpecificLogoInCenterAligned("S1", "centerlogo", "Passw0rd!", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
