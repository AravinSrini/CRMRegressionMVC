// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.MaintenanceTools.ProductProtectionSetting
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class MaintenanceToolsProductProtectionFunctionality_Delete_Export_CustomersFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers", null, ProgrammingLanguage.CSharp, new string[] {
                        "MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers",
                        "20844",
                        "Sprint62"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")))
            {
                CRM.UITest.Scripts.MaintenanceTools.ProductProtectionSetting.MaintenanceToolsProductProtectionFunctionality_Delete_Export_CustomersFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyThePresenceOfDeleteButtonForDeletingTheCustomerFromTheGrid(string scenario, string username, string password, string stationName, string customerAccount, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Delete button for Deleting the Customer from the Grid", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given(string.Format("I am a DLS system admin user and login into application with valid {0},{1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
    testRunner.When("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.Then("I will have a Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 9
 testRunner.And("I click on Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And(string.Format("I will be able to see the presence of Delete button for Deleting the Customer Acc" +
                        "ount from the Grid {0}, {1}", stationName, customerAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Delete button for Deleting the Customer from the Grid: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("20844")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationName", "James")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "v-vasee")]
        public virtual void VerifyThePresenceOfDeleteButtonForDeletingTheCustomerFromTheGrid_S1()
        {
            this.VerifyThePresenceOfDeleteButtonForDeletingTheCustomerFromTheGrid("S1", "crmSystemAdmin", "Te$t1234", "James", "v-vasee", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfOkAndCancelButtonInTheDeleteConfirmationPopUp(string scenario, string username, string password, string stationName, string customerAccount, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Ok and Cancel button in the Delete Confirmation PopUp", @__tags);
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given(string.Format("I am a DLS system admin user and login into application with valid {0},{1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
    testRunner.When("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.Then("I will have a Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
 testRunner.And("I click on Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And(string.Format("I will be able to see the presence of Ok and Cancel button in the Delete confirma" +
                        "tion popup upon click on Delete button {0}, {1}", stationName, customerAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Ok and Cancel button in the Delete Confirmation PopUp: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("20844")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationName", "James")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "v-vasee")]
        public virtual void VerifyThePresenceOfOkAndCancelButtonInTheDeleteConfirmationPopUp_S1()
        {
            this.VerifyThePresenceOfOkAndCancelButtonInTheDeleteConfirmationPopUp("S1", "crmSystemAdmin", "Te$t1234", "James", "v-vasee", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfDeleteConfirmationMessageInDeleteConfirmationPopUp(string scenario, string username, string password, string stationName, string customerAccount, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Delete Confirmation Message in Delete Confirmation PopUp", @__tags);
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given(string.Format("I am a DLS system admin user and login into application with valid {0},{1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
    testRunner.When("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.Then("I will have a Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
 testRunner.And("I click on Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And(string.Format("I will be able to see presence of Delete Confirmation Message in Delete Confirmat" +
                        "ion PopUp upon clicking on Delete button {0}, {1}", stationName, customerAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Delete Confirmation Message in Delete Confirmation PopUp: " +
            "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("20844")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationName", "James")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "v-vasee")]
        public virtual void VerifyThePresenceOfDeleteConfirmationMessageInDeleteConfirmationPopUp_S1()
        {
            this.VerifyThePresenceOfDeleteConfirmationMessageInDeleteConfirmationPopUp("S1", "crmSystemAdmin", "Te$t1234", "James", "v-vasee", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCustomerNotDeletedFromTheProductProtectionGridUponClickOnTheCancelButtonFromTheDeleteConfirmationPopUp(string scenario, string username, string password, string stationName, string customerAccount, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Customer not Deleted from the Product Protection Grid upon click on th" +
                    "e cancel button from the Delete Confirmation PopUp", @__tags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
testRunner.Given(string.Format("I am a DLS system admin user and login into application with valid {0},{1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
    testRunner.When("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
 testRunner.Then("I will have a Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 44
 testRunner.And("I click on Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.And(string.Format("I clicked on the cancel button from the Delete Confirmation PopUp then the Corres" +
                        "ponding Customer Account will not be deleted from the Product Protection Grid {0" +
                        "}, {1}", stationName, customerAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Customer not Deleted from the Product Protection Grid upon click on th" +
            "e cancel button from the Delete Confirmation PopUp: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("20844")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationName", "James")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "v-vasee")]
        public virtual void VerifyTheCustomerNotDeletedFromTheProductProtectionGridUponClickOnTheCancelButtonFromTheDeleteConfirmationPopUp_S1()
        {
            this.VerifyTheCustomerNotDeletedFromTheProductProtectionGridUponClickOnTheCancelButtonFromTheDeleteConfirmationPopUp("S1", "crmSystemAdmin", "Te$t1234", "James", "v-vasee", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCustomerDeletedFromTheProductProtectionGridUponClickOnTheOkButtonFromTheDeleteConfirmationPopUp(string scenario, string username, string password, string stationName, string customerAccount, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Customer Deleted from the Product Protection Grid upon click on the Ok" +
                    " button from the Delete Confirmation PopUp", @__tags);
#line 51
this.ScenarioSetup(scenarioInfo);
#line 52
testRunner.Given(string.Format("I am a DLS system admin user and login into application with valid {0},{1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 53
    testRunner.When("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
 testRunner.Then("I will have a Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 55
 testRunner.And("I click on Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And(string.Format("I clicked on the Ok button from the Delete Confirmation PopUp then the Correspond" +
                        "ing Customer Account will be deleted from the Product Protection Grid {0}, {1}", stationName, customerAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Customer Deleted from the Product Protection Grid upon click on the Ok" +
            " button from the Delete Confirmation PopUp: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("20844")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationName", "James")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "v-vasee")]
        public virtual void VerifyTheCustomerDeletedFromTheProductProtectionGridUponClickOnTheOkButtonFromTheDeleteConfirmationPopUp_S1()
        {
            this.VerifyTheCustomerDeletedFromTheProductProtectionGridUponClickOnTheOkButtonFromTheDeleteConfirmationPopUp("S1", "crmSystemAdmin", "Te$t1234", "James", "v-vasee", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheDefaultInsuranceAllValueFromTheDatabaseForTheDeletedCustomer(string scenario, string username, string password, string stationName, string customerAccount, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "DBVerification"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Default Insurance All value from the Database for the Deleted Customer" +
                    "", @__tags);
#line 63
   this.ScenarioSetup(scenarioInfo);
#line 64
   testRunner.Given(string.Format("I am a DLS system admin user and login into application with valid {0},{1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 65
    testRunner.When("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.Then("I will have a Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 67
 testRunner.And("I click on Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
testRunner.And(string.Format("I will be able to verify the Default Insurance All value from the Database for th" +
                        "e Deleted Customer {0}, {1}", stationName, customerAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Default Insurance All value from the Database for the Deleted Customer" +
            ": S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("20844")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DBVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationName", "James")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "v-vasee")]
        public virtual void VerifyTheDefaultInsuranceAllValueFromTheDatabaseForTheDeletedCustomer_S1()
        {
            this.VerifyTheDefaultInsuranceAllValueFromTheDatabaseForTheDeletedCustomer("S1", "crmSystemAdmin", "Te$t1234", "James", "v-vasee", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyThePresenceOfExportButton(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the presence of Export button", @__tags);
#line 75
    this.ScenarioSetup(scenarioInfo);
#line 76
    testRunner.Given(string.Format("I am a DLS system admin user and login into application with valid {0},{1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 77
    testRunner.When("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
 testRunner.Then("I will have a Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 79
 testRunner.And("I click on Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.And("I will be able to see presence of Export button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the presence of Export button: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("20844")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        public virtual void VerifyThePresenceOfExportButton_S1()
        {
            this.VerifyThePresenceOfExportButton("S1", "crmSystemAdmin", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheExportButtonFunctionality(string scenario, string username, string password, string stationName, string customerAccount, string pPPCustomersExcel, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Export button Functionality", @__tags);
#line 87
 this.ScenarioSetup(scenarioInfo);
#line 88
 testRunner.Given(string.Format("I am a DLS system admin user and login into application with valid {0},{1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 89
    testRunner.When("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
 testRunner.Then("I will have a Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 91
 testRunner.And("I click on Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And(string.Format("I able to see the Exported Customer Account count in Excel and the Grid Count sam" +
                        "e when clicking on the Export button {0}, {1},{2}", stationName, customerAccount, pPPCustomersExcel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Export button Functionality: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("20844")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationName", "James")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "v-vasee")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PPPCustomersExcel", "PPPCustomers.xlsx")]
        public virtual void VerifyTheExportButtonFunctionality_S1()
        {
            this.VerifyTheExportButtonFunctionality("S1", "crmSystemAdmin", "Te$t1234", "James", "v-vasee", "PPPCustomers.xlsx", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheExportedExcelDataContentGridData(string scenario, string username, string password, string stationName, string customerAccount, string pPPCustomersExcel, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "Acceptance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Exported Excel data Content Grid data", @__tags);
#line 99
 this.ScenarioSetup(scenarioInfo);
#line 100
 testRunner.Given(string.Format("I am a DLS system admin user and login into application with valid {0},{1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 101
    testRunner.When("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 102
 testRunner.Then("I will have a Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 103
 testRunner.And("I click on Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
 testRunner.And(string.Format("I able to see the Exported Customer Account Matches with the Grid {0}, {1},{2}", stationName, customerAccount, pPPCustomersExcel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Exported Excel data Content Grid data: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("20844")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:username", "crmSystemAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StationName", "James")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerAccount", "v-vasee")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PPPCustomersExcel", "PPPCustomers.xlsx")]
        public virtual void VerifyTheExportedExcelDataContentGridData_S1()
        {
            this.VerifyTheExportedExcelDataContentGridData("S1", "crmSystemAdmin", "Te$t1234", "James", "v-vasee", "PPPCustomers.xlsx", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify rate caculation for propduct protection customer account for Default Custo" +
            "mer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MaintenanceToolsProductProtectionFunctionality_Delete_Export_Customers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("20844")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint62")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Acceptance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotAuotmated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Manual")]
        public virtual void VerifyRateCaculationForPropductProtectionCustomerAccountForDefaultCustomer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify rate caculation for propduct protection customer account for Default Custo" +
                    "mer", new string[] {
                        "Acceptance",
                        "NotAuotmated",
                        "Manual",
                        "Ignore"});
#line 111
this.ScenarioSetup(scenarioInfo);
#line 112
    testRunner.Given("I am a DLS system admin user and login into application with valid <username>,<pa" +
                    "ssword>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 113
    testRunner.When("I Click on the Maintenance tool icon in the navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
 testRunner.Then("I will have a Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 115
 testRunner.And("I click on Product Protection option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.And("I Delete the Customer from the Production Protection setting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.And("Logout from the application and login into application with exteranl user mapped " +
                    "to above Deleted default customer account and user must have access quote or shi" +
                    "pment module", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
 testRunner.And("Click on quote or shipment module and enter valaid data in all the fields and nav" +
                    "igate till results page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
 testRunner.And("Verify Carrier insured rates", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
 testRunner.And("And rates should be displayed as per the Default Customer default INS calculation" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
