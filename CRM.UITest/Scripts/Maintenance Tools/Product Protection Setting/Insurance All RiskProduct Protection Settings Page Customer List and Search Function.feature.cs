// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.MaintenanceTools.ProductProtectionSetting
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class InsuranceAllRiskProductProtectionSettingsPageCustomerListAndSearchFunctionFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Insurance All RiskProduct Protection Settings Page Customer List and Search Function.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Insurance All RiskProduct Protection Settings Page Customer List and Search Funct" +
                    "ion", null, ProgrammingLanguage.CSharp, new string[] {
                        "30284",
                        "Sprint76"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Insurance All RiskProduct Protection Settings Page Customer List and Search Funct" +
                            "ion")))
            {
                global::CRM.UITest.Scripts.MaintenanceTools.ProductProtectionSetting.InsuranceAllRiskProductProtectionSettingsPageCustomerListAndSearchFunctionFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _30284_VerifyIfTheCustomersAreListedInHierarchicalOrderInTheInsuranceAllRiskPage(string scenario, string username, string password, string station, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("30284_Verify if the customers are listed in hierarchical order in the Insurance A" +
                    "ll Risk page", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("I am a system admin user {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("I am on the Insurance All Risk/Product Protection Settings page of Maintenance To" +
                    "ols", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And("I am on the Insurance All Risk tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("I clicked on the Add Customer-Specific Insurance All Risk Settings button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And(string.Format("I selected a station {0}", station), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.When("I click in the Customer Account field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.Then(string.Format("The customers will be listed in hierarchy format {0},", station), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("30284_Verify if the customers are listed in hierarchical order in the Insurance A" +
            "ll Risk page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance All RiskProduct Protection Settings Page Customer List and Search Funct" +
            "ion")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("30284")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint76")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station", "TestStation013")]
        public virtual void _30284_VerifyIfTheCustomersAreListedInHierarchicalOrderInTheInsuranceAllRiskPage_S1()
        {
#line 5
this._30284_VerifyIfTheCustomersAreListedInHierarchicalOrderInTheInsuranceAllRiskPage("S1", "systemadmin", "Te$t1234", "TestStation013", ((string[])(null)));
#line hidden
        }
        
        public virtual void _30284_VerifyIfTheCustomersAreListedInAlphabeticalOrderInTheInsuranceAllRiskPage(string scenario, string username, string password, string station, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("30284_Verify if the customers are listed in Alphabetical order in the Insurance A" +
                    "ll Risk page", @__tags);
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
 testRunner.Given(string.Format("I am a system admin user {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
 testRunner.And("I am on the Insurance All Risk/Product Protection Settings page of Maintenance To" +
                    "ols", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And("I am on the Insurance All Risk tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("I clicked on the Add Customer-Specific Insurance All Risk Settings button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And(string.Format("I selected a station {0}", station), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.When("I click in the Customer Account field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.Then(string.Format("The customers will be listed in alphabetical order in the Insurance All Risk page" +
                        " {0}", station), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("30284_Verify if the customers are listed in Alphabetical order in the Insurance A" +
            "ll Risk page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance All RiskProduct Protection Settings Page Customer List and Search Funct" +
            "ion")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("30284")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint76")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station", "Bessie")]
        public virtual void _30284_VerifyIfTheCustomersAreListedInAlphabeticalOrderInTheInsuranceAllRiskPage_S1()
        {
#line 19
this._30284_VerifyIfTheCustomersAreListedInAlphabeticalOrderInTheInsuranceAllRiskPage("S1", "systemadmin", "Te$t1234", "Bessie", ((string[])(null)));
#line hidden
        }
        
        public virtual void _30284_VerifyIfTheCustomersAreDisplayedInAlphabeticalOrderInTheDetailsSectionOfInsuranceAllRiskPage(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("30284_Verify if the customers are displayed in alphabetical order in the details " +
                    "section of Insurance all risk page", @__tags);
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
 testRunner.Given(string.Format("I am a system admin user {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
 testRunner.And("I am on the Insurance All Risk/Product Protection Settings page of Maintenance To" +
                    "ols", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("I am on the Insurance All Risk tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.When("I click on the details icon (+) of any displayed station with customer-specific i" +
                    "nsurance all risk,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.Then("The customers will be displayed alphabetically.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("30284_Verify if the customers are displayed in alphabetical order in the details " +
            "section of Insurance all risk page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance All RiskProduct Protection Settings Page Customer List and Search Funct" +
            "ion")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("30284")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint76")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void _30284_VerifyIfTheCustomersAreDisplayedInAlphabeticalOrderInTheDetailsSectionOfInsuranceAllRiskPage_S1()
        {
#line 33
this._30284_VerifyIfTheCustomersAreDisplayedInAlphabeticalOrderInTheDetailsSectionOfInsuranceAllRiskPage("S1", "systemadmin", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void _30284_VerifyIfTheCustomersAreListedInHierarchicalOrderWhenUserClicksOnSelectCustomerAccountFieldOnTheProductProtectionPage(string scenario, string username, string password, string station, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("30284_Verify if the customers are listed in hierarchical order when user clicks o" +
                    "n Select Customer account field on the Product Protection page", @__tags);
#line 45
this.ScenarioSetup(scenarioInfo);
#line 46
 testRunner.Given(string.Format("I am a system admin user {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 47
 testRunner.And("I am on the Insurance All Risk Or Product Protection Settings page of Maintenance" +
                    " Tools", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And("I am on the Product Protection tab,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And(string.Format("I select station for Product Protection Page {0}", station), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.When("I click in the Select Customer account field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.Then(string.Format("The customers in PPP will be listed in hierarchy format {0},", station), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("30284_Verify if the customers are listed in hierarchical order when user clicks o" +
            "n Select Customer account field on the Product Protection page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance All RiskProduct Protection Settings Page Customer List and Search Funct" +
            "ion")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("30284")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint76")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station", "TestStation013")]
        public virtual void _30284_VerifyIfTheCustomersAreListedInHierarchicalOrderWhenUserClicksOnSelectCustomerAccountFieldOnTheProductProtectionPage_S1()
        {
#line 45
this._30284_VerifyIfTheCustomersAreListedInHierarchicalOrderWhenUserClicksOnSelectCustomerAccountFieldOnTheProductProtectionPage("S1", "systemadmin", "Te$t1234", "TestStation013", ((string[])(null)));
#line hidden
        }
        
        public virtual void _30284_VerifyIfTheCustomersAreListedInAlphabeticalOrderWhenUserClicksOnSelectCustomerAccountFieldOnTheProductProtectionPage(string scenario, string username, string password, string station, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("30284_Verify if the customers are listed in Alphabetical order when user clicks o" +
                    "n Select Customer account field on the Product Protection page", @__tags);
#line 59
this.ScenarioSetup(scenarioInfo);
#line 60
 testRunner.Given(string.Format("I am a system admin user {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
 testRunner.And("I am on the Insurance All Risk Or Product Protection Settings page of Maintenance" +
                    " Tools", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.And("I am on the Product Protection tab,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.And(string.Format("I select station for Product Protection Page {0}", station), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.When("I click in the Select Customer account field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
 testRunner.Then(string.Format("The PPP customers will be listed in alphabetical order {0}", station), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("30284_Verify if the customers are listed in Alphabetical order when user clicks o" +
            "n Select Customer account field on the Product Protection page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance All RiskProduct Protection Settings Page Customer List and Search Funct" +
            "ion")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("30284")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint76")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station", "Bessie")]
        public virtual void _30284_VerifyIfTheCustomersAreListedInAlphabeticalOrderWhenUserClicksOnSelectCustomerAccountFieldOnTheProductProtectionPage_S1()
        {
#line 59
this._30284_VerifyIfTheCustomersAreListedInAlphabeticalOrderWhenUserClicksOnSelectCustomerAccountFieldOnTheProductProtectionPage("S1", "systemadmin", "Te$t1234", "Bessie", ((string[])(null)));
#line hidden
        }
        
        public virtual void _30284_VerifyTheExistenceOfSearchOptionInTheCustomersWithProductProtectionSection(string scenario, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("30284_Verify the existence of search option in the Customers With Product Protect" +
                    "ion section", @__tags);
#line 72
this.ScenarioSetup(scenarioInfo);
#line 73
 testRunner.Given(string.Format("I am a system admin user {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 74
 testRunner.And("I am on the Insurance All Risk Or Product Protection Settings page of Maintenance" +
                    " Tools", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.When("I am on the Product Protection tab,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
 testRunner.Then("I will have a search option in the Customers With Product Protection section.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("30284_Verify the existence of search option in the Customers With Product Protect" +
            "ion section: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance All RiskProduct Protection Settings Page Customer List and Search Funct" +
            "ion")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("30284")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint76")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        public virtual void _30284_VerifyTheExistenceOfSearchOptionInTheCustomersWithProductProtectionSection_S1()
        {
#line 72
this._30284_VerifyTheExistenceOfSearchOptionInTheCustomersWithProductProtectionSection("S1", "systemadmin", "Te$t1234", ((string[])(null)));
#line hidden
        }
        
        public virtual void _30284_VerifyTheSearchFunctionalityInTheProductProtectionTab(string scenario, string username, string password, string searchVal, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("30284_Verify the search functionality in the Product Protection tab", @__tags);
#line 83
this.ScenarioSetup(scenarioInfo);
#line 84
 testRunner.Given(string.Format("I am a system admin user {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 85
 testRunner.And("I am on the Insurance All Risk Or Product Protection Settings page of Maintenance" +
                    " Tools", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
 testRunner.And("I am on the Product Protection tab,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.When(string.Format("I enter any value in the Search field in the Customers With Product Protection se" +
                        "ction {0}", searchVal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
 testRunner.Then(string.Format("any records matching the search criteria will be displayed as I enter values in t" +
                        "he search field {0}.", searchVal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("30284_Verify the search functionality in the Product Protection tab: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Insurance All RiskProduct Protection Settings Page Customer List and Search Funct" +
            "ion")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("30284")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint76")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "systemadmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SearchVal", "myCRMlogic")]
        public virtual void _30284_VerifyTheSearchFunctionalityInTheProductProtectionTab_S1()
        {
#line 83
this._30284_VerifyTheSearchFunctionalityInTheProductProtectionTab("S1", "systemadmin", "Te$t1234", "myCRMlogic", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
