// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Quote.LTL_InternalUsers.QuoteConfirmationScreen_InternalUsers
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class QuoteConfirmationPage_InternalUsersFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "InternalUsers_QuoteConfirmationPage.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "QuoteConfirmationPage-InternalUsers", null, ProgrammingLanguage.CSharp, new string[] {
                        "QuoteListNavigation",
                        "26522",
                        "Sprint67",
                        "Functional"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "QuoteConfirmationPage-InternalUsers")))
            {
                global::CRM.UITest.Scripts.Quote.LTL_InternalUsers.QuoteConfirmationScreen_InternalUsers.QuoteConfirmationPage_InternalUsersFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _26522_VerifyNameOfTheStationAndCustomerOnConfirmationPageWhenStandardRatesSelected(
                    string quoteConfirmationpageText, 
                    string service, 
                    string shipmentInformationPageHeaderName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationCity, 
                    string destinationState, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string quantityUnit, 
                    string weightUnit, 
                    string customer_Name, 
                    string station_Customer_Name, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("26522_Verify name of the station and customer on confirmation page when standard " +
                    "rates selected", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 7
testRunner.Given("I am a shp.inquiry, shp.entry, sales, sales management, operations, or station ow" +
                    "ner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
testRunner.And(string.Format("I have select the {0} from customer dropdown list", customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
testRunner.And("I have clicked on LTL Tile of rate request process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
testRunner.And("I Click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
testRunner.And("I click on save rate as quote link  for selected carrier in results page for stat" +
                    "ion users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 19
testRunner.And(string.Format("I will see the name of the {0} associated to the quote displayed", station_Customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("26522_Verify name of the station and customer on confirmation page when standard " +
            "rates selected: Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuoteConfirmationPage-InternalUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QuoteListNavigation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26522")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint67")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentInformationPageHeaderName", "Get Quote (LTL)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Chicago")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantityUnit", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weightUnit", "LPS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station_Customer_Name", "ZZZ - Web Services Test - ZZZ - GS Customer Test")]
        public virtual void _26522_VerifyNameOfTheStationAndCustomerOnConfirmationPageWhenStandardRatesSelected_QuoteConfirmation()
        {
#line 5
this._26522_VerifyNameOfTheStationAndCustomerOnConfirmationPageWhenStandardRatesSelected("Quote Confirmation", "LTL", "Get Quote (LTL)", "33126", "Miami", "FL", "60606", "Chicago", "CA", "50", "1", "12345", "", "3", "LPS", "ZZZ - GS Customer Test", "ZZZ - Web Services Test - ZZZ - GS Customer Test", ((string[])(null)));
#line hidden
        }
        
        public virtual void _26522_VerifyNameOfTheStationAndCustomerOnConfirmationPageWhenInsuredRatesSelected(
                    string quoteConfirmationpageText, 
                    string service, 
                    string shipmentInformationPageHeaderName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationCity, 
                    string destinationState, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string quantityUnit, 
                    string weightUnit, 
                    string customer_Name, 
                    string station_Customer_Name, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("26522_Verify name of the station and customer on confirmation page when insured r" +
                    "ates selected", @__tags);
#line 26
this.ScenarioSetup(scenarioInfo);
#line 28
testRunner.Given("I am a shp.inquiry, shp.entry, sales, sales management, operations, or station ow" +
                    "ner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
testRunner.And(string.Format("I have select the {0} from customer dropdown list", customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
testRunner.And("I have clicked on LTL Tile of rate request process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
testRunner.And("I Click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
testRunner.And(string.Format("I click on save insured rate as quote link  for carrier \'{0}\' for station users", shipmentValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 40
testRunner.And(string.Format("I will see the name of the {0} associated to the quote displayed", station_Customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("26522_Verify name of the station and customer on confirmation page when insured r" +
            "ates selected: Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuoteConfirmationPage-InternalUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QuoteListNavigation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26522")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint67")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentInformationPageHeaderName", "Get Quote (LTL)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Chicago")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantityUnit", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weightUnit", "LPS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station_Customer_Name", "ZZZ - Web Services Test - ZZZ - GS Customer Test")]
        public virtual void _26522_VerifyNameOfTheStationAndCustomerOnConfirmationPageWhenInsuredRatesSelected_QuoteConfirmation()
        {
#line 26
this._26522_VerifyNameOfTheStationAndCustomerOnConfirmationPageWhenInsuredRatesSelected("Quote Confirmation", "LTL", "Get Quote (LTL)", "33126", "Miami", "FL", "60606", "Chicago", "CA", "50", "1", "12345", "", "3", "LPS", "ZZZ - GS Customer Test", "ZZZ - Web Services Test - ZZZ - GS Customer Test", ((string[])(null)));
#line hidden
        }
        
        public virtual void _26522_VerifyNameOfTheStationAndCustomerOnConfirmationPageWhenNoCarrierAvailable(
                    string quoteAmount, 
                    string amountText, 
                    string quoteConfirmationpageText, 
                    string service, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string customer_Name, 
                    string station_Customer_Name, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("26522_Verify name of the station and customer on confirmation page when no carrie" +
                    "r available", @__tags);
#line 47
this.ScenarioSetup(scenarioInfo);
#line 49
testRunner.Given("I am a shp.inquiry, shp.entry, sales, sales management, operations, or station ow" +
                    "ner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 50
testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
testRunner.And(string.Format("I have select the {0} from customer dropdown list", customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
testRunner.And("I have clicked on LTL Tile of rate request process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
testRunner.And("I Click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
testRunner.And("I click on save rate as quote link  for selected carrier in results page for stat" +
                    "ion users", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 61
testRunner.And(string.Format("I will see the name of the {0} associated to the quote displayed", station_Customer_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("26522_Verify name of the station and customer on confirmation page when no carrie" +
            "r available: QUOTE AMOUNT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuoteConfirmationPage-InternalUsers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QuoteListNavigation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("26522")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint67")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QUOTE AMOUNT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteAmount", "QUOTE AMOUNT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AmountText", "Amount")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "566")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "Dunkin Donuts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Station_Customer_Name", "ENT - Bolingbrook IL - Dunkin Donuts")]
        public virtual void _26522_VerifyNameOfTheStationAndCustomerOnConfirmationPageWhenNoCarrierAvailable_QUOTEAMOUNT()
        {
#line 47
this._26522_VerifyNameOfTheStationAndCustomerOnConfirmationPageWhenNoCarrierAvailable("QUOTE AMOUNT", "Amount", "Quote Confirmation", "LTL", "90001", "LOS ANGELES", "CA", "90001", "CA", "LOS ANGELES", "50", "3", "566", "", "Dunkin Donuts", "ENT - Bolingbrook IL - Dunkin Donuts", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
