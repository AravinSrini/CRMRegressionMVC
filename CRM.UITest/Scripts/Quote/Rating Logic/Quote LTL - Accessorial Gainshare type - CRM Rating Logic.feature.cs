// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Quote.RatingLogic
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class QuoteLTL_AccessorialGainshareType_CRMRatingLogicFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Quote LTL - Accessorial Gainshare type - CRM Rating Logic.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Quote (LTL) - Accessorial Gainshare Type - CRM Rating Logic", null, ProgrammingLanguage.CSharp, new string[] {
                        "48837",
                        "NinjaSprint24"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Quote (LTL) - Accessorial Gainshare Type - CRM Rating Logic")))
            {
                global::CRM.UITest.Scripts.Quote.RatingLogic.QuoteLTL_AccessorialGainshareType_CRMRatingLogicFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _48837_VerifyThatTheCRMWillApplyAccessorialCostAsPerOverCostCalculationWhenTheGainShareTypeIsOverCostAndCustomerHasASetIndividualAccessorial(
                    string customer_Name, 
                    string service, 
                    string originCity, 
                    string originZip, 
                    string originState, 
                    string originCountry, 
                    string destinationCity, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCountry, 
                    string classification, 
                    string quantity, 
                    string weight, 
                    string userType, 
                    string gainShareType, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48837_Verify that the CRM will apply accessorial cost as per % over cost calculat" +
                    "ion when the gain share type is % over cost and customer has a Set Individual Ac" +
                    "cessorial", exampleTags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
testRunner.Given("I am a  shp.entry, sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
testRunner.And("I am creating an LTL rate request,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
testRunner.And("my customer has a Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
testRunner.And(string.Format("the Accessorial GainshareType is {0},", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
testRunner.And("CRM Rating Logic = Yes,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
testRunner.And("the rate request from CRM included the Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
testRunner.When(string.Format("CRM receives a rate responses from MG{0}, {1} ,{2}, {3}, {4}, {5}, {6}, {7}, {8}," +
                        " {9},{10},{11}, {12},{13}", customer_Name, service, originCity, originZip, originState, originCountry, destinationCity, destinationZip, destinationState, destinationCountry, classification, quantity, weight, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
testRunner.Then(string.Format("CRM will calculate the accessorials cost using the formula {0}", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48837_Verify that the CRM will apply accessorial cost as per % over cost calculat" +
            "ion when the gain share type is % over cost and customer has a Set Individual Ac" +
            "cessorial: ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote (LTL) - Accessorial Gainshare Type - CRM Rating Logic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48837")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint24")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GainShareType", "% over cost")]
        public virtual void _48837_VerifyThatTheCRMWillApplyAccessorialCostAsPerOverCostCalculationWhenTheGainShareTypeIsOverCostAndCustomerHasASetIndividualAccessorial_ZZZ_CzarCustomerTest()
        {
#line 4
this._48837_VerifyThatTheCRMWillApplyAccessorialCostAsPerOverCostCalculationWhenTheGainShareTypeIsOverCostAndCustomerHasASetIndividualAccessorial("ZZZ - Czar Customer Test", "LTL", "Miami", "33126", "FL", "USA", "Tempe", "85282", "AZ", "USA", "70", "1", "50", "External", "% over cost", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48837_VerifyThatTheCRMWillApplyAccessorialCostAsPerFlatOverCostCalculationWhenTheGainShareTypeIsFlatOverCostAndCustomerHasASetIndividualAccessorial(
                    string customer_Name, 
                    string service, 
                    string originCity, 
                    string originZip, 
                    string originState, 
                    string originCountry, 
                    string destinationCity, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCountry, 
                    string classification, 
                    string quantity, 
                    string weight, 
                    string userType, 
                    string gainShareType, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48837_Verify that the CRM will apply accessorial cost as per flat over cost calcu" +
                    "lation when the gain share type is flat over cost and customer has a Set Individ" +
                    "ual Accessorial", exampleTags);
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
testRunner.Given("I am a  shp.entry, sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
testRunner.And("I am creating an LTL rate request,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
testRunner.And("my customer has a Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
testRunner.And(string.Format("the Accessorial GainshareType is {0},", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
testRunner.And("CRM Rating Logic = Yes,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
testRunner.And("the rate request from CRM included the Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
testRunner.When(string.Format("CRM receives a rate responses from MG{0}, {1} ,{2}, {3}, {4}, {5}, {6}, {7}, {8}," +
                        " {9},{10},{11}, {12},{13}", customer_Name, service, originCity, originZip, originState, originCountry, destinationCity, destinationZip, destinationState, destinationCountry, classification, quantity, weight, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
testRunner.Then(string.Format("CRM will calculate the accessorials cost using the formula {0}", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48837_Verify that the CRM will apply accessorial cost as per flat over cost calcu" +
            "lation when the gain share type is flat over cost and customer has a Set Individ" +
            "ual Accessorial: ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote (LTL) - Accessorial Gainshare Type - CRM Rating Logic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48837")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint24")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GainShareType", "Flat over cost")]
        public virtual void _48837_VerifyThatTheCRMWillApplyAccessorialCostAsPerFlatOverCostCalculationWhenTheGainShareTypeIsFlatOverCostAndCustomerHasASetIndividualAccessorial_ZZZ_CzarCustomerTest()
        {
#line 18
this._48837_VerifyThatTheCRMWillApplyAccessorialCostAsPerFlatOverCostCalculationWhenTheGainShareTypeIsFlatOverCostAndCustomerHasASetIndividualAccessorial("ZZZ - Czar Customer Test", "LTL", "Miami", "33126", "FL", "USA", "Tempe", "85282", "AZ", "USA", "70", "1", "100", "External", "Flat over cost", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48837_VerifyThatTheCRMWillApplyAccessorialCostAsSetFlatAmountWhenTheGainShareTypeIsSetFlatAmountAndCustomerHasASetIndividualAccessorial(
                    string customer_Name, 
                    string service, 
                    string originCity, 
                    string originZip, 
                    string originState, 
                    string originCountry, 
                    string destinationCity, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCountry, 
                    string classification, 
                    string quantity, 
                    string weight, 
                    string userType, 
                    string gainShareType, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48837_Verify that the CRM will apply accessorial cost as Set flat amount when the" +
                    " gain share type is Set flat amount and customer has a Set Individual Accessoria" +
                    "l", exampleTags);
#line 32
 this.ScenarioSetup(scenarioInfo);
#line 33
testRunner.Given("I am a  shp.entry, sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
testRunner.And("I am creating an LTL rate request,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
testRunner.And("my customer has a Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
testRunner.And(string.Format("the Accessorial GainshareType is {0},", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
testRunner.And("CRM Rating Logic = Yes,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
testRunner.And("the rate request from CRM included the Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
testRunner.When(string.Format("CRM receives a rate responses from MG{0}, {1} ,{2}, {3}, {4}, {5}, {6}, {7}, {8}," +
                        " {9},{10},{11}, {12},{13}", customer_Name, service, originCity, originZip, originState, originCountry, destinationCity, destinationZip, destinationState, destinationCountry, classification, quantity, weight, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
testRunner.Then(string.Format("CRM will calculate the accessorials cost using the formula {0}", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48837_Verify that the CRM will apply accessorial cost as Set flat amount when the" +
            " gain share type is Set flat amount and customer has a Set Individual Accessoria" +
            "l: ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote (LTL) - Accessorial Gainshare Type - CRM Rating Logic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48837")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint24")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GainShareType", "Set flat amount")]
        public virtual void _48837_VerifyThatTheCRMWillApplyAccessorialCostAsSetFlatAmountWhenTheGainShareTypeIsSetFlatAmountAndCustomerHasASetIndividualAccessorial_ZZZ_CzarCustomerTest()
        {
#line 32
 this._48837_VerifyThatTheCRMWillApplyAccessorialCostAsSetFlatAmountWhenTheGainShareTypeIsSetFlatAmountAndCustomerHasASetIndividualAccessorial("ZZZ - Czar Customer Test", "LTL", "Miami", "33126", "FL", "USA", "Tempe", "85282", "AZ", "USA", "70", "1", "100", "External", "Set flat amount", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48837_VerifyThatTheCRMWillApplyAccessorialCostAsPerOverCostCalculationWhenTheGainShareTypeIsOverCostAndCustomerHasCarrier_SpecificSetIndividualAccessorial(
                    string customer_Name, 
                    string service, 
                    string originCity, 
                    string originZip, 
                    string originState, 
                    string originCountry, 
                    string destinationCity, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCountry, 
                    string classification, 
                    string quantity, 
                    string weight, 
                    string userType, 
                    string gainShareType, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48837_Verify that the CRM will apply accessorial cost as per % over cost calculat" +
                    "ion when the gain share type is % over cost and customer has carrier-specific se" +
                    "t individual accessorial", exampleTags);
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
testRunner.Given("I am a  shp.entry, sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
testRunner.And("I am creating an LTL rate request,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
testRunner.And("my customer has a Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
testRunner.And(string.Format("the Accessorial GainshareType is {0},", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
testRunner.And("CRM Rating Logic = Yes,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.And("the rate request from CRM included the Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
testRunner.When(string.Format("CRM receives a rate responses from MG{0}, {1} ,{2}, {3}, {4}, {5}, {6}, {7}, {8}," +
                        " {9},{10},{11}, {12},{13}", customer_Name, service, originCity, originZip, originState, originCountry, destinationCity, destinationZip, destinationState, destinationCountry, classification, quantity, weight, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
testRunner.Then(string.Format("CRM will calculate the accessorials cost using the formula {0}", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48837_Verify that the CRM will apply accessorial cost as per % over cost calculat" +
            "ion when the gain share type is % over cost and customer has carrier-specific se" +
            "t individual accessorial: ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote (LTL) - Accessorial Gainshare Type - CRM Rating Logic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48837")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint24")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GainShareType", "% over cost")]
        public virtual void _48837_VerifyThatTheCRMWillApplyAccessorialCostAsPerOverCostCalculationWhenTheGainShareTypeIsOverCostAndCustomerHasCarrier_SpecificSetIndividualAccessorial_ZZZ_CzarCustomerTest()
        {
#line 46
this._48837_VerifyThatTheCRMWillApplyAccessorialCostAsPerOverCostCalculationWhenTheGainShareTypeIsOverCostAndCustomerHasCarrier_SpecificSetIndividualAccessorial("ZZZ - Czar Customer Test", "LTL", "Miami", "33126", "FL", "USA", "Tempe", "85282", "AZ", "USA", "70", "1", "100", "External", "% over cost", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48837_VerifyThatTheCRMWillApplyAccessorialCostAsPerFlatOverCostCalculationWhenTheGainShareTypeIsFlatOverCostAndCustomerHasCarrier_SpecificSetIndividualAccessorial(
                    string customer_Name, 
                    string service, 
                    string originCity, 
                    string originZip, 
                    string originState, 
                    string originCountry, 
                    string destinationCity, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCountry, 
                    string classification, 
                    string quantity, 
                    string weight, 
                    string userType, 
                    string gainShareType, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48837_Verify that the CRM will apply accessorial cost as per Flat over cost calcu" +
                    "lation when the gain share type is Flat over cost and customer has carrier-speci" +
                    "fic set individual accessorial", exampleTags);
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
testRunner.Given("I am a  shp.entry, sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
testRunner.And("I am creating an LTL rate request,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
testRunner.And("my customer has a Carrier-Specific Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
testRunner.And(string.Format("the Accessorial GainshareType is {0},", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
testRunner.And("CRM Rating Logic = Yes,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
testRunner.And("the rate request from CRM included the Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
testRunner.When(string.Format("CRM receives a rate responses from MG{0}, {1} ,{2}, {3}, {4}, {5}, {6}, {7}, {8}," +
                        " {9},{10},{11}, {12},{13}", customer_Name, service, originCity, originZip, originState, originCountry, destinationCity, destinationZip, destinationState, destinationCountry, classification, quantity, weight, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
testRunner.Then(string.Format("CRM will calculate the accessorials cost using the formula {0}", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48837_Verify that the CRM will apply accessorial cost as per Flat over cost calcu" +
            "lation when the gain share type is Flat over cost and customer has carrier-speci" +
            "fic set individual accessorial: ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote (LTL) - Accessorial Gainshare Type - CRM Rating Logic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48837")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint24")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GainShareType", "Flat over cost")]
        public virtual void _48837_VerifyThatTheCRMWillApplyAccessorialCostAsPerFlatOverCostCalculationWhenTheGainShareTypeIsFlatOverCostAndCustomerHasCarrier_SpecificSetIndividualAccessorial_ZZZ_CzarCustomerTest()
        {
#line 60
this._48837_VerifyThatTheCRMWillApplyAccessorialCostAsPerFlatOverCostCalculationWhenTheGainShareTypeIsFlatOverCostAndCustomerHasCarrier_SpecificSetIndividualAccessorial("ZZZ - Czar Customer Test", "LTL", "Miami", "33126", "FL", "USA", "Tempe", "85282", "AZ", "USA", "70", "1", "100", "External", "Flat over cost", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48837_VerifyThatTheCRMWillApplyAccessorialCostAsSetFlatAmountWhenTheGainShareTypeIsSetFlatAmountAndCustomerHasCarrier_SpecificSetIndividualAccessorial(
                    string customer_Name, 
                    string service, 
                    string originCity, 
                    string originZip, 
                    string originState, 
                    string originCountry, 
                    string destinationCity, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCountry, 
                    string classification, 
                    string quantity, 
                    string weight, 
                    string userType, 
                    string gainShareType, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48837_Verify that the CRM will apply accessorial cost as Set flat amount when the" +
                    " gain share type is Set flat amount and customer has carrier-specific set indivi" +
                    "dual accessorial", exampleTags);
#line 75
this.ScenarioSetup(scenarioInfo);
#line 76
testRunner.Given("I am a  shp.entry, sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 77
testRunner.And("I am creating an LTL rate request,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
testRunner.And("my customer has a Carrier-Specific Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
testRunner.And(string.Format("the Accessorial GainshareType is {0},", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
testRunner.And("CRM Rating Logic = Yes,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
testRunner.And("the rate request from CRM included the Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
testRunner.When(string.Format("CRM receives a rate responses from MG{0}, {1} ,{2}, {3}, {4}, {5}, {6}, {7}, {8}," +
                        " {9},{10},{11}, {12},{13}", customer_Name, service, originCity, originZip, originState, originCountry, destinationCity, destinationZip, destinationState, destinationCountry, classification, quantity, weight, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
testRunner.Then(string.Format("CRM will calculate the accessorials cost using the formula {0}", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48837_Verify that the CRM will apply accessorial cost as Set flat amount when the" +
            " gain share type is Set flat amount and customer has carrier-specific set indivi" +
            "dual accessorial: ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote (LTL) - Accessorial Gainshare Type - CRM Rating Logic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48837")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint24")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GainShareType", "Flat over cost")]
        public virtual void _48837_VerifyThatTheCRMWillApplyAccessorialCostAsSetFlatAmountWhenTheGainShareTypeIsSetFlatAmountAndCustomerHasCarrier_SpecificSetIndividualAccessorial_ZZZ_CzarCustomerTest()
        {
#line 75
this._48837_VerifyThatTheCRMWillApplyAccessorialCostAsSetFlatAmountWhenTheGainShareTypeIsSetFlatAmountAndCustomerHasCarrier_SpecificSetIndividualAccessorial("ZZZ - Czar Customer Test", "LTL", "Miami", "33126", "FL", "USA", "Tempe", "85282", "AZ", "USA", "70", "1", "100", "External", "Flat over cost", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsPerOverCostCalculationWhenTheGainShareTypeIsOverCostAndCustomerHasASetIndividualAccessorial(
                    string customer_Name, 
                    string service, 
                    string originCity, 
                    string originZip, 
                    string originState, 
                    string originCountry, 
                    string destinationCity, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCountry, 
                    string classification, 
                    string quantity, 
                    string weight, 
                    string userType, 
                    string gainShareType, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48837_Verify ltl requote that the CRM will apply accessorial cost as per % over c" +
                    "ost calculation when the gain share type is % over cost and customer has a Set I" +
                    "ndividual Accessorial", exampleTags);
#line 89
this.ScenarioSetup(scenarioInfo);
#line 90
testRunner.Given("I am a  shp.entry, sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 91
testRunner.And("I am re-quoting an expired LTL quote,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
testRunner.And("my customer has a Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
testRunner.And(string.Format("the Accessorial GainshareType is {0},", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
testRunner.And("CRM Rating Logic = Yes,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
testRunner.And("the rate request from CRM included the Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
testRunner.When(string.Format("CRM receives a rate responses from MG{0}, {1} ,{2}, {3}, {4}, {5}, {6}, {7}, {8}," +
                        " {9},{10},{11}, {12},{13}", customer_Name, service, originCity, originZip, originState, originCountry, destinationCity, destinationZip, destinationState, destinationCountry, classification, quantity, weight, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
testRunner.Then(string.Format("CRM will calculate the accessorials cost using the formula {0}", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48837_Verify ltl requote that the CRM will apply accessorial cost as per % over c" +
            "ost calculation when the gain share type is % over cost and customer has a Set I" +
            "ndividual Accessorial: ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote (LTL) - Accessorial Gainshare Type - CRM Rating Logic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48837")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint24")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "External")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GainShareType", "% over cost")]
        public virtual void _48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsPerOverCostCalculationWhenTheGainShareTypeIsOverCostAndCustomerHasASetIndividualAccessorial_ZZZ_CzarCustomerTest()
        {
#line 89
this._48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsPerOverCostCalculationWhenTheGainShareTypeIsOverCostAndCustomerHasASetIndividualAccessorial("ZZZ - Czar Customer Test", "LTL", "Miami", "33126", "FL", "USA", "Tempe", "85282", "AZ", "USA", "70", "1", "100", "External", "% over cost", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsPerFlatOverCostCalculationWhenTheGainShareTypeIsFlatOverCostAndCustomerHasASetIndividualAccessorial(
                    string customer_Name, 
                    string service, 
                    string originCity, 
                    string originZip, 
                    string originState, 
                    string originCountry, 
                    string destinationCity, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCountry, 
                    string classification, 
                    string quantity, 
                    string weight, 
                    string userType, 
                    string gainShareType, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48837_Verify ltl requote that the CRM will apply accessorial cost as per flat ove" +
                    "r cost calculation when the gain share type is flat over cost and customer has a" +
                    " Set Individual Accessorial", exampleTags);
#line 103
this.ScenarioSetup(scenarioInfo);
#line 104
testRunner.Given("I am a  shp.entry, sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 105
testRunner.And("I am re-quoting an expired LTL quote,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
testRunner.And("my customer has a Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
testRunner.And(string.Format("the Accessorial GainshareType is {0},", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
testRunner.And("CRM Rating Logic = Yes,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
testRunner.And("the rate request from CRM included the Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
testRunner.When(string.Format("CRM receives a rate responses from MG{0}, {1} ,{2}, {3}, {4}, {5}, {6}, {7}, {8}," +
                        " {9},{10},{11}, {12},{13}", customer_Name, service, originCity, originZip, originState, originCountry, destinationCity, destinationZip, destinationState, destinationCountry, classification, quantity, weight, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 111
testRunner.Then(string.Format("CRM will calculate the accessorials cost using the formula {0}", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48837_Verify ltl requote that the CRM will apply accessorial cost as per flat ove" +
            "r cost calculation when the gain share type is flat over cost and customer has a" +
            " Set Individual Accessorial: ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote (LTL) - Accessorial Gainshare Type - CRM Rating Logic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48837")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint24")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GainShareType", "Flat over cost")]
        public virtual void _48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsPerFlatOverCostCalculationWhenTheGainShareTypeIsFlatOverCostAndCustomerHasASetIndividualAccessorial_ZZZ_CzarCustomerTest()
        {
#line 103
this._48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsPerFlatOverCostCalculationWhenTheGainShareTypeIsFlatOverCostAndCustomerHasASetIndividualAccessorial("ZZZ - Czar Customer Test", "LTL", "Miami", "33126", "FL", "USA", "Tempe", "85282", "AZ", "USA", "70", "1", "100", "Internal", "Flat over cost", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsSetFlatAmountWhenTheGainShareTypeIsSetFlatAmountAndCustomerHasASetIndividualAccessorial(
                    string customer_Name, 
                    string service, 
                    string originCity, 
                    string originZip, 
                    string originState, 
                    string originCountry, 
                    string destinationCity, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCountry, 
                    string classification, 
                    string quantity, 
                    string weight, 
                    string userType, 
                    string gainShareType, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48837_Verify ltl requote that the CRM will apply accessorial cost as Set flat amo" +
                    "unt when the gain share type is Set flat amount and customer has a Set Individua" +
                    "l Accessorial", exampleTags);
#line 117
 this.ScenarioSetup(scenarioInfo);
#line 118
testRunner.Given("I am a  shp.entry, sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 119
testRunner.And("I am re-quoting an expired LTL quote,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
testRunner.And("my customer has a Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
testRunner.And(string.Format("the Accessorial GainshareType is {0},", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
testRunner.And("CRM Rating Logic = Yes,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
testRunner.And("the rate request from CRM included the Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
testRunner.When(string.Format("CRM receives a rate responses from MG{0}, {1} ,{2}, {3}, {4}, {5}, {6}, {7}, {8}," +
                        " {9},{10},{11}, {12},{13}", customer_Name, service, originCity, originZip, originState, originCountry, destinationCity, destinationZip, destinationState, destinationCountry, classification, quantity, weight, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 125
testRunner.Then(string.Format("CRM will calculate the accessorials cost using the formula {0}", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48837_Verify ltl requote that the CRM will apply accessorial cost as Set flat amo" +
            "unt when the gain share type is Set flat amount and customer has a Set Individua" +
            "l Accessorial: ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote (LTL) - Accessorial Gainshare Type - CRM Rating Logic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48837")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint24")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GainShareType", "Set flat amount")]
        public virtual void _48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsSetFlatAmountWhenTheGainShareTypeIsSetFlatAmountAndCustomerHasASetIndividualAccessorial_ZZZ_CzarCustomerTest()
        {
#line 117
 this._48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsSetFlatAmountWhenTheGainShareTypeIsSetFlatAmountAndCustomerHasASetIndividualAccessorial("ZZZ - Czar Customer Test", "LTL", "Miami", "33126", "FL", "USA", "Tempe", "85282", "AZ", "USA", "70", "1", "100", "Internal", "Set flat amount", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsPerOverCostCalculationWhenTheGainShareTypeIsOverCostAndCustomerHasCarrier_SpecificSetIndividualAccessorial(
                    string customer_Name, 
                    string service, 
                    string originCity, 
                    string originZip, 
                    string originState, 
                    string originCountry, 
                    string destinationCity, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCountry, 
                    string classification, 
                    string quantity, 
                    string weight, 
                    string userType, 
                    string gainShareType, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48837_Verify ltl requote that the CRM will apply accessorial cost as per % over c" +
                    "ost calculation when the gain share type is % over cost and customer has carrier" +
                    "-specific set individual accessorial", exampleTags);
#line 131
this.ScenarioSetup(scenarioInfo);
#line 132
testRunner.Given("I am a  shp.entry, sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 133
testRunner.And("I am re-quoting an expired LTL quote,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
testRunner.And("my customer has a Carrier-Specific Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
testRunner.And(string.Format("the Accessorial GainshareType is {0},", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
testRunner.And("CRM Rating Logic = Yes,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
testRunner.And("the rate request from CRM included the Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 138
testRunner.When(string.Format("CRM receives a rate responses from MG{0}, {1} ,{2}, {3}, {4}, {5}, {6}, {7}, {8}," +
                        " {9},{10},{11}, {12},{13}", customer_Name, service, originCity, originZip, originState, originCountry, destinationCity, destinationZip, destinationState, destinationCountry, classification, quantity, weight, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 139
testRunner.Then(string.Format("CRM will calculate the accessorials cost using the formula {0}", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48837_Verify ltl requote that the CRM will apply accessorial cost as per % over c" +
            "ost calculation when the gain share type is % over cost and customer has carrier" +
            "-specific set individual accessorial: ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote (LTL) - Accessorial Gainshare Type - CRM Rating Logic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48837")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint24")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GainShareType", "% over cost")]
        public virtual void _48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsPerOverCostCalculationWhenTheGainShareTypeIsOverCostAndCustomerHasCarrier_SpecificSetIndividualAccessorial_ZZZ_CzarCustomerTest()
        {
#line 131
this._48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsPerOverCostCalculationWhenTheGainShareTypeIsOverCostAndCustomerHasCarrier_SpecificSetIndividualAccessorial("ZZZ - Czar Customer Test", "LTL", "Miami", "33126", "FL", "USA", "Tempe", "85282", "AZ", "USA", "70", "1", "100", "Internal", "% over cost", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsPerFlatOverCostCalculationWhenTheGainShareTypeIsFlatOverCostAndCustomerHasCarrier_SpecificSetIndividualAccessorial(
                    string customer_Name, 
                    string service, 
                    string originCity, 
                    string originZip, 
                    string originState, 
                    string originCountry, 
                    string destinationCity, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCountry, 
                    string classification, 
                    string quantity, 
                    string weight, 
                    string userType, 
                    string gainShareType, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48837_Verify ltl requote that the CRM will apply accessorial cost as per Flat ove" +
                    "r cost calculation when the gain share type is Flat over cost and customer has c" +
                    "arrier-specific set individual accessorial", exampleTags);
#line 145
this.ScenarioSetup(scenarioInfo);
#line 146
testRunner.Given("I am a  shp.entry, sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 147
testRunner.And("I am re-quoting an expired LTL quote,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
testRunner.And("my customer has a Carrier-Specific Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
testRunner.And(string.Format("the Accessorial GainshareType is {0},", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
testRunner.And("CRM Rating Logic = Yes,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
testRunner.And("the rate request from CRM included the Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
testRunner.When(string.Format("CRM receives a rate responses from MG{0}, {1} ,{2}, {3}, {4}, {5}, {6}, {7}, {8}," +
                        " {9},{10},{11}, {12},{13}", customer_Name, service, originCity, originZip, originState, originCountry, destinationCity, destinationZip, destinationState, destinationCountry, classification, quantity, weight, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 153
testRunner.Then(string.Format("CRM will calculate the accessorials cost using the formula {0}", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48837_Verify ltl requote that the CRM will apply accessorial cost as per Flat ove" +
            "r cost calculation when the gain share type is Flat over cost and customer has c" +
            "arrier-specific set individual accessorial: ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote (LTL) - Accessorial Gainshare Type - CRM Rating Logic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48837")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint24")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GainShareType", "Flat over cost")]
        public virtual void _48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsPerFlatOverCostCalculationWhenTheGainShareTypeIsFlatOverCostAndCustomerHasCarrier_SpecificSetIndividualAccessorial_ZZZ_CzarCustomerTest()
        {
#line 145
this._48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsPerFlatOverCostCalculationWhenTheGainShareTypeIsFlatOverCostAndCustomerHasCarrier_SpecificSetIndividualAccessorial("ZZZ - Czar Customer Test", "LTL", "Miami", "33126", "FL", "USA", "Tempe", "85282", "AZ", "USA", "70", "1", "100", "Internal", "Flat over cost", ((string[])(null)));
#line hidden
        }
        
        public virtual void _48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsSetFlatAmountWhenTheGainShareTypeIsSetFlatAmountAndCustomerHasCarrier_SpecificSetIndividualAccessorial(
                    string customer_Name, 
                    string service, 
                    string originCity, 
                    string originZip, 
                    string originState, 
                    string originCountry, 
                    string destinationCity, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCountry, 
                    string classification, 
                    string quantity, 
                    string weight, 
                    string userType, 
                    string gainShareType, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48837_Verify ltl requote that the CRM will apply accessorial cost as Set flat amo" +
                    "unt when the gain share type is Set flat amount and customer has carrier-specifi" +
                    "c set individual accessorial", exampleTags);
#line 160
this.ScenarioSetup(scenarioInfo);
#line 161
testRunner.Given("I am a  shp.entry, sales, sales management, operations, or station owner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
testRunner.And("I am re-quoting an expired LTL quote,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
testRunner.And("my customer has a Carrier-Specific Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
testRunner.And(string.Format("the Accessorial GainshareType is {0},", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
testRunner.And("CRM Rating Logic = Yes,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
testRunner.And("the rate request from CRM included the Set Individual Accessorials,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
testRunner.When(string.Format("CRM receives a rate responses from MG{0}, {1} ,{2}, {3}, {4}, {5}, {6}, {7}, {8}," +
                        " {9},{10},{11}, {12},{13}", customer_Name, service, originCity, originZip, originState, originCountry, destinationCity, destinationZip, destinationState, destinationCountry, classification, quantity, weight, userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 168
testRunner.Then(string.Format("CRM will calculate the accessorials cost using the formula {0}", gainShareType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("48837_Verify ltl requote that the CRM will apply accessorial cost as Set flat amo" +
            "unt when the gain share type is Set flat amount and customer has carrier-specifi" +
            "c set individual accessorial: ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Quote (LTL) - Accessorial Gainshare Type - CRM Rating Logic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("48837")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint24")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Customer_Name", "ZZZ - Czar Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GainShareType", "Flat over cost")]
        public virtual void _48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsSetFlatAmountWhenTheGainShareTypeIsSetFlatAmountAndCustomerHasCarrier_SpecificSetIndividualAccessorial_ZZZ_CzarCustomerTest()
        {
#line 160
this._48837_VerifyLtlRequoteThatTheCRMWillApplyAccessorialCostAsSetFlatAmountWhenTheGainShareTypeIsSetFlatAmountAndCustomerHasCarrier_SpecificSetIndividualAccessorial("ZZZ - Czar Customer Test", "LTL", "Miami", "33126", "FL", "USA", "Tempe", "85282", "AZ", "USA", "70", "1", "100", "Internal", "Flat over cost", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
