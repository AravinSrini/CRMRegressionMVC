// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Quote.LTL.QuoteResultsScreen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class QuotesResultsLTLPage_ImproveResultsDisplayFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "QuotesResultsLTLPage_ImproveResultsDisplay.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "QuotesResultsLTLPage_ImproveResultsDisplay", null, ProgrammingLanguage.CSharp, new string[] {
                        "NinjaSprint13",
                        "39669"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "QuotesResultsLTLPage_ImproveResultsDisplay")))
            {
                global::CRM.UITest.Scripts.Quote.LTL.QuoteResultsScreen.QuotesResultsLTLPage_ImproveResultsDisplayFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _39669_Verify_CarrierLegalLiabilityVerbiageIsChangedToCarriersLegalLiabilityPerLbIfUninsuredForExternalUser(
                    string scenario, 
                    string userType, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_Carrier legal liability verbiage is changed to Carrier\'s legal liabi" +
                    "lity per lb if uninsured for External user", @__tags);
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I Am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.Then("I verify the carrier legal liability verbiage is Carrier\'s legal liability per lb" +
                    " if uninsured", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_Carrier legal liability verbiage is changed to Carrier\'s legal liabi" +
            "lity per lb if uninsured for External user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "both")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_CarrierLegalLiabilityVerbiageIsChangedToCarriersLegalLiabilityPerLbIfUninsuredForExternalUser_S1()
        {
#line 6
this._39669_Verify_CarrierLegalLiabilityVerbiageIsChangedToCarriersLegalLiabilityPerLbIfUninsuredForExternalUser("s1", "both", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheCarrierMaxLiabilityVerbiageIsChangedToCarriersMaxLiabilityIfUninsuredForExternalUser(
                    string scenario, 
                    string userType, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The carrier max liability verbiage is changed to Carrier\'s max liabi" +
                    "lity if uninsured for External user", @__tags);
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
 testRunner.Given("I Am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 25
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.Then("I verify the carrier max liability verbiage is Carrier\'s max liability if uninsur" +
                    "ed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The carrier max liability verbiage is changed to Carrier\'s max liabi" +
            "lity if uninsured for External user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "both")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheCarrierMaxLiabilityVerbiageIsChangedToCarriersMaxLiabilityIfUninsuredForExternalUser_S1()
        {
#line 23
this._39669_Verify_TheCarrierMaxLiabilityVerbiageIsChangedToCarriersMaxLiabilityIfUninsuredForExternalUser("s1", "both", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheCarrierLegalLiabilityCurrencyValueForNewIsFormattedToXxx_XxForExternalUser(
                    string scenario, 
                    string userType, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The carrier legal liability Currency value for New is formatted to x" +
                    "xx.xx for External user", @__tags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
 testRunner.Given("I Am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.Then("I verify the carrier legal liability Currency value for New is formatted to xxx.x" +
                    "x", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The carrier legal liability Currency value for New is formatted to x" +
            "xx.xx for External user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "both")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheCarrierLegalLiabilityCurrencyValueForNewIsFormattedToXxx_XxForExternalUser_S1()
        {
#line 40
this._39669_Verify_TheCarrierLegalLiabilityCurrencyValueForNewIsFormattedToXxx_XxForExternalUser("s1", "both", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheCarrierLegalLiabilityCurrencyValueForUsedIsFormattedToXxx_XxForExternalUser(
                    string scenario, 
                    string userType, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The carrier legal liability Currency value for Used is formatted to " +
                    "xxx.xx for External user", @__tags);
#line 57
this.ScenarioSetup(scenarioInfo);
#line 58
 testRunner.Given("I Am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.Then("I verify the carrier legal liability Currency value for Used is formatted to xxx." +
                    "xx", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The carrier legal liability Currency value for Used is formatted to " +
            "xxx.xx for External user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheCarrierLegalLiabilityCurrencyValueForUsedIsFormattedToXxx_XxForExternalUser_S1()
        {
#line 57
this._39669_Verify_TheCarrierLegalLiabilityCurrencyValueForUsedIsFormattedToXxx_XxForExternalUser("s1", "shipentry", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheCarrierMaxLiabilityCurrencyValueForNewIsFormattedToXxx_XxForExternalUser(
                    string scenario, 
                    string userType, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The carrier max liability Currency value for New is formatted to xxx" +
                    ".xx for External user", @__tags);
#line 74
this.ScenarioSetup(scenarioInfo);
#line 75
 testRunner.Given("I Am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 76
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.Then("I verify the carrier max liability Currency value for New is formatted to xxx.xx", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The carrier max liability Currency value for New is formatted to xxx" +
            ".xx for External user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheCarrierMaxLiabilityCurrencyValueForNewIsFormattedToXxx_XxForExternalUser_S1()
        {
#line 74
this._39669_Verify_TheCarrierMaxLiabilityCurrencyValueForNewIsFormattedToXxx_XxForExternalUser("s1", "shipentry", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheCarrierMaxLiabilityCurrencyValueForUsedIsFormattedToXxx_XxForExternalUser(
                    string scenario, 
                    string userType, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The carrier max liability Currency value for Used is formatted to xx" +
                    "x.xx for External user", @__tags);
#line 91
this.ScenarioSetup(scenarioInfo);
#line 92
 testRunner.Given("I Am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 98
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.Then("I verify the carrier max liability Currency value for Used is formatted to xxx.xx" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The carrier max liability Currency value for Used is formatted to xx" +
            "x.xx for External user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheCarrierMaxLiabilityCurrencyValueForUsedIsFormattedToXxx_XxForExternalUser_S1()
        {
#line 91
this._39669_Verify_TheCarrierMaxLiabilityCurrencyValueForUsedIsFormattedToXxx_XxForExternalUser("s1", "shipentry", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheTextColorOfTheCarrierLiabilityInformationIsInDarkGrayForExternalUser(
                    string scenario, 
                    string userType, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The text color of the carrier liability information is in dark gray " +
                    "for External user", @__tags);
#line 108
this.ScenarioSetup(scenarioInfo);
#line 109
 testRunner.Given("I Am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 110
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 115
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
 testRunner.Then("I verify the text color of the carrier liability information is in dark gray", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The text color of the carrier liability information is in dark gray " +
            "for External user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "both")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheTextColorOfTheCarrierLiabilityInformationIsInDarkGrayForExternalUser_S1()
        {
#line 108
this._39669_Verify_TheTextColorOfTheCarrierLiabilityInformationIsInDarkGrayForExternalUser("s1", "both", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheServiceDaysIsDisplayedWithDaysToTheRightOfTheNumberOfServiceDaysForExternalUser(
                    string scenario, 
                    string userType, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The service days is displayed with \"days\" to the right of the number" +
                    " of service days for External user", @__tags);
#line 125
this.ScenarioSetup(scenarioInfo);
#line 126
 testRunner.Given("I Am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 127
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 132
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
 testRunner.Then("I verify the service days is displayed with days to the right of the number of se" +
                    "rvice days", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The service days is displayed with \"days\" to the right of the number" +
            " of service days for External user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheServiceDaysIsDisplayedWithDaysToTheRightOfTheNumberOfServiceDaysForExternalUser_S1()
        {
#line 125
this._39669_Verify_TheServiceDaysIsDisplayedWithDaysToTheRightOfTheNumberOfServiceDaysForExternalUser("s1", "shipentry", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheVerbiageDirectToDestinationIsDisplayedAsDirectAndIndirectToDestinationIsDisplayedAsIndirectForExternalUser(
                    string scenario, 
                    string userType, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The verbiage \"Direct to Destination\" is displayed as \"Direct\" and \"I" +
                    "ndirect to Destination\" is displayed as \"Indirect\" for External user", @__tags);
#line 142
this.ScenarioSetup(scenarioInfo);
#line 143
 testRunner.Given("I Am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 144
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 148
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 149
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.Then("I verify the verbiage Direct to Destination is displayed as Direct and Indirect t" +
                    "o Destination is displayed as Indirect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The verbiage \"Direct to Destination\" is displayed as \"Direct\" and \"I" +
            "ndirect to Destination\" is displayed as \"Indirect\" for External user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheVerbiageDirectToDestinationIsDisplayedAsDirectAndIndirectToDestinationIsDisplayedAsIndirectForExternalUser_S1()
        {
#line 142
this._39669_Verify_TheVerbiageDirectToDestinationIsDisplayedAsDirectAndIndirectToDestinationIsDisplayedAsIndirectForExternalUser("s1", "shipentry", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheInsuredRateTotalIsDisplayedInBoldType(
                    string scenario, 
                    string userType, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The Insured Rate total is displayed in bold type", @__tags);
#line 159
this.ScenarioSetup(scenarioInfo);
#line 160
 testRunner.Given("I Am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 161
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 165
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 166
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 168
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.Then("I verify Insured Rate total is displayed in bold type for external user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The Insured Rate total is displayed in bold type: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheInsuredRateTotalIsDisplayedInBoldType_S1()
        {
#line 159
this._39669_Verify_TheInsuredRateTotalIsDisplayedInBoldType("s1", "shipentry", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheTermsAndConditionsLinkAndVerbiageCreatingAnInsuredShipmentMeansYouAgreeToTheTermsAndConditions_IsAvailableAtTheBottomOfThePage(
                    string scenario, 
                    string userType, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The Terms and Conditions link and verbiage \"*Creating an insured shi" +
                    "pment means you agree to the Terms and Conditions.\" is available at the bottom o" +
                    "f the page", @__tags);
#line 176
this.ScenarioSetup(scenarioInfo);
#line 177
 testRunner.Given("I Am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 178
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 182
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 183
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 186
 testRunner.Then("I verify the Terms and Conditions link and verbiage Creating an insured shipment " +
                    "means you agree to the Terms and Conditions. is available at the bottom of the p" +
                    "age", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The Terms and Conditions link and verbiage \"*Creating an insured shi" +
            "pment means you agree to the Terms and Conditions.\" is available at the bottom o" +
            "f the page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheTermsAndConditionsLinkAndVerbiageCreatingAnInsuredShipmentMeansYouAgreeToTheTermsAndConditions_IsAvailableAtTheBottomOfThePage_S1()
        {
#line 176
this._39669_Verify_TheTermsAndConditionsLinkAndVerbiageCreatingAnInsuredShipmentMeansYouAgreeToTheTermsAndConditions_IsAvailableAtTheBottomOfThePage("s1", "shipentry", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheTermsAndConditionsApplicableToDefaultInsuranceAllRiskSettingsIsDisplayedForExternalUser(
                    string scenario, 
                    string userType, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The Terms and Conditions applicable to Default insurance all risk se" +
                    "ttings is displayed for External user", @__tags);
#line 194
this.ScenarioSetup(scenarioInfo);
#line 195
 testRunner.Given("I Am a shp.entry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 196
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 200
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 201
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 204
 testRunner.And("I click on TermsAndConditions link at the bottom of the Quote results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
 testRunner.Then("I verify the Terms and Conditions applicable for default or customer specific ins" +
                    "urance all risk settings is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The Terms and Conditions applicable to Default insurance all risk se" +
            "ttings is displayed for External user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "both")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheTermsAndConditionsApplicableToDefaultInsuranceAllRiskSettingsIsDisplayedForExternalUser_S1()
        {
#line 194
this._39669_Verify_TheTermsAndConditionsApplicableToDefaultInsuranceAllRiskSettingsIsDisplayedForExternalUser("s1", "both", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_CarrierLegalLiabilityVerbiageIsChangedToCarriersLegalLiabilityPerLbIfUninsuredForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_Carrier legal liability verbiage is changed to Carrier\'s legal liabi" +
                    "lity per lb if uninsured for Internal user", @__tags);
#line 213
this.ScenarioSetup(scenarioInfo);
#line 214
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 215
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 220
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
 testRunner.Then("I verify the carrier legal liability verbiage is Carrier\'s legal liability per lb" +
                    " if uninsured", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_Carrier legal liability verbiage is changed to Carrier\'s legal liabi" +
            "lity per lb if uninsured for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_CarrierLegalLiabilityVerbiageIsChangedToCarriersLegalLiabilityPerLbIfUninsuredForInternalUser_S1()
        {
#line 213
this._39669_Verify_CarrierLegalLiabilityVerbiageIsChangedToCarriersLegalLiabilityPerLbIfUninsuredForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheCarrierMaxLiabilityVerbiageIsChangedToCarriersMaxLiabilityIfUninsuredForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The carrier max liability verbiage is changed to Carrier\'s max liabi" +
                    "lity if uninsured for Internal user", @__tags);
#line 231
this.ScenarioSetup(scenarioInfo);
#line 232
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 233
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 234
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 236
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 237
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 238
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 240
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
 testRunner.Then("I verify the carrier max liability verbiage is Carrier\'s max liability if uninsur" +
                    "ed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The carrier max liability verbiage is changed to Carrier\'s max liabi" +
            "lity if uninsured for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheCarrierMaxLiabilityVerbiageIsChangedToCarriersMaxLiabilityIfUninsuredForInternalUser_S1()
        {
#line 231
this._39669_Verify_TheCarrierMaxLiabilityVerbiageIsChangedToCarriersMaxLiabilityIfUninsuredForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheCarrierLegalLiabilityCurrencyValueForNewIsFormattedToXxx_XxForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The carrier legal liability Currency value for New is formatted to x" +
                    "xx.xx for Internal user", @__tags);
#line 248
this.ScenarioSetup(scenarioInfo);
#line 249
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 250
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 251
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 252
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 253
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 254
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 255
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 256
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 257
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
 testRunner.Then("I verify the carrier legal liability Currency value for New is formatted to xxx.x" +
                    "x", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The carrier legal liability Currency value for New is formatted to x" +
            "xx.xx for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheCarrierLegalLiabilityCurrencyValueForNewIsFormattedToXxx_XxForInternalUser_S1()
        {
#line 248
this._39669_Verify_TheCarrierLegalLiabilityCurrencyValueForNewIsFormattedToXxx_XxForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheCarrierLegalLiabilityCurrencyValueForUsedIsFormattedToXxx_XxForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The carrier legal liability Currency value for Used is formatted to " +
                    "xxx.xx for Internal user", @__tags);
#line 265
this.ScenarioSetup(scenarioInfo);
#line 266
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 267
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 269
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 271
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 272
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 273
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 275
 testRunner.Then("I verify the carrier legal liability Currency value for Used is formatted to xxx." +
                    "xx", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The carrier legal liability Currency value for Used is formatted to " +
            "xxx.xx for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheCarrierLegalLiabilityCurrencyValueForUsedIsFormattedToXxx_XxForInternalUser_S1()
        {
#line 265
this._39669_Verify_TheCarrierLegalLiabilityCurrencyValueForUsedIsFormattedToXxx_XxForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheCarrierMaxLiabilityCurrencyValueForNewIsFormattedToXxx_XxForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The carrier max liability Currency value for New is formatted to xxx" +
                    ".xx for Internal user", @__tags);
#line 282
this.ScenarioSetup(scenarioInfo);
#line 283
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 284
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 286
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 287
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 289
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 290
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 291
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
 testRunner.Then("I verify the carrier max liability Currency value for New is formatted to xxx.xx", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The carrier max liability Currency value for New is formatted to xxx" +
            ".xx for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheCarrierMaxLiabilityCurrencyValueForNewIsFormattedToXxx_XxForInternalUser_S1()
        {
#line 282
this._39669_Verify_TheCarrierMaxLiabilityCurrencyValueForNewIsFormattedToXxx_XxForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheCarrierMaxLiabilityCurrencyValueForUsedIsFormattedToXxx_XxForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The carrier max liability Currency value for Used is formatted to xx" +
                    "x.xx for Internal user", @__tags);
#line 299
this.ScenarioSetup(scenarioInfo);
#line 300
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 301
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 304
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 305
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 306
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 307
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 308
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 309
 testRunner.Then("I verify the carrier max liability Currency value for Used is formatted to xxx.xx" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The carrier max liability Currency value for Used is formatted to xx" +
            "x.xx for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheCarrierMaxLiabilityCurrencyValueForUsedIsFormattedToXxx_XxForInternalUser_S1()
        {
#line 299
this._39669_Verify_TheCarrierMaxLiabilityCurrencyValueForUsedIsFormattedToXxx_XxForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheTextColorOfTheCarrierLiabilityInformationIsInDarkGrayForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The text color of the carrier liability information is in dark gray " +
                    "for Internal user", @__tags);
#line 316
this.ScenarioSetup(scenarioInfo);
#line 317
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 318
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 319
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 320
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 321
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 322
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 323
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 324
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 325
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 326
 testRunner.Then("I Verify the text color of the carrier liability information is in dark gray", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The text color of the carrier liability information is in dark gray " +
            "for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheTextColorOfTheCarrierLiabilityInformationIsInDarkGrayForInternalUser_S1()
        {
#line 316
this._39669_Verify_TheTextColorOfTheCarrierLiabilityInformationIsInDarkGrayForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheServiceDaysIsDisplayedWithDaysToTheRightOfTheNumberOfServiceDaysForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The service days is displayed with \"days\" to the right of the number" +
                    " of service days for Internal user", @__tags);
#line 333
this.ScenarioSetup(scenarioInfo);
#line 334
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 335
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 336
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 337
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 338
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 339
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 340
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 341
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 342
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 343
 testRunner.Then("I verify the service days is displayed with days to the right of the number of se" +
                    "rvice days", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The service days is displayed with \"days\" to the right of the number" +
            " of service days for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheServiceDaysIsDisplayedWithDaysToTheRightOfTheNumberOfServiceDaysForInternalUser_S1()
        {
#line 333
this._39669_Verify_TheServiceDaysIsDisplayedWithDaysToTheRightOfTheNumberOfServiceDaysForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheVerbiageDirectToDestinationIsDisplayedAsDirectAndIndirectToDestinationIsDisplayedAsIndirectForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The verbiage \"Direct to Destination\" is displayed as \"Direct\" and \"I" +
                    "ndirect to Destination\" is displayed as \"Indirect\" for Internal user", @__tags);
#line 350
this.ScenarioSetup(scenarioInfo);
#line 351
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 352
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 356
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 357
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 358
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 359
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 360
 testRunner.Then("I verify the verbiage Direct to Destination is displayed as Direct and Indirect t" +
                    "o Destination is displayed as Indirect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The verbiage \"Direct to Destination\" is displayed as \"Direct\" and \"I" +
            "ndirect to Destination\" is displayed as \"Indirect\" for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheVerbiageDirectToDestinationIsDisplayedAsDirectAndIndirectToDestinationIsDisplayedAsIndirectForInternalUser_S1()
        {
#line 350
this._39669_Verify_TheVerbiageDirectToDestinationIsDisplayedAsDirectAndIndirectToDestinationIsDisplayedAsIndirectForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheEstimatedMarginTotalIsDisplayedInBoldTypeForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The Estimated Margin total is displayed in bold type for Internal us" +
                    "er", @__tags);
#line 367
this.ScenarioSetup(scenarioInfo);
#line 368
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 369
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 370
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 371
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 372
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 373
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 374
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 375
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 376
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 377
 testRunner.Then("I verify the Estimated Margin total is formatted to xxx.xx", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The Estimated Margin total is displayed in bold type for Internal us" +
            "er: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheEstimatedMarginTotalIsDisplayedInBoldTypeForInternalUser_S1()
        {
#line 367
this._39669_Verify_TheEstimatedMarginTotalIsDisplayedInBoldTypeForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheEstimatedRateTotalIsFormattedToXxx_XxAndDisplayedInBoldTypeForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The Estimated Rate total is formatted to xxx.xx and displayed in bol" +
                    "d type for Internal user", @__tags);
#line 384
this.ScenarioSetup(scenarioInfo);
#line 385
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 386
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 387
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 388
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 389
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 391
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 393
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 394
 testRunner.Then("I verify the Estimated Rate total is formatted to xxx.xx and displayed in bold ty" +
                    "pe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The Estimated Rate total is formatted to xxx.xx and displayed in bol" +
            "d type for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheEstimatedRateTotalIsFormattedToXxx_XxAndDisplayedInBoldTypeForInternalUser_S1()
        {
#line 384
this._39669_Verify_TheEstimatedRateTotalIsFormattedToXxx_XxAndDisplayedInBoldTypeForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheRateTotalIsDisplayedInBoldTypeForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The Rate total is displayed in bold type for Internal user", @__tags);
#line 402
this.ScenarioSetup(scenarioInfo);
#line 403
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 404
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 405
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 406
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 407
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 408
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 409
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 410
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 411
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 412
 testRunner.Then("I verify the Rate total is displayed in bold type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The Rate total is displayed in bold type for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheRateTotalIsDisplayedInBoldTypeForInternalUser_S1()
        {
#line 402
this._39669_Verify_TheRateTotalIsDisplayedInBoldTypeForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheInsuredRateTotalIsDisplayedInBoldTypeForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The Insured Rate total is displayed in bold type for Internal user", @__tags);
#line 419
this.ScenarioSetup(scenarioInfo);
#line 420
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 421
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 422
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 423
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 424
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 425
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 426
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 427
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 428
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 429
 testRunner.Then("I verify Insured Rate total is displayed in bold type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The Insured Rate total is displayed in bold type for Internal user: " +
            "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheInsuredRateTotalIsDisplayedInBoldTypeForInternalUser_S1()
        {
#line 419
this._39669_Verify_TheInsuredRateTotalIsDisplayedInBoldTypeForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheTermsAndConditionsLinkAndVerbiageCreatingAnInsuredShipmentMeansYouAgreeToTheTermsAndConditions_IsAvailableAtTheBottomOfThePageForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The Terms and Conditions link and verbiage \"*Creating an insured shi" +
                    "pment means you agree to the Terms and Conditions.\" is available at the bottom o" +
                    "f the page for Internal user", @__tags);
#line 436
this.ScenarioSetup(scenarioInfo);
#line 437
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 438
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 439
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 440
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 441
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 442
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 443
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 444
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 445
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 446
 testRunner.Then("I verify the Terms and Conditions link and verbiage Creating an insured shipment " +
                    "means you agree to the Terms and Conditions. is available at the bottom of the p" +
                    "age", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The Terms and Conditions link and verbiage \"*Creating an insured shi" +
            "pment means you agree to the Terms and Conditions.\" is available at the bottom o" +
            "f the page for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheTermsAndConditionsLinkAndVerbiageCreatingAnInsuredShipmentMeansYouAgreeToTheTermsAndConditions_IsAvailableAtTheBottomOfThePageForInternalUser_S1()
        {
#line 436
this._39669_Verify_TheTermsAndConditionsLinkAndVerbiageCreatingAnInsuredShipmentMeansYouAgreeToTheTermsAndConditions_IsAvailableAtTheBottomOfThePageForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        public virtual void _39669_Verify_TheTermsAndConditionsApplicableToDefaultInsuranceAllRiskSettingsIsDisplayedForInternalUser(
                    string scenario, 
                    string userType, 
                    string customerName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string originCountry, 
                    string destinationCountry, 
                    string quantity, 
                    string quantityUNIT, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The Terms and Conditions applicable to Default insurance all risk se" +
                    "ttings is displayed for Internal user", @__tags);
#line 453
this.ScenarioSetup(scenarioInfo);
#line 454
 testRunner.Given(string.Format("I am a sales, sales management, operations, or station owner user {0}", userType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 455
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 456
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 457
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 458
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 459
 testRunner.When(string.Format("I enter data in Origin section {0}, {1} and {2}, {3}", originZip, originCity, originState, originCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 460
 testRunner.And(string.Format("I enter data in Destination section {0}, {1} and {2},{3}", destinationZip, destinationCity, destinationState, destinationCountry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 461
 testRunner.And(string.Format("I enter data in Item information section {0}, {1}, {2}, {3}, {4}", classification, weight, weightUnit, quantity, quantityUNIT), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 462
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 463
 testRunner.And("I click on TermsAndConditions link at the bottom of the Quote results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 464
 testRunner.Then("I verify the Terms And Conditions applicable for default or customer specific ins" +
                    "urance all risk settings is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The Terms and Conditions applicable to Default insurance all risk se" +
            "ttings is displayed for Internal user: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserType", "stationowner")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCountry", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityUNIT", "SKD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightUnit", "lbs")]
        public virtual void _39669_Verify_TheTermsAndConditionsApplicableToDefaultInsuranceAllRiskSettingsIsDisplayedForInternalUser_S1()
        {
#line 453
this._39669_Verify_TheTermsAndConditionsApplicableToDefaultInsuranceAllRiskSettingsIsDisplayedForInternalUser("s1", "stationowner", "ZZZ - GS Customer Test", "90001", "LOS ANGELS", "CA", "90001", "CA", "LOS ANGELS", "60", "23", "USA", "USA", "1", "SKD", "lbs", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90801_Verify_The Terms and Conditions link in Get Quote LTL page applicable to PP" +
            "P insurance all risk settings is displayed for external user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90801")]
        public virtual void _90801_Verify_TheTermsAndConditionsLinkInGetQuoteLTLPageApplicableToPPPInsuranceAllRiskSettingsIsDisplayedForExternalUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90801_Verify_The Terms and Conditions link in Get Quote LTL page applicable to PP" +
                    "P insurance all risk settings is displayed for external user", new string[] {
                        "90801"});
#line 476
this.ScenarioSetup(scenarioInfo);
#line 477
 testRunner.Given("I am a shp.entry or shp.inquiry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 478
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 479
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 480
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 481
 testRunner.And("I entered a value in the Enter insured value field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 482
 testRunner.And("the Terms and Conditions link was displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 483
 testRunner.When("I click the Terms and Conditions link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 484
 testRunner.Then("I verify the Terms and Conditions applicable to PPP insurance all risk settings i" +
                    "s displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void _90801_Verify_TheTermsAndConditionsLinkInGetQuoteLTLPageApplicableToPPPInsuranceAllRiskSettingsIsDisplayedForInternalUser(string customerName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "90801"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90801_Verify_The Terms and Conditions link in Get Quote LTL page applicable to PP" +
                    "P insurance all risk settings is displayed for internal user", @__tags);
#line 487
this.ScenarioSetup(scenarioInfo);
#line 488
 testRunner.Given("I am a operations, station owner or sales Management user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 489
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 490
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 491
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 492
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 493
 testRunner.And("I entered a value in the Enter insured value field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 494
 testRunner.And("the Terms and Conditions link was displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 495
 testRunner.When("I click the Terms and Conditions link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 496
 testRunner.Then("I verify the Terms and Conditions applicable to PPP insurance all risk settings i" +
                    "s displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90801_Verify_The Terms and Conditions link in Get Quote LTL page applicable to PP" +
            "P insurance all risk settings is displayed for internal user: ZZZ - GS Customer " +
            "Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90801")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        public virtual void _90801_Verify_TheTermsAndConditionsLinkInGetQuoteLTLPageApplicableToPPPInsuranceAllRiskSettingsIsDisplayedForInternalUser_ZZZ_GSCustomerTest()
        {
#line 487
this._90801_Verify_TheTermsAndConditionsLinkInGetQuoteLTLPageApplicableToPPPInsuranceAllRiskSettingsIsDisplayedForInternalUser("ZZZ - GS Customer Test", ((string[])(null)));
#line hidden
        }
        
        public virtual void _90801_Verify_TheTermsAndConditionsLinkInGetQuoteLTLPageApplicableToPPPInsuranceAllRiskSettingsIsDisplayedForSalesUser(string customerName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "90801"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90801_Verify_The Terms and Conditions link in Get Quote LTL page applicable to PP" +
                    "P insurance all risk settings is displayed for Sales user", @__tags);
#line 503
this.ScenarioSetup(scenarioInfo);
#line 504
 testRunner.Given("I am Sales user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 505
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 506
 testRunner.And(string.Format("I Have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 507
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 508
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 509
 testRunner.And("I entered a value in the Enter insured value field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 510
 testRunner.And("the Terms and Conditions link was displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 511
 testRunner.When("I click the Terms and Conditions link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 512
 testRunner.Then("I verify the Terms and Conditions applicable to PPP insurance all risk settings i" +
                    "s displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90801_Verify_The Terms and Conditions link in Get Quote LTL page applicable to PP" +
            "P insurance all risk settings is displayed for Sales user: ZZZ - GS Customer Tes" +
            "t")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90801")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        public virtual void _90801_Verify_TheTermsAndConditionsLinkInGetQuoteLTLPageApplicableToPPPInsuranceAllRiskSettingsIsDisplayedForSalesUser_ZZZ_GSCustomerTest()
        {
#line 503
this._90801_Verify_TheTermsAndConditionsLinkInGetQuoteLTLPageApplicableToPPPInsuranceAllRiskSettingsIsDisplayedForSalesUser("ZZZ - GS Customer Test", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90801_Verify_The Terms and Conditions link next to Show Insured Rate button when " +
            "Insured value is entered in Get Quote LTL page for PPP insurance all risk settin" +
            "gs_external user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90801")]
        public virtual void _90801_Verify_TheTermsAndConditionsLinkNextToShowInsuredRateButtonWhenInsuredValueIsEnteredInGetQuoteLTLPageForPPPInsuranceAllRiskSettings_ExternalUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90801_Verify_The Terms and Conditions link next to Show Insured Rate button when " +
                    "Insured value is entered in Get Quote LTL page for PPP insurance all risk settin" +
                    "gs_external user", new string[] {
                        "90801"});
#line 521
this.ScenarioSetup(scenarioInfo);
#line 522
 testRunner.Given("I am a shp.entry or shp.inquiry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 523
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 524
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 525
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 526
 testRunner.And("I enter required data in the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 527
 testRunner.And("I entered a value in the Enter insured value field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 528
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 529
 testRunner.When("I click Terms and Conditions link next to Show Insured Rate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 530
 testRunner.Then("I verify the Terms and Conditions applicable to PPP insurance all risk settings d" +
                    "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void _90801_Verify_TheTermsAndConditionsLinkNextToShowInsuredRateButtonWhenInsuredValueIsEnteredInGetQuoteLTLPageForPPPInsuranceAllRiskSettings_InternalUser(string customerName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "90801"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90801_Verify_The Terms and Conditions link next to Show Insured Rate button when " +
                    "Insured value is entered in Get Quote LTL page for PPP insurance all risk settin" +
                    "gs_internal user", @__tags);
#line 533
this.ScenarioSetup(scenarioInfo);
#line 534
 testRunner.Given("I am a operations, station owner or sales Management user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 535
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 536
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 537
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 538
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 539
 testRunner.And("I enter required data in the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 540
 testRunner.And("I entered a value in the Enter insured value field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 541
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 542
 testRunner.When("I click Terms and Conditions link next to Show Insured Rate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 543
 testRunner.Then("I verify the Terms and Conditions applicable to PPP insurance all risk settings d" +
                    "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90801_Verify_The Terms and Conditions link next to Show Insured Rate button when " +
            "Insured value is entered in Get Quote LTL page for PPP insurance all risk settin" +
            "gs_internal user: ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90801")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        public virtual void _90801_Verify_TheTermsAndConditionsLinkNextToShowInsuredRateButtonWhenInsuredValueIsEnteredInGetQuoteLTLPageForPPPInsuranceAllRiskSettings_InternalUser_ZZZ_GSCustomerTest()
        {
#line 533
this._90801_Verify_TheTermsAndConditionsLinkNextToShowInsuredRateButtonWhenInsuredValueIsEnteredInGetQuoteLTLPageForPPPInsuranceAllRiskSettings_InternalUser("ZZZ - GS Customer Test", ((string[])(null)));
#line hidden
        }
        
        public virtual void _90801_Verify_TheTermsAndConditionsLinkNextToShowInsuredRateButtonWhenInsuredValueIsEnteredInGetQuoteLTLPageForPPPInsuranceAllRiskSettings_SalesUser(string customerName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "90801"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90801_Verify_The Terms and Conditions link next to Show Insured Rate button when " +
                    "Insured value is entered in Get Quote LTL page for PPP insurance all risk settin" +
                    "gs_sales user", @__tags);
#line 550
this.ScenarioSetup(scenarioInfo);
#line 551
 testRunner.Given("I am Sales user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 552
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 553
 testRunner.And(string.Format("I Have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 554
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 555
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 556
 testRunner.And("I enter required data in the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 557
 testRunner.And("I entered a value in the Enter insured value field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 558
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 559
 testRunner.When("I click Terms and Conditions link next to Show Insured Rate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 560
 testRunner.Then("I verify the Terms and Conditions applicable to PPP insurance all risk settings d" +
                    "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90801_Verify_The Terms and Conditions link next to Show Insured Rate button when " +
            "Insured value is entered in Get Quote LTL page for PPP insurance all risk settin" +
            "gs_sales user: ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90801")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        public virtual void _90801_Verify_TheTermsAndConditionsLinkNextToShowInsuredRateButtonWhenInsuredValueIsEnteredInGetQuoteLTLPageForPPPInsuranceAllRiskSettings_SalesUser_ZZZ_GSCustomerTest()
        {
#line 550
this._90801_Verify_TheTermsAndConditionsLinkNextToShowInsuredRateButtonWhenInsuredValueIsEnteredInGetQuoteLTLPageForPPPInsuranceAllRiskSettings_SalesUser("ZZZ - GS Customer Test", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90801_Verify_The Terms and Conditions link next to Show Insured Rate button when " +
            "Insured Value is entered in Quote Results LTL page for PPP insurance all risk se" +
            "ttings_external user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90801")]
        public virtual void _90801_Verify_TheTermsAndConditionsLinkNextToShowInsuredRateButtonWhenInsuredValueIsEnteredInQuoteResultsLTLPageForPPPInsuranceAllRiskSettings_ExternalUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90801_Verify_The Terms and Conditions link next to Show Insured Rate button when " +
                    "Insured Value is entered in Quote Results LTL page for PPP insurance all risk se" +
                    "ttings_external user", new string[] {
                        "90801"});
#line 569
this.ScenarioSetup(scenarioInfo);
#line 570
 testRunner.Given("I am a shp.entry or shp.inquiry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 571
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 572
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 573
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 574
 testRunner.And("I enter required data in the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 575
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 576
 testRunner.And("I entered a value in the Enter insured value field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 577
 testRunner.When("I click Terms and Conditions link next to Show Insured Rate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 578
 testRunner.Then("I verify the Terms and Conditions applicable to PPP insurance all risk settings d" +
                    "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void _90801_Verify_TheTermsAndConditionsLinkNextToShowInsuredRateButtonWhenInsuredValueIsEnteredInQuoteResultsLTLPageForPPPInsuranceAllRiskSettings_InternalUser(string customerName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "90801"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90801_Verify_The Terms and Conditions link next to Show Insured Rate button when " +
                    "Insured Value is entered in Quote Results LTL page for PPP insurance all risk se" +
                    "ttings_internal user", @__tags);
#line 581
this.ScenarioSetup(scenarioInfo);
#line 582
 testRunner.Given("I am a operations, station owner or sales Management user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 583
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 584
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 585
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 586
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 587
 testRunner.And("I enter required data in the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 588
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 589
 testRunner.And("I entered a value in the Enter insured value field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 590
 testRunner.When("I click Terms and Conditions link next to Show Insured Rate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 591
 testRunner.Then("I verify the Terms and Conditions applicable to PPP insurance all risk settings d" +
                    "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90801_Verify_The Terms and Conditions link next to Show Insured Rate button when " +
            "Insured Value is entered in Quote Results LTL page for PPP insurance all risk se" +
            "ttings_internal user: ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90801")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        public virtual void _90801_Verify_TheTermsAndConditionsLinkNextToShowInsuredRateButtonWhenInsuredValueIsEnteredInQuoteResultsLTLPageForPPPInsuranceAllRiskSettings_InternalUser_ZZZ_GSCustomerTest()
        {
#line 581
this._90801_Verify_TheTermsAndConditionsLinkNextToShowInsuredRateButtonWhenInsuredValueIsEnteredInQuoteResultsLTLPageForPPPInsuranceAllRiskSettings_InternalUser("ZZZ - GS Customer Test", ((string[])(null)));
#line hidden
        }
        
        public virtual void _90801_Verify_TheTermsAndConditionsLinkNextToShowInsuredRateButtonWhenInsuredValueIsEnteredInQuoteResultsLTLPageForPPPInsuranceAllRiskSettings_SalesUser(string customerName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "90801"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90801_Verify_The Terms and Conditions link next to Show Insured Rate button when " +
                    "Insured Value is entered in Quote Results LTL page for PPP insurance all risk se" +
                    "ttings_Sales user", @__tags);
#line 598
this.ScenarioSetup(scenarioInfo);
#line 599
 testRunner.Given("I am Sales user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 600
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 601
 testRunner.And(string.Format("I Have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 602
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 603
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 604
 testRunner.And("I enter required data in the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 605
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 606
 testRunner.And("I entered a value in the Enter insured value field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 607
 testRunner.When("I click Terms and Conditions link next to Show Insured Rate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 608
 testRunner.Then("I verify the Terms and Conditions applicable to PPP insurance all risk settings d" +
                    "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90801_Verify_The Terms and Conditions link next to Show Insured Rate button when " +
            "Insured Value is entered in Quote Results LTL page for PPP insurance all risk se" +
            "ttings_Sales user: ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90801")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        public virtual void _90801_Verify_TheTermsAndConditionsLinkNextToShowInsuredRateButtonWhenInsuredValueIsEnteredInQuoteResultsLTLPageForPPPInsuranceAllRiskSettings_SalesUser_ZZZ_GSCustomerTest()
        {
#line 598
this._90801_Verify_TheTermsAndConditionsLinkNextToShowInsuredRateButtonWhenInsuredValueIsEnteredInQuoteResultsLTLPageForPPPInsuranceAllRiskSettings_SalesUser("ZZZ - GS Customer Test", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The Terms and Conditions applicable to PPP insurance all risk settin" +
            "gs_External user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90801")]
        public virtual void _39669_Verify_TheTermsAndConditionsApplicableToPPPInsuranceAllRiskSettings_ExternalUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The Terms and Conditions applicable to PPP insurance all risk settin" +
                    "gs_External user", new string[] {
                        "90801"});
#line 617
this.ScenarioSetup(scenarioInfo);
#line 618
 testRunner.Given("I am a shp.entry or shp.inquiry User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 619
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 620
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 621
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 622
 testRunner.And("I enter required data in the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 623
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 624
 testRunner.When("I click on TermsAndConditions link at the bottom of the Quote results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 625
 testRunner.Then("I verify the Terms and Conditions applicable to PPP insurance all risk settings d" +
                    "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void _39669_Verify_TheTermsAndConditionsApplicableToPPPInsuranceAllRiskSettings_InternalUser(string customerName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "90801"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39669_Verify_The Terms and Conditions applicable to PPP insurance all risk settin" +
                    "gs_Internal user", @__tags);
#line 628
this.ScenarioSetup(scenarioInfo);
#line 629
 testRunner.Given("I am a operations, station owner or sales Management user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 630
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 631
 testRunner.And(string.Format("I have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 632
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 633
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 634
 testRunner.And("I enter required data in the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 635
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 636
 testRunner.When("I click on TermsAndConditions link at the bottom of the Quote results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 637
 testRunner.Then("I verify the Terms and Conditions applicable to PPP insurance all risk settings d" +
                    "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("39669_Verify_The Terms and Conditions applicable to PPP insurance all risk settin" +
            "gs_Internal user: ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90801")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        public virtual void _39669_Verify_TheTermsAndConditionsApplicableToPPPInsuranceAllRiskSettings_InternalUser_ZZZ_GSCustomerTest()
        {
#line 628
this._39669_Verify_TheTermsAndConditionsApplicableToPPPInsuranceAllRiskSettings_InternalUser("ZZZ - GS Customer Test", ((string[])(null)));
#line hidden
        }
        
        public virtual void _90801_Verify_TheTermsAndConditionsApplicableToPPPInsuranceAllRiskSettings_SalesUser(string customerName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "90801"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("90801_Verify_The Terms and Conditions applicable to PPP insurance all risk settin" +
                    "gs_Sales user", @__tags);
#line 644
this.ScenarioSetup(scenarioInfo);
#line 645
 testRunner.Given("I am Sales user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 646
 testRunner.And("I click on the Quote Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 647
 testRunner.And(string.Format("I Have selected the {0} from customer dropdown list", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 648
 testRunner.And("I have clicked on Submit Rate Request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 649
 testRunner.And("I click on Ltl Quote service Tile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 650
 testRunner.And("I enter required data in the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 651
 testRunner.And("I Click on View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 652
 testRunner.When("I click on TermsAndConditions link at the bottom of the Quote results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 653
 testRunner.Then("I verify the Terms and Conditions applicable to PPP insurance all risk settings d" +
                    "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("90801_Verify_The Terms and Conditions applicable to PPP insurance all risk settin" +
            "gs_Sales user: ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuotesResultsLTLPage_ImproveResultsDisplay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("39669")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("90801")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ZZZ - GS Customer Test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "ZZZ - GS Customer Test")]
        public virtual void _90801_Verify_TheTermsAndConditionsApplicableToPPPInsuranceAllRiskSettings_SalesUser_ZZZ_GSCustomerTest()
        {
#line 644
this._90801_Verify_TheTermsAndConditionsApplicableToPPPInsuranceAllRiskSettings_SalesUser("ZZZ - GS Customer Test", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
