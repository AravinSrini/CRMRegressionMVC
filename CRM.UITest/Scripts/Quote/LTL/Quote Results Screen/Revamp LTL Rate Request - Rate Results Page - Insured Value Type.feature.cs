// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Quote.LTL.QuoteResultsScreen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class RevampLTLRateRequest_RateResultsPage_InsuredValueTypeFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Revamp LTL Rate Request - Rate Results Page - Insured Value Type.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Revamp LTL Rate Request - Rate Results Page - Insured Value Type", null, ProgrammingLanguage.CSharp, new string[] {
                        "23036",
                        "LTLQuoteresultspage",
                        "Sprint65"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Revamp LTL Rate Request - Rate Results Page - Insured Value Type")))
            {
                global::CRM.UITest.Scripts.Quote.LTL.QuoteResultsScreen.RevampLTLRateRequest_RateResultsPage_InsuredValueTypeFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserSelectsNewInGetQuote_Nonguaranteed(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifcation of insured rate type on rate results sceen when user selects \'new\' in" +
                    " get quote_nonguaranteed", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
   testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
   testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
   testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
   testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
   testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
   testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
   testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
   testRunner.And(string.Format("I Select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
   testRunner.And("I Click On view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
   testRunner.Then("I should be display with the rates for new type only for all carriers on results " +
                    "page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verifcation of insured rate type on rate results sceen when user selects \'new\' in" +
            " get quote_nonguaranteed: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Revamp LTL Rate Request - Rate Results Page - Insured Value Type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("23036")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteresultspage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserSelectsNewInGetQuote_Nonguaranteed_S1()
        {
#line 5
this.VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserSelectsNewInGetQuote_Nonguaranteed("s1", "nat", "Te$t1234", "LTL", "90001", "90001", "50", "150", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserSelectsUsedInGetQuote_Nonguaranteed(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifcation of  insured rate type on rate results sceen when user selects \'Used\' " +
                    "in get quote_nonguaranteed", @__tags);
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
   testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
   testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
   testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
   testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
   testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
   testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
   testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
   testRunner.And(string.Format("I Select Used insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
   testRunner.And("I Click On view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
   testRunner.Then("I should be display with the rates for used type only for all carriers on results" +
                    " page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verifcation of  insured rate type on rate results sceen when user selects \'Used\' " +
            "in get quote_nonguaranteed: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Revamp LTL Rate Request - Rate Results Page - Insured Value Type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("23036")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteresultspage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserSelectsUsedInGetQuote_Nonguaranteed_S1()
        {
#line 22
this.VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserSelectsUsedInGetQuote_Nonguaranteed("s1", "nat", "Te$t1234", "LTL", "90001", "90001", "50", "150", "100", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserNotEntersTheInsuredValue_Nonguaranteed(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifcation of  insured rate type on rate results sceen when user not enters the " +
                    "insured value_nonguaranteed", @__tags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
    testRunner.And("I Click On view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
    testRunner.Then("I should be display with the rates for new and  used types for all carriers on  r" +
                    "esults page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verifcation of  insured rate type on rate results sceen when user not enters the " +
            "insured value_nonguaranteed: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Revamp LTL Rate Request - Rate Results Page - Insured Value Type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("23036")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteresultspage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserNotEntersTheInsuredValue_Nonguaranteed_S1()
        {
#line 40
this.VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserNotEntersTheInsuredValue_Nonguaranteed("s1", "nat", "Te$t1234", "LTL", "90001", "90001", "50", "150", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserSelectsNewInGetQuote_Guaranteed(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifcation of insured rate type on rate results sceen when user selects \'new\' in" +
                    " get quote_guaranteed", @__tags);
#line 55
this.ScenarioSetup(scenarioInfo);
#line 56
   testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
   testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
   testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
   testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
   testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
   testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
   testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
   testRunner.And(string.Format("I Select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
   testRunner.And("I Click On view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
   testRunner.Then("I should be display with the rates for new type only for all carriers on guarante" +
                    "ed grid results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verifcation of insured rate type on rate results sceen when user selects \'new\' in" +
            " get quote_guaranteed: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Revamp LTL Rate Request - Rate Results Page - Insured Value Type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("23036")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteresultspage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserSelectsNewInGetQuote_Guaranteed_S1()
        {
#line 55
this.VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserSelectsNewInGetQuote_Guaranteed("s1", "nat", "Te$t1234", "LTL", "90001", "90001", "50", "150", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserSelectsUsedInGetQuote_Guaranteed(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifcation of  insured rate type on rate results sceen when user selects \'Used\' " +
                    "in get quote_guaranteed", @__tags);
#line 72
this.ScenarioSetup(scenarioInfo);
#line 73
   testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 74
   testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
   testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
   testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
   testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
   testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
   testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
   testRunner.And(string.Format("I Select Used insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
   testRunner.And("I Click On view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
    testRunner.Then("I should be display with the rates for used type only for all carriers on guarant" +
                    "eed grid results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verifcation of  insured rate type on rate results sceen when user selects \'Used\' " +
            "in get quote_guaranteed: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Revamp LTL Rate Request - Rate Results Page - Insured Value Type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("23036")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteresultspage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserSelectsUsedInGetQuote_Guaranteed_S1()
        {
#line 72
this.VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserSelectsUsedInGetQuote_Guaranteed("s1", "nat", "Te$t1234", "LTL", "90001", "90001", "50", "150", "100", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserNotEntersTheInsuredValue_Guaranteed(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifcation of  insured rate type on rate results sceen when user not enters the " +
                    "insured value_guaranteed", @__tags);
#line 90
this.ScenarioSetup(scenarioInfo);
#line 91
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
    testRunner.And("I Click On view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
    testRunner.Then("I should be display with the rates for new and  used types for all carriers on gu" +
                    "aranteed grid results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verifcation of  insured rate type on rate results sceen when user not enters the " +
            "insured value_guaranteed: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Revamp LTL Rate Request - Rate Results Page - Insured Value Type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("23036")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteresultspage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserNotEntersTheInsuredValue_Guaranteed_S1()
        {
#line 90
this.VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserNotEntersTheInsuredValue_Guaranteed("s1", "nat", "Te$t1234", "LTL", "90001", "60606", "50", "150", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserRentersTheInsuredValueOnResultsPage_New(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string enterInsuredValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifcation of  insured rate type on rate results sceen when user renters the ins" +
                    "ured value on results page_new", @__tags);
#line 105
this.ScenarioSetup(scenarioInfo);
#line 106
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 107
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 109
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
 testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
    testRunner.And(string.Format("I Select Used insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
    testRunner.And("I Click On view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
    testRunner.Then("I should be display with the rates for used type only for all carriers on results" +
                    " page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 116
 testRunner.And(string.Format("I Enter valid data in {0} field", enterInsuredValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
    testRunner.And(string.Format("I must be displayed with {0} dropdown", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
    testRunner.And("I click on Show Insured Rate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
 testRunner.And("I should be display with the rates for new type only for all carriers on results " +
                    "page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
 testRunner.And("I should be display with the rates for new type only for all carriers on guarante" +
                    "ed grid results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verifcation of  insured rate type on rate results sceen when user renters the ins" +
            "ured value on results page_new: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Revamp LTL Rate Request - Rate Results Page - Insured Value Type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("23036")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteresultspage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterInsuredValue", "1000")]
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserRentersTheInsuredValueOnResultsPage_New_S1()
        {
#line 105
this.VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserRentersTheInsuredValueOnResultsPage_New("s1", "nat", "Te$t1234", "LTL", "90001", "60606", "50", "150", "100", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "New", "1000", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserRentersTheInsuredValueOnResultsPage_Used(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string enterInsuredValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifcation of  insured rate type on rate results sceen when user renters the ins" +
                    "ured value on results page_used", @__tags);
#line 127
this.ScenarioSetup(scenarioInfo);
#line 128
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 129
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
    testRunner.And(string.Format("I Select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
    testRunner.And("I Click On view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
    testRunner.Then("I should be display with the rates for new type only for all carriers on results " +
                    "page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 138
 testRunner.And(string.Format("I Enter valid data in {0} field", enterInsuredValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
    testRunner.And(string.Format("I must be displayed with {0} dropdown", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
    testRunner.And("I click on Show Insured Rate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
 testRunner.And("I should be display with the rates for used type only for all carriers on results" +
                    " page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
 testRunner.And("I should be display with the rates for used type only for all carriers on guarant" +
                    "eed grid results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verifcation of  insured rate type on rate results sceen when user renters the ins" +
            "ured value on results page_used: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Revamp LTL Rate Request - Rate Results Page - Insured Value Type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("23036")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteresultspage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterInsuredValue", "1000")]
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserRentersTheInsuredValueOnResultsPage_Used_S1()
        {
#line 127
this.VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserRentersTheInsuredValueOnResultsPage_Used("s1", "nat", "Te$t1234", "LTL", "90001", "90001", "50", "150", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "Used", "1000", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserEntersTheInsuredValueOnResultsPageOnly_New(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string enterInsuredValue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifcation of  insured rate type on rate results sceen when user enters the insu" +
                    "red value on results page only_new", @__tags);
#line 148
this.ScenarioSetup(scenarioInfo);
#line 149
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 150
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 152
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
    testRunner.And("I Click On view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
    testRunner.Then(string.Format("I Enter valid data in {0} field", enterInsuredValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 157
     testRunner.And("I click on Show Insured Rate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
    testRunner.And("I should be display with the rates for new type only for all carriers on results " +
                    "page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.And("I should be display with the rates for new type only for all carriers on guarante" +
                    "ed grid results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verifcation of  insured rate type on rate results sceen when user enters the insu" +
            "red value on results page only_new: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Revamp LTL Rate Request - Rate Results Page - Insured Value Type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("23036")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteresultspage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterInsuredValue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserEntersTheInsuredValueOnResultsPageOnly_New_S1()
        {
#line 148
this.VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserEntersTheInsuredValueOnResultsPageOnly_New("s1", "nat", "Te$t1234", "LTL", "90001", "60606", "50", "150", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserEntersTheInsuredValueOnResultsPageOnly_Used(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string enterInsuredValue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifcation of  insured rate type on rate results sceen when user enters the insu" +
                    "red value on results page only_used", @__tags);
#line 166
this.ScenarioSetup(scenarioInfo);
#line 167
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 168
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 170
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
    testRunner.And("I Click On view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
 testRunner.Then(string.Format("I Enter valid data in {0} field", enterInsuredValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 175
 testRunner.And(string.Format("I selected \'{0}\' on Rate Results Page", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
    testRunner.And("I click on Show Insured Rate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
 testRunner.And("I should be display with the rates for used type only for all carriers on results" +
                    " page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
 testRunner.And("I should be display with the rates for used type only for all carriers on guarant" +
                    "eed grid results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verifcation of  insured rate type on rate results sceen when user enters the insu" +
            "red value on results page only_used: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Revamp LTL Rate Request - Rate Results Page - Insured Value Type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("23036")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteresultspage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterInsuredValue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserEntersTheInsuredValueOnResultsPageOnly_Used_S1()
        {
#line 166
this.VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserEntersTheInsuredValueOnResultsPageOnly_Used("s1", "nat", "Te$t1234", "LTL", "90001", "90001", "50", "150", "100", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "Used", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserEntersTheInsuredValueOnCreteshipmentModalpopup_New(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string enterInsuredVal, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifcation of  insured rate type on rate results sceen when user enters the insu" +
                    "red value on creteshipment modalpopup_new", @__tags);
#line 184
this.ScenarioSetup(scenarioInfo);
#line 185
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 186
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 188
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
 testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
    testRunner.And("I Click On view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
 testRunner.When("I click on create shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 193
    testRunner.Then("I Will be displayed with pop up modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 194
    testRunner.And(string.Format("I Enter valid data in {0} field of insured modal pop up", enterInsuredVal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
    testRunner.And(string.Format("I select \'{0}\' on the Create shipment modal", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
    testRunner.And("I click on Show Insured Rates button in the modal pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
    testRunner.And("I should be display with the rates for new type only for all carriers on results " +
                    "page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.And("I should be display with the rates for new type only for all carriers on guarante" +
                    "ed grid results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verifcation of  insured rate type on rate results sceen when user enters the insu" +
            "red value on creteshipment modalpopup_new: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Revamp LTL Rate Request - Rate Results Page - Insured Value Type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("23036")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteresultspage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "popuponresults@cship.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterInsuredVal", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserEntersTheInsuredValueOnCreteshipmentModalpopup_New_S1()
        {
#line 184
this.VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserEntersTheInsuredValueOnCreteshipmentModalpopup_New("s1", "popuponresults@cship.com", "Te$t1234", "LTL", "90001", "90001", "50", "150", "100", "Quote Confirmation", "FREIGHT INFORMATION", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserEntersTheInsuredValueOnCreteshipmentModalpopup_Used(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string enterInsuredVal, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifcation of  insured rate type on rate results sceen when user enters the insu" +
                    "red value on creteshipment modalpopup_used", @__tags);
#line 205
this.ScenarioSetup(scenarioInfo);
#line 206
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 207
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 208
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 209
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
    testRunner.And("I Click On view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
 testRunner.When("I click on create shipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 212
    testRunner.Then("I Will be displayed with pop up modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 213
    testRunner.And(string.Format("I Enter valid data in {0} field of insured modal pop up", enterInsuredVal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
    testRunner.And(string.Format("I select \'{0}\' on the Create shipment modal", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
    testRunner.And("I click on Show Insured Rates button in the modal pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
    testRunner.And("I should be display with the rates for used type only for all carriers on results" +
                    " page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.And("I should be display with the rates for used type only for all carriers on guarant" +
                    "eed grid results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verifcation of  insured rate type on rate results sceen when user enters the insu" +
            "red value on creteshipment modalpopup_used: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Revamp LTL Rate Request - Rate Results Page - Insured Value Type")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("23036")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteresultspage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint65")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "popuponresults@cship.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EnterInsuredVal", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        public virtual void VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserEntersTheInsuredValueOnCreteshipmentModalpopup_Used_S1()
        {
#line 205
this.VerifcationOfInsuredRateTypeOnRateResultsSceenWhenUserEntersTheInsuredValueOnCreteshipmentModalpopup_Used("s1", "popuponresults@cship.com", "Te$t1234", "LTL", "90001", "90001", "50", "150", "100", "Quote Confirmation", "FREIGHT INFORMATION", "Used", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
