// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Quote.LTL.QuoteResultsScreen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class LiabilityCoverage_RateRequest_DisplayLiabilityCostPerPoundFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Liability Coverage - Rate Request - Display Liability Cost Per Pound.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Liability Coverage - Rate Request - Display Liability Cost Per Pound", null, ProgrammingLanguage.CSharp, new string[] {
                        "19258",
                        "Sprint66"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Liability Coverage - Rate Request - Display Liability Cost Per Pound")))
            {
                global::CRM.UITest.Scripts.Quote.LTL.QuoteResultsScreen.LiabilityCoverage_RateRequest_DisplayLiabilityCostPerPoundFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerificationOfCostPerPoundNewAndCostPerPoundUsedFieldsWithDollarSymbolOnResultsScreenInGetQuote_Nonguaranteed(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification of  Cost per Pound (New) and Cost per Pound (Used) fields with dolla" +
                    "r symbol on results screen in get quote_nonguaranteed", @__tags);
#line 5
 this.ScenarioSetup(scenarioInfo);
#line 6
   testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
   testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
   testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
   testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
   testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
   testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
   testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
   testRunner.Then("I should displayed with Cost per PoundNew and Cost per PoundUsed fields above Max" +
                    " Liability field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
   testRunner.And("the verbiage Carrier’s Legal Liability per Pound without Insurance and Carrier’s " +
                    "Max Liability if Shipment is Not Insured fields should be displayed for carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
   testRunner.And("I should displayed with Cost per PoundNew and Cost per PoundUsed fields with pref" +
                    "ix of dollar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification of  Cost per Pound (New) and Cost per Pound (Used) fields with dolla" +
            "r symbol on results screen in get quote_nonguaranteed: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Liability Coverage - Rate Request - Display Liability Cost Per Pound")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19258")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shp.entry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "10")]
        public virtual void VerificationOfCostPerPoundNewAndCostPerPoundUsedFieldsWithDollarSymbolOnResultsScreenInGetQuote_Nonguaranteed_S1()
        {
#line 5
 this.VerificationOfCostPerPoundNewAndCostPerPoundUsedFieldsWithDollarSymbolOnResultsScreenInGetQuote_Nonguaranteed("s1", "shp.entry", "Te$t1234", "LTL", "90001", "60606", "50", "10", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationOfCostPerPoundNewAndCostPerPoundUsedFieldValuesInGetQuote_DBVerification_Nonguaranteed(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification of Cost per Pound (New) and Cost per Pound (Used) field values in ge" +
                    "t quote_DB verification_nonguaranteed", @__tags);
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
   testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
   testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
   testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
   testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
   testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
   testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
   testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
   testRunner.Then("I should displayed with Cost per PoundNew and Cost per PoundUsed field values sho" +
                    "uld match with the DB for Nonguaranteed grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification of Cost per Pound (New) and Cost per Pound (Used) field values in ge" +
            "t quote_DB verification_nonguaranteed: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Liability Coverage - Rate Request - Display Liability Cost Per Pound")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19258")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        public virtual void VerificationOfCostPerPoundNewAndCostPerPoundUsedFieldValuesInGetQuote_DBVerification_Nonguaranteed_S1()
        {
#line 22
this.VerificationOfCostPerPoundNewAndCostPerPoundUsedFieldValuesInGetQuote_DBVerification_Nonguaranteed("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationOfCostPerPoundNewAndCostPerPoundUsedFieldsWithDollarSymbolOnResultsScreenInGetQuote_Guaranteed(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification of Cost per Pound (New) and Cost per Pound (Used) fields with dollar" +
                    " symbol on results screen in get quote_guaranteed", @__tags);
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
   testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
   testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
   testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
   testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
   testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
   testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
   testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
   testRunner.Then("I should displayed with Cost per PoundNew and Cost per PoundUsed fields above Max" +
                    " Liability field for guaranteed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
   testRunner.And("the verbiage Carrier’s Legal Liability per Pound without Insurance and Carrier’s " +
                    "Max Liability if Shipment is Not Insured fields should be displayed for guarante" +
                    "ed carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
   testRunner.And("I should displayed with Cost per PoundNew and Cost per PoundUsed fields with pref" +
                    "ix of dollar for guaranteed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification of Cost per Pound (New) and Cost per Pound (Used) fields with dollar" +
            " symbol on results screen in get quote_guaranteed: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Liability Coverage - Rate Request - Display Liability Cost Per Pound")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19258")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shp.entry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        public virtual void VerificationOfCostPerPoundNewAndCostPerPoundUsedFieldsWithDollarSymbolOnResultsScreenInGetQuote_Guaranteed_S1()
        {
#line 37
this.VerificationOfCostPerPoundNewAndCostPerPoundUsedFieldsWithDollarSymbolOnResultsScreenInGetQuote_Guaranteed("s1", "shp.entry", "Te$t1234", "LTL", "90001", "60606", "50", "150", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationOfCostPerPoundNewAndCostPerPoundUsedFieldsValuesInGetQuote_DBVerification_Guaranteed(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification of  Cost per Pound (New) and Cost per Pound (Used) fields values in " +
                    "get quote_DB verification_guaranteed", @__tags);
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
   testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
   testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
   testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
   testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
   testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
   testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
   testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
   testRunner.Then("I should displayed with Cost per PoundNew and Cost per PoundUsed field values sho" +
                    "uld match with the DB for guaranteed grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification of  Cost per Pound (New) and Cost per Pound (Used) fields values in " +
            "get quote_DB verification_guaranteed: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Liability Coverage - Rate Request - Display Liability Cost Per Pound")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19258")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        public virtual void VerificationOfCostPerPoundNewAndCostPerPoundUsedFieldsValuesInGetQuote_DBVerification_Guaranteed_S1()
        {
#line 54
this.VerificationOfCostPerPoundNewAndCostPerPoundUsedFieldsValuesInGetQuote_DBVerification_Guaranteed("s1", "shipentry", "Te$t1234", "LTL", "90001", "60606", "50", "150", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationCostPerPoundNewAndCostPerPoundUsedValuesInGetQuote_DBVerification_Insuredtype_New(string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification CostPerPound(New) and CostPerPound(Used) values in get quote_DB veri" +
                    "fication_insuredtype_New", @__tags);
#line 69
this.ScenarioSetup(scenarioInfo);
#line 70
   testRunner.Given("I login as Ship entry user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 71
   testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
   testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
   testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
   testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
   testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
   testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
   testRunner.And(string.Format("I select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
   testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
   testRunner.Then("I should displayed with Cost per PoundNew and Cost per PoundUsed fields with pref" +
                    "ix of dollar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 80
   testRunner.And("I should displayed with Cost per PoundNew and Cost per PoundUsed field values sho" +
                    "uld match with the DB for Nonguaranteed grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification CostPerPound(New) and CostPerPound(Used) values in get quote_DB veri" +
            "fication_insuredtype_New: shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Liability Coverage - Rate Request - Display Liability Cost Per Pound")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19258")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        public virtual void VerificationCostPerPoundNewAndCostPerPoundUsedValuesInGetQuote_DBVerification_Insuredtype_New_Shipentry()
        {
#line 69
this.VerificationCostPerPoundNewAndCostPerPoundUsedValuesInGetQuote_DBVerification_Insuredtype_New("shipentry", "", "LTL", "90001", "60606", "50", "150", "100", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationCostPerPoundNewAndCostPerPoundUsedValuesInGetQuote_DBVerification_Insuredtype_Used(string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification CostPerPound(New) and CostPerPound(Used) values in get quote_DB veri" +
                    "fication_insuredtype_Used", @__tags);
#line 87
this.ScenarioSetup(scenarioInfo);
#line 88
   testRunner.Given("I login as Ship entry user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 89
   testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
   testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
   testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
   testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
   testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
   testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
   testRunner.And(string.Format("I select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
   testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
   testRunner.Then("I should displayed with Cost per PoundNew and Cost per PoundUsed fields with pref" +
                    "ix of dollar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 98
   testRunner.And("I should displayed with Cost per PoundNew and Cost per PoundUsed field values sho" +
                    "uld match with the DB for Nonguaranteed grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification CostPerPound(New) and CostPerPound(Used) values in get quote_DB veri" +
            "fication_insuredtype_Used: shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Liability Coverage - Rate Request - Display Liability Cost Per Pound")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("19258")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint66")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        public virtual void VerificationCostPerPoundNewAndCostPerPoundUsedValuesInGetQuote_DBVerification_Insuredtype_Used_Shipentry()
        {
#line 87
this.VerificationCostPerPoundNewAndCostPerPoundUsedValuesInGetQuote_DBVerification_Insuredtype_Used("shipentry", "", "LTL", "90001", "60606", "50", "150", "100", "Used", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
