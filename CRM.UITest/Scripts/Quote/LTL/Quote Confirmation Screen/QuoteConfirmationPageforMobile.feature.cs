// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Quote.LTL.QuoteConfirmationScreen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class LTLQuoteConfirmationForMobileFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "QuoteConfirmationPageforMobile.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "LTL Quote Confirmation for Mobile", null, ProgrammingLanguage.CSharp, new string[] {
                        "17391",
                        "LTLQuoteconfirmationpageformobile",
                        "Sprint59"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "LTL Quote Confirmation for Mobile")))
            {
                global::CRM.UITest.Scripts.Quote.LTL.QuoteConfirmationScreen.LTLQuoteConfirmationForMobileFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyBackToQuoteListButtonInMobileDevice(
                    string scenario, 
                    string backtoQuoteList, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string country, 
                    string originZip, 
                    string destinationZip, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string windowWidth, 
                    string windowHeight, 
                    string app_Url, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Back to Quote List button in mobile device", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
    testRunner.And(string.Format("I enter valid data origin zip in Origin section {0}", originZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And(string.Format("I enter valid data destination zip in Destination section {0}", destinationZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And(string.Format("I click on save rate as quote link  for selected carrier \'{0}\' in mobile device", app_Url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
 testRunner.Then(string.Format("the \'{0}\' List button will be hidden", backtoQuoteList), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Back to Quote List button in mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BacktoQuoteList", "Back To Quote List")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "99501")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "412")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "732")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:App_Url", "http://dlscrm-dev.rrd.com/")]
        public virtual void VerifyBackToQuoteListButtonInMobileDevice_S1()
        {
#line 5
this.VerifyBackToQuoteListButtonInMobileDevice("S1", "Back To Quote List", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "USA", "99501", "90087", "50", "4", "123", "", "412", "732", "http://dlscrm-dev.rrd.com/", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyShippingDocumentsTextInMobileDevice(
                    string scenario, 
                    string uploadshippingdocuments, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string country, 
                    string originZip, 
                    string destinationZip, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string windowWidth, 
                    string windowHeight, 
                    string app_Url, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify shipping documents text in mobile device", @__tags);
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 25
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
    testRunner.And(string.Format("I enter valid data origin zip in Origin section {0}", originZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And(string.Format("I enter valid data destination zip in Destination section {0}", destinationZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And(string.Format("I click on save rate as quote link  for selected carrier \'{0}\' in mobile device", app_Url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 34
 testRunner.Then(string.Format("Uploadshippingdocuments \'{0}\' text will be hidden", uploadshippingdocuments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify shipping documents text in mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Uploadshippingdocuments", "Upload shipping documents")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "12")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "400")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "575")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:App_Url", "http://dlscrm-dev.rrd.com/")]
        public virtual void VerifyShippingDocumentsTextInMobileDevice_S1()
        {
#line 23
this.VerifyShippingDocumentsTextInMobileDevice("S1", "Upload shipping documents", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "USA", "90001", "90087", "50", "3", "12", "", "400", "575", "http://dlscrm-dev.rrd.com/", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyDropzoneInMobileDevice(
                    string scenario, 
                    string dropzone, 
                    string username, 
                    string quoteConfirmationpageText, 
                    string password, 
                    string service, 
                    string country, 
                    string originZip, 
                    string destinationZip, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string windowWidth, 
                    string windowHeight, 
                    string app_Url, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify  dropzone in mobile device", @__tags);
#line 41
this.ScenarioSetup(scenarioInfo);
#line 42
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 43
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
     testRunner.And(string.Format("I enter valid data origin zip in Origin section {0}", originZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And(string.Format("I enter valid data destination zip in Destination section {0}", destinationZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And(string.Format("I click on save rate as quote link  for selected carrier \'{0}\' in mobile device", app_Url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
 testRunner.Then("dropzone will be hidden", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify  dropzone in mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:dropzone", "dropzone")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "7")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "13213")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "400")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "575")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:App_Url", "http://dlscrm-dev.rrd.com/")]
        public virtual void VerifyDropzoneInMobileDevice_S1()
        {
#line 41
this.VerifyDropzoneInMobileDevice("S1", "dropzone", "shipentry@gmail.com", "Quote Confirmation", "Te$t1234", "LTL", "USA", "90001", "90087", "50", "7", "13213", "", "400", "575", "http://dlscrm-dev.rrd.com/", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyScrollDownFunctionalityInMobileDevice(
                    string scenario, 
                    string uploadshippingdocuments, 
                    string showQuoteDetails_Link, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string country, 
                    string originZip, 
                    string destinationZip, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string windowWidth, 
                    string windowHeight, 
                    string app_Url, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify scroll down functionality in mobile device", @__tags);
#line 59
this.ScenarioSetup(scenarioInfo);
#line 60
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
     testRunner.And(string.Format("I enter valid data origin zip in Origin section {0}", originZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.And(string.Format("I enter valid data destination zip in Destination section {0}", destinationZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And(string.Format("I click on save rate as quote link  for selected carrier \'{0}\' in mobile device", app_Url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 70
 testRunner.Then(string.Format("I expand the Show Quote Details link \'{0}\'", showQuoteDetails_Link), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 71
    testRunner.Then("I will be able to scroll the details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify scroll down functionality in mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Uploadshippingdocuments", "Upload shipping documents")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShowQuoteDetails_link", "Show Quote Details")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "456")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "400")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "575")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:App_Url", "http://dlscrm-dev.rrd.com/")]
        public virtual void VerifyScrollDownFunctionalityInMobileDevice_S1()
        {
#line 59
this.VerifyScrollDownFunctionalityInMobileDevice("S1", "Upload shipping documents", "Show Quote Details", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "USA", "90001", "90087", "50", "2", "456", "", "400", "575", "http://dlscrm-dev.rrd.com/", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheFieldsOnTheQuotesConfirmationPageInMobileDevie(
                    string scenario, 
                    string quoteConfirmationpage, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string originZip, 
                    string destinationZip, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string windowWidth, 
                    string windowHeight, 
                    string additionalService, 
                    string servicefieldText, 
                    string pickup_Date_Text, 
                    string request_Number_Text, 
                    string status_Text, 
                    string showQuoteDetails_Link, 
                    string getAnotherQuotebutton, 
                    string app_Url, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the fields on the quotes confirmation page in mobile devie", @__tags);
#line 79
this.ScenarioSetup(scenarioInfo);
#line 80
   testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
     testRunner.And(string.Format("I enter valid data origin zip in Origin section {0}", originZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.And(string.Format("I enter valid data destination zip in Destination section {0}", destinationZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
 testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
    testRunner.And(string.Format("I click on save rate as quote link  for selected carrier \'{0}\' in mobile device", app_Url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 90
    testRunner.And(string.Format("I will be able to see \'{0}\' and name on Quote Confimation page \'{1}\'", servicefieldText, service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.And(string.Format("I will be able to see Pickup field and date page header Quote confirmation page {" +
                        "0}", pickup_Date_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
    testRunner.And(string.Format("I will be able to see \'{0}\' on Quote confirmation page", request_Number_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And(string.Format("I will be able to see status \'{0}\' on Quote confirmation page", status_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And(string.Format("I will be able to see \'{0}\' expand/collapse link on Quote confirmation page", showQuoteDetails_Link), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.And(string.Format("I will be able to see GetAnotherQuotebutton \'{0}\' on Quote confirmation page", getAnotherQuotebutton), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the fields on the quotes confirmation page in mobile devie: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpage", "Get Quote (LTL)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "400")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "575")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:servicefieldText", "SERVICE :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Pickup_Date_Text", "PICKUP :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:request_number_Text", "REQUEST NUMBER :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:status_Text", "STATUS :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShowQuoteDetails_link", "Show Quote Details")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetAnotherQuotebutton", "Get Another Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:App_Url", "http://dlscrm-dev.rrd.com/")]
        public virtual void VerifyTheFieldsOnTheQuotesConfirmationPageInMobileDevie_S1()
        {
#line 79
this.VerifyTheFieldsOnTheQuotesConfirmationPageInMobileDevie("S1", "Get Quote (LTL)", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "90087", "50", "2", "123", "400", "575", "Appointment", "SERVICE :", "PICKUP :", "REQUEST NUMBER :", "STATUS :", "Show Quote Details", "Get Another Quote", "http://dlscrm-dev.rrd.com/", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyShowQuoteDetailsLinkFunctionalityInMobile(
                    string scenario, 
                    string shipmentInfromationHeader, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string originZip, 
                    string destinationZip, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string windowWidth, 
                    string windowHeight, 
                    string additionalService, 
                    string servicefieldText, 
                    string pickup_Date_Text, 
                    string request_Number_Text, 
                    string status_Text, 
                    string showQuoteDetails_Link, 
                    string getAnotherQuotebutton, 
                    string app_Url, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Show Quote Details link functionality in mobile", @__tags);
#line 102
this.ScenarioSetup(scenarioInfo);
#line 103
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 104
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
     testRunner.And(string.Format("I enter valid data origin zip in Origin section {0}", originZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
 testRunner.And(string.Format("I enter valid data destination zip in Destination section {0}", destinationZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
    testRunner.And(string.Format("I click on save rate as quote link  for selected carrier \'{0}\' in mobile device", app_Url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 113
    testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
    testRunner.And(string.Format("Show Quote Details link should be expandedShipment information \'{0}\'", shipmentInfromationHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Show Quote Details link functionality in mobile: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentInfromationHeader", "SHIPMENT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "400")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "575")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:servicefieldText", "SERVICE :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Pickup_Date_Text", "PICKUP :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:request_number_Text", "REQUEST NUMBER :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:status_Text", "STATUS :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShowQuoteDetails_link", "Show Quote Details")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetAnotherQuotebutton", "Get Another Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:App_Url", "http://dlscrm-dev.rrd.com/")]
        public virtual void VerifyShowQuoteDetailsLinkFunctionalityInMobile_S1()
        {
#line 102
this.VerifyShowQuoteDetailsLinkFunctionalityInMobile("S1", "SHIPMENT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "90087", "50", "2", "123", "400", "575", "Appointment", "SERVICE :", "PICKUP :", "REQUEST NUMBER :", "STATUS :", "Show Quote Details", "Get Another Quote", "http://dlscrm-dev.rrd.com/", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheLabelInsuredTypeInFreightInformationSectionOnQuoteConfirmationPageOfMobileScreen(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the label Insured type in Freight information section on Quote Con" +
                    "firmation Page of mobile screen", @__tags);
#line 122
this.ScenarioSetup(scenarioInfo);
#line 123
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 124
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 127
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
testRunner.And("I click on save rate as quote link  for selected carrier on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 135
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
testRunner.And(string.Format("I will see Freight Information details {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8" +
                        "}", weightColumnText, classColumnText, insuredValueColumnText, insuredTypeColumnText, hazmatColumnText, classification, weight, insuredvalue, insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the label Insured type in Freight information section on Quote Con" +
            "firmation Page of mobile screen: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void TestToVerifyTheLabelInsuredTypeInFreightInformationSectionOnQuoteConfirmationPageOfMobileScreen_S1()
        {
#line 122
this.TestToVerifyTheLabelInsuredTypeInFreightInformationSectionOnQuoteConfirmationPageOfMobileScreen("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "70", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNAForStandaredRatesWhenUserNotEnteredTheInsuredValueOnGetQuotePageOfMobileScreen(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'N/A\' for Standared rates when u" +
                    "ser not entered the Insured value on GetQuote page of mobile screen", @__tags);
#line 144
this.ScenarioSetup(scenarioInfo);
#line 145
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 146
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 149
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
testRunner.And(string.Format("I have not entered data in \'{0}\' field of Freight Description section", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
testRunner.And(string.Format("I have not selected any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
testRunner.And("I click on save rate as quote link  for selected carrier on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 157
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
testRunner.And(string.Format("I will be displayed with N/A under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'N/A\' for Standared rates when u" +
            "ser not entered the Insured value on GetQuote page of mobile screen: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "N/A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNAForStandaredRatesWhenUserNotEnteredTheInsuredValueOnGetQuotePageOfMobileScreen_S1()
        {
#line 144
this.TestToVerifyTheInsuredTypeFieldDisplayingNAForStandaredRatesWhenUserNotEnteredTheInsuredValueOnGetQuotePageOfMobileScreen("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "60606", "90001", "50", "120", "", "", "Quote Confirmation", "FREIGHT INFORMATION", "N/A", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForStandaredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuotePageOfMobileScreen(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'New\' for Standared rates when u" +
                    "ser selected Insured Value type New on GetQuote page of mobile screen", @__tags);
#line 166
this.ScenarioSetup(scenarioInfo);
#line 167
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 168
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 171
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
testRunner.And(string.Format("I select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
testRunner.And("I click on save rate as quote link  for selected carrier on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 179
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
testRunner.And(string.Format("I will be displayed with New under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'New\' for Standared rates when u" +
            "ser selected Insured Value type New on GetQuote page of mobile screen: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForStandaredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuotePageOfMobileScreen_S1()
        {
#line 166
this.TestToVerifyTheInsuredTypeFieldDisplayingNewForStandaredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuotePageOfMobileScreen("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForStandaredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuotePageOfMobileScreen(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'Used\' for Standared rates when " +
                    "user selected Insured Value type Used on GetQuote page of mobile screen", @__tags);
#line 188
this.ScenarioSetup(scenarioInfo);
#line 189
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 190
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 193
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
testRunner.And(string.Format("I select Used insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
testRunner.And("I click on save rate as quote link  for selected carrier on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 201
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
testRunner.And(string.Format("I will be displayed with Used under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'Used\' for Standared rates when " +
            "user selected Insured Value type Used on GetQuote page of mobile screen: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForStandaredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuotePageOfMobileScreen_S1()
        {
#line 188
this.TestToVerifyTheInsuredTypeFieldDisplayingUsedForStandaredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuotePageOfMobileScreen("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "100", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "Used", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForInsuredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuotePageOfMobileScreen(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'New\' for Insured rates when use" +
                    "r selected Insured Value type New on GetQuote page of mobile screen", @__tags);
#line 210
this.ScenarioSetup(scenarioInfo);
#line 211
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 212
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 215
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
testRunner.And(string.Format("I select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 220
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
testRunner.And("I click on save insured rate as quote link  for selected carrier on mobile screen" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 223
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 225
testRunner.And(string.Format("I will be displayed with New under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'New\' for Insured rates when use" +
            "r selected Insured Value type New on GetQuote page of mobile screen: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForInsuredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuotePageOfMobileScreen_S1()
        {
#line 210
this.TestToVerifyTheInsuredTypeFieldDisplayingNewForInsuredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuotePageOfMobileScreen("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForInsuredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuotePageOfMobileScreen(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'Used\' for Insured rates when us" +
                    "er selected Insured Value type Used on GetQuote page of mobile screen", @__tags);
#line 232
this.ScenarioSetup(scenarioInfo);
#line 233
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 234
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 236
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 237
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 238
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 240
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
testRunner.And(string.Format("I select Used insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 242
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 243
testRunner.And("I click on save insured rate as quote link  for selected carrier on mobile screen" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 244
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 245
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 247
testRunner.And(string.Format("I will be displayed with Used under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'Used\' for Insured rates when us" +
            "er selected Insured Value type Used on GetQuote page of mobile screen: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForInsuredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuotePageOfMobileScreen_S1()
        {
#line 232
this.TestToVerifyTheInsuredTypeFieldDisplayingUsedForInsuredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuotePageOfMobileScreen("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "100", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "Used", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForGuaranteedInsuredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuotePageOfMobileScreen(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'New\' for Guaranteed Insured rat" +
                    "es when user selected Insured Value type New on GetQuote page of mobile screen", @__tags);
#line 254
this.ScenarioSetup(scenarioInfo);
#line 255
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 256
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 257
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 259
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 261
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 262
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 263
testRunner.And(string.Format("I select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
testRunner.And("I will be navigated to Guaranteed Rate carriers on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
testRunner.And("I click on guaranteed save insured rate as quote link  for selected carrier on mo" +
                    "bile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 268
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 269
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
testRunner.And(string.Format("I will be displayed with New under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'New\' for Guaranteed Insured rat" +
            "es when user selected Insured Value type New on GetQuote page of mobile screen: " +
            "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "90")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForGuaranteedInsuredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuotePageOfMobileScreen_S1()
        {
#line 254
this.TestToVerifyTheInsuredTypeFieldDisplayingNewForGuaranteedInsuredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuotePageOfMobileScreen("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "90", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForGuaranteedInsuredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuotePageOfMobileScreen(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'Used\' for Guaranteed Insured ra" +
                    "tes when user selected Insured Value type Used on GetQuote page of mobile screen" +
                    "", @__tags);
#line 277
this.ScenarioSetup(scenarioInfo);
#line 278
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 279
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 280
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 281
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 282
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 283
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 284
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 286
testRunner.And(string.Format("I select Used insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 287
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
testRunner.And("I will be navigated to Guaranteed Rate carriers on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 289
testRunner.And("I click on guaranteed save insured rate as quote link  for selected carrier on mo" +
                    "bile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 290
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 291
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 293
testRunner.And(string.Format("I will be displayed with Used under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'Used\' for Guaranteed Insured ra" +
            "tes when user selected Insured Value type Used on GetQuote page of mobile screen" +
            ": s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "90")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForGuaranteedInsuredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuotePageOfMobileScreen_S1()
        {
#line 277
this.TestToVerifyTheInsuredTypeFieldDisplayingUsedForGuaranteedInsuredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuotePageOfMobileScreen("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "90", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "Used", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNAForGuaranteedStandardRatesWhenUserNotEnteredTheInsuredValueOnGetQuoteLTLPage(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'N/A\' for Guaranteed standard ra" +
                    "tes when user not entered the Insured value on GetQuote (LTL) page", @__tags);
#line 300
this.ScenarioSetup(scenarioInfo);
#line 301
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 302
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 304
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 305
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 306
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 307
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 308
testRunner.And(string.Format("I have not entered data in \'{0}\' field of Freight Description section", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 309
testRunner.And(string.Format("I have not selected any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 310
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 311
testRunner.And("I will be navigated to Guaranteed Rate carriers on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 312
testRunner.And("I click on guaranteed save rate as quote link  for selected carrier on mobile scr" +
                    "een", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 313
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 314
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 315
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
testRunner.And(string.Format("I will be displayed with N/A under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'N/A\' for Guaranteed standard ra" +
            "tes when user not entered the Insured value on GetQuote (LTL) page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "N/A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNAForGuaranteedStandardRatesWhenUserNotEnteredTheInsuredValueOnGetQuoteLTLPage_S1()
        {
#line 300
this.TestToVerifyTheInsuredTypeFieldDisplayingNAForGuaranteedStandardRatesWhenUserNotEnteredTheInsuredValueOnGetQuoteLTLPage("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "", "", "Quote Confirmation", "FREIGHT INFORMATION", "N/A", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForGuaranteedStandardRatesWhenUserSelectedInsuredValueTypeNewOnGetQuotePageOfMobileScreen(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'New\' for Guaranteed Standard ra" +
                    "tes when user selected Insured Value type New on GetQuote page of mobile screen", @__tags);
#line 323
this.ScenarioSetup(scenarioInfo);
#line 324
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 325
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 326
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 327
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 328
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 329
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 330
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 331
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 332
testRunner.And(string.Format("I select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 333
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 334
testRunner.And("I will be navigated to Guaranteed Rate carriers on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 335
testRunner.And("I click on guaranteed save rate as quote link  for selected carrier on mobile scr" +
                    "een", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 336
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 337
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 338
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 339
testRunner.And(string.Format("I will be displayed with New under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'New\' for Guaranteed Standard ra" +
            "tes when user selected Insured Value type New on GetQuote page of mobile screen:" +
            " s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForGuaranteedStandardRatesWhenUserSelectedInsuredValueTypeNewOnGetQuotePageOfMobileScreen_S1()
        {
#line 323
this.TestToVerifyTheInsuredTypeFieldDisplayingNewForGuaranteedStandardRatesWhenUserSelectedInsuredValueTypeNewOnGetQuotePageOfMobileScreen("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForGuaranteedStandardRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuotePageOfMobileScreen(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'Used\' for Guaranteed standard r" +
                    "ates when user selected Insured Value type Used on GetQuote page of mobile scree" +
                    "n", @__tags);
#line 346
this.ScenarioSetup(scenarioInfo);
#line 347
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 348
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 351
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 352
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
testRunner.And(string.Format("I select Used insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 356
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 357
testRunner.And("I will be navigated to Guaranteed Rate carriers on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 358
testRunner.And("I click on guaranteed save rate as quote link  for selected carrier on mobile scr" +
                    "een", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 359
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 360
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 361
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 362
testRunner.And(string.Format("I will be displayed with Used under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'Used\' for Guaranteed standard r" +
            "ates when user selected Insured Value type Used on GetQuote page of mobile scree" +
            "n: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForGuaranteedStandardRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuotePageOfMobileScreen_S1()
        {
#line 346
this.TestToVerifyTheInsuredTypeFieldDisplayingUsedForGuaranteedStandardRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuotePageOfMobileScreen("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "100", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "Used", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeNAFieldDisplayingOnConfirmationPageWhenNoRateResultsForMobileView(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string originCity, 
                    string originProvince, 
                    string originPostal, 
                    string destinationCity, 
                    string destinationProvince, 
                    string destinationPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type N/A field displaying on Confirmation page when no" +
                    " rate results for mobile view", @__tags);
#line 369
this.ScenarioSetup(scenarioInfo);
#line 370
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 371
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 372
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 373
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 374
testRunner.And("I select Canada Country from origin country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 375
testRunner.And(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originPostal, originCity, originProvince), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 376
testRunner.And("I select Canada Country from destination country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 377
testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationProvince, destinationCity, destinationPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 378
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 379
testRunner.And(string.Format("I have not entered data in \'{0}\' field of Freight Description section", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 380
testRunner.And(string.Format("I have not selected any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 381
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 382
testRunner.And("I click on save your quote link on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 383
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 384
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 385
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 386
testRunner.And(string.Format("I will be displayed with N/A under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type N/A field displaying on Confirmation page when no" +
            " rate results for mobile view: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Acton")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginProvince", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginPostal", "L7J 0A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Acton")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationProvince", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationPostal", "L7J 0A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "N/A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void TestToVerifyTheInsuredTypeNAFieldDisplayingOnConfirmationPageWhenNoRateResultsForMobileView_S1()
        {
#line 369
this.TestToVerifyTheInsuredTypeNAFieldDisplayingOnConfirmationPageWhenNoRateResultsForMobileView("s1", "nat@extuser.com", "Te$t1234", "LTL", "Acton", "ON", "L7J 0A1", "Acton", "ON", "L7J 0A1", "50", "120", "", "", "Quote Confirmation", "FREIGHT INFORMATION", "N/A", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeNewFieldDisplayingOnConfirmationPageWhenNoRateResultsForMobileView(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string originCity, 
                    string originProvince, 
                    string originPostal, 
                    string destinationCity, 
                    string destinationProvince, 
                    string destinationPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type New field displaying on Confirmation page when no" +
                    " rate results for mobile view", @__tags);
#line 393
this.ScenarioSetup(scenarioInfo);
#line 394
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 395
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 397
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 398
testRunner.And("I select Canada Country from origin country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 399
testRunner.And(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originPostal, originCity, originProvince), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 400
testRunner.And("I select Canada Country from destination country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 401
testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationProvince, destinationCity, destinationPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 402
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 403
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 404
testRunner.And(string.Format("I select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 405
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 406
testRunner.And("I click on save your quote link on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 407
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 408
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 409
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 410
testRunner.And(string.Format("I will be displayed with New under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type New field displaying on Confirmation page when no" +
            " rate results for mobile view: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Acton")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginProvince", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginPostal", "L7J 0A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Acton")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationProvince", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationPostal", "L7J 0A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void TestToVerifyTheInsuredTypeNewFieldDisplayingOnConfirmationPageWhenNoRateResultsForMobileView_S1()
        {
#line 393
this.TestToVerifyTheInsuredTypeNewFieldDisplayingOnConfirmationPageWhenNoRateResultsForMobileView("s1", "nat@extuser.com", "Te$t1234", "LTL", "Acton", "ON", "L7J 0A1", "Acton", "ON", "L7J 0A1", "50", "120", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeUsedFieldDisplayingOnConfirmationPageWhenNoRateResultsForMobileView(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string originCity, 
                    string originProvince, 
                    string originPostal, 
                    string destinationCity, 
                    string destinationProvince, 
                    string destinationPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type Used field displaying on Confirmation page when n" +
                    "o rate results for mobile view", @__tags);
#line 417
this.ScenarioSetup(scenarioInfo);
#line 418
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 419
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 420
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 421
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 422
testRunner.And("I select Canada Country from origin country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 423
testRunner.And(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originPostal, originCity, originProvince), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 424
testRunner.And("I select Canada Country from destination country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 425
testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationProvince, destinationCity, destinationPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 426
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 427
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 428
testRunner.And(string.Format("I select Used insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 429
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 430
testRunner.And("I click on save your quote link on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 431
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 432
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 433
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 434
testRunner.And(string.Format("I will be displayed with Used under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type Used field displaying on Confirmation page when n" +
            "o rate results for mobile view: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Acton")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginProvince", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginPostal", "L7J 0A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Acton")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationProvince", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationPostal", "L7J 0A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void TestToVerifyTheInsuredTypeUsedFieldDisplayingOnConfirmationPageWhenNoRateResultsForMobileView_S1()
        {
#line 417
this.TestToVerifyTheInsuredTypeUsedFieldDisplayingOnConfirmationPageWhenNoRateResultsForMobileView("S1", "nat@extuser.com", "Te$t1234", "LTL", "Acton", "ON", "L7J 0A1", "Acton", "ON", "L7J 0A1", "50", "120", "100", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "Used", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationOfServicesAndAccessorialsSectionForShipFromAndShipToFieldsOnConfimationPageForStandardRate(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification of Services and Accessorials section for \"Ship From\" and \"Ship To\" f" +
                    "ields on confimation page for standard rate", @__tags);
#line 443
this.ScenarioSetup(scenarioInfo);
#line 444
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 445
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 446
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 447
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 448
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 449
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 450
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 451
   testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 452
    testRunner.And("I click on save rate as quote link  for selected carrier on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 453
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 454
    testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 455
    testRunner.And("I should be displayed with Ship From and Ship To fields under the Services and Ac" +
                    "cessorials section not Services/Accessorials label", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification of Services and Accessorials section for \"Ship From\" and \"Ship To\" f" +
            "ields on confimation page for standard rate: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerificationOfServicesAndAccessorialsSectionForShipFromAndShipToFieldsOnConfimationPageForStandardRate_S1()
        {
#line 443
this.VerificationOfServicesAndAccessorialsSectionForShipFromAndShipToFieldsOnConfimationPageForStandardRate("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromInServicesAndAccessorialsWhenUserMultipleSelectedAccessorialsInGetQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of  \"Ship From\"  in Services an" +
                    "d Accessorials when user multiple selected Accessorials in get quote", @__tags);
#line 465
this.ScenarioSetup(scenarioInfo);
#line 466
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 467
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 468
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 469
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 470
 testRunner.And("I click services and accessorials dropdown on Ship From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 471
 testRunner.Then(string.Format("I should be able to select services \'{0}\' and \'{1}\' from Ship.From Section", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 472
    testRunner.When(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 473
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 474
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 475
   testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 476
    testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 477
    testRunner.When("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 478
    testRunner.And("I click on save rate as quote link  for selected carrier on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 479
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 480
 testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 481
    testRunner.And(string.Format("I should be displayed with selected \'{0}\' and {1} Services", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 482
 testRunner.And("I should display with NA in ship to field in Service and Accessorials section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of  \"Ship From\"  in Services an" +
            "d Accessorials when user multiple selected Accessorials in get quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "Construction Site")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromInServicesAndAccessorialsWhenUserMultipleSelectedAccessorialsInGetQuote_S1()
        {
#line 465
this.VerificationForServicesAndAccessorialsValuesOfShipFromInServicesAndAccessorialsWhenUserMultipleSelectedAccessorialsInGetQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "Construction Site", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromInServicesAndAccessorialsWhenUserSelectedAccessorialsInGetQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of  \"Ship From\"  in Services an" +
                    "d Accessorials when user selected Accessorials in get quote", @__tags);
#line 491
this.ScenarioSetup(scenarioInfo);
#line 492
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 493
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 494
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 495
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 496
 testRunner.And("I click services and accessorials dropdown on Ship From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 497
 testRunner.And(string.Format("I select a service \'{0}\' from the Ship.From section dropdown", accessorials1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 498
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 499
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 500
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 501
   testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 502
    testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 503
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 504
    testRunner.And("I click on save rate as quote link  for selected carrier on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 505
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 506
 testRunner.Then("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 507
    testRunner.And(string.Format("I should be displayed with selected \'{0}\' Services", accessorials1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 508
 testRunner.And("I should display with NA in ship to field in Service and Accessorials section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of  \"Ship From\"  in Services an" +
            "d Accessorials when user selected Accessorials in get quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromInServicesAndAccessorialsWhenUserSelectedAccessorialsInGetQuote_S1()
        {
#line 491
this.VerificationForServicesAndAccessorialsValuesOfShipFromInServicesAndAccessorialsWhenUserSelectedAccessorialsInGetQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of  \"Ship To:\" in Services and " +
                    "Accessorials section when user selected Accessorials in get quote", @__tags);
#line 517
this.ScenarioSetup(scenarioInfo);
#line 518
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 519
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 520
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 521
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 522
 testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 523
 testRunner.And("I click services and accessorials dropdown on Ship To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 524
    testRunner.And(string.Format("I select a service \'{0}\' from the Ship.To section dropdown", accessorials1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 525
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 526
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 527
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 528
    testRunner.And("I click on save rate as quote link  for selected carrier on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 529
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 530
 testRunner.Then("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 531
    testRunner.And(string.Format("I should be displayed with selected to \'{0}\' Services", accessorials1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 532
 testRunner.And("I should display with NA in Ship From field in Services and Accessorials section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of  \"Ship To:\" in Services and " +
            "Accessorials section when user selected Accessorials in get quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "COD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuote_S1()
        {
#line 517
this.VerificationForServicesAndAccessorialsValuesOfShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "COD", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipToInServicesAndAccessorialsSectionWhenUserMultipleSelectedAccessorialsInGetQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of  \"Ship To:\" in Services and " +
                    "Accessorials section when user multiple selected Accessorials in get quote", @__tags);
#line 539
this.ScenarioSetup(scenarioInfo);
#line 540
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 541
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 542
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 543
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 544
 testRunner.When(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 545
 testRunner.And("I click services and accessorials dropdown on Ship To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 546
    testRunner.Then(string.Format("I should be able to select services \'{0}\' and \'{1}\' from Ship.To Section", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 547
    testRunner.When(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 548
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 549
    testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 550
    testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 551
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 552
 testRunner.And("I navigating to results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 553
    testRunner.And("I click on save rate as quote link  for selected carrier on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 554
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 555
 testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 556
    testRunner.And(string.Format("I should be displayed with selected to \'{0}\' and \'{1}\' Service", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 557
 testRunner.And("I should display with NA in Ship From field in Services and Accessorials section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of  \"Ship To:\" in Services and " +
            "Accessorials section when user multiple selected Accessorials in get quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "COD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipToInServicesAndAccessorialsSectionWhenUserMultipleSelectedAccessorialsInGetQuote_S1()
        {
#line 539
this.VerificationForServicesAndAccessorialsValuesOfShipToInServicesAndAccessorialsSectionWhenUserMultipleSelectedAccessorialsInGetQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "COD", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
                    "n Services and Accessorials section when user selected Accessorials in get quote" +
                    "", @__tags);
#line 563
this.ScenarioSetup(scenarioInfo);
#line 564
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 565
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 566
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 567
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 568
 testRunner.And("I click services and accessorials dropdown on Ship From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 569
    testRunner.And(string.Format("I select a service \'{0}\' from the Ship.From section dropdown", accessorials1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 570
 testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 571
 testRunner.And("I click services and accessorials dropdown on Ship To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 572
    testRunner.And(string.Format("I select a service \'{0}\' from the ShipTo section dropdown", accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 573
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 574
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 575
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 576
    testRunner.And("I click on save rate as quote link  for selected carrier on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 577
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 578
 testRunner.Then("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 579
    testRunner.And(string.Format("I should be displyed with selected \'{0}\' and \'{1}\' in details", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
            "n Services and Accessorials section when user selected Accessorials in get quote" +
            ": s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "COD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuote_S1()
        {
#line 563
this.VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "COD", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedMultipleAccessorialsInGetQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string windowWidth, 
                    string windowHeight, 
                    string accessorials3, 
                    string accessorials4, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
                    "n Services and Accessorials section when user selected multiple Accessorials in " +
                    "get quote", @__tags);
#line 585
this.ScenarioSetup(scenarioInfo);
#line 586
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 587
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 588
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 589
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 590
 testRunner.And("I click services and accessorials dropdown on Ship From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 591
    testRunner.Then(string.Format("I should be able to select services \'{0}\' and \'{1}\' from Ship.From Section", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 592
 testRunner.When(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 593
 testRunner.And("I click services and accessorials dropdown on Ship To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 594
    testRunner.Then(string.Format("I should be able to select services \'{0}\' and \'{1}\' from Ship.To Section", accessorials3, accessorials4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 595
    testRunner.When(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 596
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 597
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 598
    testRunner.And("I click on save rate as quote link  for selected carrier on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 599
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 600
 testRunner.Then("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 601
    testRunner.And(string.Format("I should be displyed with selected all \'{0}\' and \'{1}\' and \'{2}\' and \'{3}\' in det" +
                        "ails", accessorials1, accessorials2, accessorials3, accessorials4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
            "n Services and Accessorials section when user selected multiple Accessorials in " +
            "get quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "Construction Site")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials3", "COD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials4", "Convention-Exhibition Site Delivery")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedMultipleAccessorialsInGetQuote_S1()
        {
#line 585
this.VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedMultipleAccessorialsInGetQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "Construction Site", "320", "568", "COD", "Convention-Exhibition Site Delivery", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
                    "n Services and Accessorials section when user not selected Accessorials in get q" +
                    "uote", @__tags);
#line 607
this.ScenarioSetup(scenarioInfo);
#line 608
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 609
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 610
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 611
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 612
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 613
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 614
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 615
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 616
    testRunner.And("I click on save rate as quote link  for selected carrier on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 617
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 618
 testRunner.Then("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 619
    testRunner.And("I should be displayed with NA in Ship From and  Ship To field  in Services and Ac" +
                    "cessorials section.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
            "n Services and Accessorials section when user not selected Accessorials in get q" +
            "uote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "COD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuote_S1()
        {
#line 607
this.VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "COD", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationOfServicesAccessorialsInTheServicesAndAccessorialsSectionOnConfirmationPageForInsuredRate(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification of Services/Accessorials in the Services and Accessorials section  o" +
                    "n confirmation page for insured rate", @__tags);
#line 627
this.ScenarioSetup(scenarioInfo);
#line 628
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 629
    testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 630
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 631
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 632
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 633
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 634
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 635
   testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 636
    testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 637
 testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 638
    testRunner.And("I click on save insured rate as quote link  for selected carrier on mobile screen" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 639
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 640
    testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 641
    testRunner.And("I should be displayed with Ship From and Ship To fields under the Services and Ac" +
                    "cessorials section not Services/Accessorials label", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification of Services/Accessorials in the Services and Accessorials section  o" +
            "n confirmation page for insured rate: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "COD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerificationOfServicesAccessorialsInTheServicesAndAccessorialsSectionOnConfirmationPageForInsuredRate_S1()
        {
#line 627
this.VerificationOfServicesAccessorialsInTheServicesAndAccessorialsSectionOnConfirmationPageForInsuredRate("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "COD", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuoteForInsuredQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
                    "n Services and Accessorials section when user selected Accessorials in get quote" +
                    " for insured quote", @__tags);
#line 648
this.ScenarioSetup(scenarioInfo);
#line 649
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 650
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 651
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 652
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 653
 testRunner.And("I click services and accessorials dropdown on Ship From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 654
    testRunner.And(string.Format("I select a service \'{0}\' from the Ship.From section dropdown", accessorials1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 655
 testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 656
 testRunner.And("I click services and accessorials dropdown on Ship To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 657
    testRunner.And(string.Format("I select a service \'{0}\' from the ShipTo section dropdown", accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 658
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 659
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 660
 testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 661
    testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 662
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 663
    testRunner.And("I click on save insured rate as quote link  for selected carrier on mobile screen" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 664
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 665
 testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 666
    testRunner.And(string.Format("I should be displyed with selected \'{0}\' and \'{1}\' in details", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
            "n Services and Accessorials section when user selected Accessorials in get quote" +
            " for insured quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "COD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuoteForInsuredQuote_S1()
        {
#line 648
this.VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuoteForInsuredQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "COD", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuoteForInsuredQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
                    "n Services and Accessorials section when user not selected Accessorials in get q" +
                    "uote for insured quote", @__tags);
#line 673
this.ScenarioSetup(scenarioInfo);
#line 674
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 675
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 676
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 677
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 678
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 679
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 680
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 681
 testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 682
    testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 683
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 684
  testRunner.And("I click on save insured rate as quote link  for selected carrier on mobile screen" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 685
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 686
 testRunner.Then("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 687
    testRunner.And("I should be displayed with NA in Ship From and  Ship To field  in Services and Ac" +
                    "cessorials section.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
            "n Services and Accessorials section when user not selected Accessorials in get q" +
            "uote for insured quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "COD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuoteForInsuredQuote_S1()
        {
#line 673
this.VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuoteForInsuredQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "COD", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuoteForGuaranteedQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
                    "n Services and Accessorials section when user selected Accessorials in get quote" +
                    " for guaranteed quote", @__tags);
#line 695
this.ScenarioSetup(scenarioInfo);
#line 696
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 697
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 698
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 699
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 700
 testRunner.And("I click services and accessorials dropdown on Ship From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 701
    testRunner.And(string.Format("I select a service \'{0}\' from the Ship.From section dropdown", accessorials1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 702
 testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 703
 testRunner.And("I click services and accessorials dropdown on Ship To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 704
    testRunner.And(string.Format("I select a service \'{0}\' from the ShipTo section dropdown", accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 705
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 706
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 707
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 708
 testRunner.And("I will be navigated to Guaranteed Rate carriers on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 709
    testRunner.And("I click on guaranteed save rate as quote link  for selected carrier on mobile scr" +
                    "een", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 710
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 711
 testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 712
    testRunner.And(string.Format("I should be displyed with selected \'{0}\' and \'{1}\' in details", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
            "n Services and Accessorials section when user selected Accessorials in get quote" +
            " for guaranteed quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "COD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuoteForGuaranteedQuote_S1()
        {
#line 695
this.VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuoteForGuaranteedQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "COD", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuoteForGuaranteedQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
                    "n Services and Accessorials section when user not selected Accessorials in get q" +
                    "uote for guaranteed quote", @__tags);
#line 720
 this.ScenarioSetup(scenarioInfo);
#line 721
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 722
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 723
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 724
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 725
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 726
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 727
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 728
 testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 729
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 730
    testRunner.And("I will be navigated to Guaranteed Rate carriers on mobile screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 731
    testRunner.And("I click on guaranteed save rate as quote link  for selected carrier on mobile scr" +
                    "een", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 732
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 733
 testRunner.Then("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 734
    testRunner.And("I should be displayed with NA in Ship From and  Ship To field  in Services and Ac" +
                    "cessorials section.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
            "n Services and Accessorials section when user not selected Accessorials in get q" +
            "uote for guaranteed quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTL Quote Confirmation for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17391")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLQuoteconfirmationpageformobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "COD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuoteForGuaranteedQuote_S1()
        {
#line 720
 this.VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuoteForGuaranteedQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "COD", "320", "568", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
