// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Quote.LTL.QuoteConfirmationScreen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class LTLQuoteConfiramtionPageFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "QuoteConfirmationPage.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "LTLQuoteConfiramtionPage", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "LTLQuoteConfiramtionPage")))
            {
                global::CRM.UITest.Scripts.Quote.LTL.QuoteConfirmationScreen.LTLQuoteConfiramtionPageFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyQuoteConfirmationPage(
                    string scenario, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string shipmentInformationPageHeaderName, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationCity, 
                    string destinationState, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string quantityUnit, 
                    string weightUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify quote confirmation page", @__tags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
    testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify quote confirmation page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentInformationPageHeaderName", "Get Quote (LTL)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantityUnit", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weightUnit", "LPS")]
        public virtual void VerifyQuoteConfirmationPage_S1()
        {
#line 4
this.VerifyQuoteConfirmationPage("S1", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "Get Quote (LTL)", "90001", "LOS ANGELS", "CA", "90087", "LOS ANGELS", "CA", "60", "23", "12345", "", "3", "LPS", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheFieldsOnTheQuotesConfirmationPage(
                    string scenario, 
                    string quoteConfirmationpage, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationCity, 
                    string destinationState, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string servicefieldText, 
                    string pickup_Date_Text, 
                    string request_Number_Text, 
                    string status_Text, 
                    string uploadShippingDocumentstext, 
                    string showQuoteDetails_Link, 
                    string getAnotherQuotebutton, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the fields on the quotes confirmation page", @__tags);
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
   testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
    testRunner.When("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 30
    testRunner.And(string.Format("I will be able to see \'{0}\' and name on Quote Confimation page \'{1}\'", servicefieldText, service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And(string.Format("I will be able to see Pickup field and date page header Quote confirmation page {" +
                        "0}", pickup_Date_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
    testRunner.And(string.Format("I will be able to see \'{0}\' on Quote confirmation page", request_Number_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And(string.Format("I will be able to see status \'{0}\' on Quote confirmation page", status_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And(string.Format("I will be able to see \'{0}\' field page header Quote confirmation page", uploadShippingDocumentstext), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And(string.Format("I will be able to see \'{0}\' expand/collapse link on Quote confirmation page", showQuoteDetails_Link), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("I will be able to see Dropzone on Quote confirmation page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.And(string.Format("I will be able to see GetAnotherQuotebutton \'{0}\' on Quote confirmation page", getAnotherQuotebutton), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the fields on the quotes confirmation page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpage", "Get Quote (LTL)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:servicefieldText", "SERVICE :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Pickup_Date_Text", "PICKUP :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:request_number_Text", "REQUEST NUMBER :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:status_Text", "STATUS :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UploadShippingDocumentstext", "Upload Shipping Documents")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShowQuoteDetails_link", "Show Quote Details")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetAnotherQuotebutton", "Get Another Quote")]
        public virtual void VerifyTheFieldsOnTheQuotesConfirmationPage_S1()
        {
#line 20
this.VerifyTheFieldsOnTheQuotesConfirmationPage("S1", "Get Quote (LTL)", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "LOS ANGELES", "CA", "90087", "LOS ANGELES", "CA", "50", "2", "123", "Appointment", "SERVICE :", "PICKUP :", "REQUEST NUMBER :", "STATUS :", "Upload Shipping Documents", "Show Quote Details", "Get Another Quote", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheDropZoneSectionConfirmationPage(
                    string scenario, 
                    string quoteConfirmationpage, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationCity, 
                    string destinationState, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string servicefieldText, 
                    string pickup_Date_Text, 
                    string request_Number_Text, 
                    string status_Text, 
                    string uploadShippingDocumentstext, 
                    string showQuoteDetails_Link, 
                    string getAnotherQuotebutton, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the drop zone section confirmation page", @__tags);
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
   testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
    testRunner.When("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 54
 testRunner.Then("I will be able to see Dropzone on Quote confirmation page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 55
 testRunner.Then("I will be able see email confirmation page on quote confirmation page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the drop zone section confirmation page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpage", "Get Quote (LTL)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:servicefieldText", "SERVICE :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Pickup_Date_Text", "PICKUP :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:request_number_Text", "REQUEST NUMBER :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:status_Text", "STATUS :")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UploadShippingDocumentstext", "Upload Shipping Documents")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShowQuoteDetails_link", "Show Quote Details")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetAnotherQuotebutton", "Get Another Quote")]
        public virtual void VerifyTheDropZoneSectionConfirmationPage_S1()
        {
#line 44
this.VerifyTheDropZoneSectionConfirmationPage("S1", "Get Quote (LTL)", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "LOS ANGELES", "CA", "90087", "LOS ANGELES", "CA", "50", "2", "123", "Appointment", "SERVICE :", "PICKUP :", "REQUEST NUMBER :", "STATUS :", "Upload Shipping Documents", "Show Quote Details", "Get Another Quote", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyShowQuoteDetailsLinkFunctionality(
                    string scenario, 
                    string getAnotherQuotebutton, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string shipmentInfromationHeader, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Show Quote Details link functionality", @__tags);
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.When("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 75
    testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
    testRunner.And(string.Format("Show Quote Details link should be expandedShipment information \'{0}\'", shipmentInfromationHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Show Quote Details link functionality: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetAnotherQuotebutton", "Get Another Quote button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentInfromationHeader", "SHIPMENT INFORMATION")]
        public virtual void VerifyShowQuoteDetailsLinkFunctionality_S1()
        {
#line 65
this.VerifyShowQuoteDetailsLinkFunctionality("S1", "Get Another Quote button", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "LOS ANGELES", "CA", "90087", "CA", "LOS ANGELES", "50", "3", "123", "", "SHIPMENT INFORMATION", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyCarrierNameField(
                    string scenario, 
                    string carrierName, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string carrierNameText, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Carrier Name field", @__tags);
#line 83
this.ScenarioSetup(scenarioInfo);
#line 84
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 85
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
    testRunner.When("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 93
    testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
    testRunner.And(string.Format("I will see Carrier name\'{0}\' field", carrierName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
    testRunner.And(string.Format("I will see Carrier name next to Carrier Name field \'{0}\'", carrierNameText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Carrier Name field: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CarrierName", "CARRIER NAME")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "123")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:carrierNameText", "Name")]
        public virtual void VerifyCarrierNameField_S1()
        {
#line 83
this.VerifyCarrierNameField("S1", "CARRIER NAME", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "LOS ANGELES", "CA", "90087", "CA", "LOS ANGELES", "50", "5", "123", "", "Name", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyCarrierNameFieldWhenNoCarrierAvailable(
                    string scenario, 
                    string carrierName, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Carrier Name field when no carrier available", @__tags);
#line 102
this.ScenarioSetup(scenarioInfo);
#line 103
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 104
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 106
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
 testRunner.When("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 111
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 112
    testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
    testRunner.And(string.Format("I will see Carrier name\'{0}\' field", carrierName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
    testRunner.And("I will see N/A Carrier name next to Carrier Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Carrier Name field when no carrier available: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CarrierName", "CARRIER NAME")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "99501")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "12")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        public virtual void VerifyCarrierNameFieldWhenNoCarrierAvailable_S1()
        {
#line 102
this.VerifyCarrierNameFieldWhenNoCarrierAvailable("S1", "CARRIER NAME", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "99501", "LOS ANGELES", "CA", "90087", "CA", "LOS ANGELES", "50", "3", "12", "", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyQuoteAmountFieldForStatndardRates(
                    string scenario, 
                    string quoteAmountHeader, 
                    string quoteConfirmationpageText, 
                    string amountText, 
                    string username, 
                    string password, 
                    string service, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Quote Amount field for statndard rates", @__tags);
#line 121
this.ScenarioSetup(scenarioInfo);
#line 122
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 123
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 125
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 126
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.When("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
 testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 131
 testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
    testRunner.Then(string.Format("I will see Quote Amount header\'{0}\' field", quoteAmountHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 133
    testRunner.And(string.Format("I will see Quote Amount next to Quote Amount field \'{0}\'", amountText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Quote Amount field for statndard rates: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteAmountHeader", "QUOTE AMOUNT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AmountText", "Amount")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        public virtual void VerifyQuoteAmountFieldForStatndardRates_S1()
        {
#line 121
this.VerifyQuoteAmountFieldForStatndardRates("S1", "QUOTE AMOUNT", "Quote Confirmation", "Amount", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "LOS ANGELES", "CA", "90087", "CA", "LOS ANGELES", "50", "3", "", "", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyQuoteAmountFieldForInsuredRates(
                    string scenario, 
                    string quoteAmount, 
                    string amountText, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Quote Amount field for insured rates", @__tags);
#line 141
this.ScenarioSetup(scenarioInfo);
#line 142
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 143
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 145
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.And(string.Format("I click on save insured rate as quote link  for carrier \'{0}\'", shipmentValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 151
    testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
    testRunner.Then(string.Format("I will see Quote Amount \'{0}\' field", quoteAmount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 153
    testRunner.And(string.Format("I will see Insred Quote Amount next to Quote Amount field \'{0}\'", amountText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Quote Amount field for insured rates: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteAmount", "QUOTE AMOUNT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AmountText", "Amount")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "566")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        public virtual void VerifyQuoteAmountFieldForInsuredRates_S1()
        {
#line 141
this.VerifyQuoteAmountFieldForInsuredRates("S1", "QUOTE AMOUNT", "Amount", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "LOS ANGELES", "CA", "90087", "CA", "LOS ANGELES", "50", "3", "566", "", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyQuoteAmountFieldWhenNoCarrierAvailable(
                    string scenario, 
                    string quoteAmount, 
                    string amountText, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Quote Amount field when no carrier available", @__tags);
#line 160
this.ScenarioSetup(scenarioInfo);
#line 161
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 164
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 165
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
    testRunner.When("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 169
    testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 171
    testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
    testRunner.And(string.Format("I will see Quote Amount \'{0}\' field", quoteAmount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
    testRunner.And("I will see N/A Carrier name next to Carrier Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
 testRunner.And(string.Format("I will see Insred Quote Amount next to Quote Amount field \'{0}\'", amountText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Quote Amount field when no carrier available: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteAmount", "QUOTE AMOUNT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AmountText", "Amount")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "99501")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "7")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "456")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        public virtual void VerifyQuoteAmountFieldWhenNoCarrierAvailable_S1()
        {
#line 160
this.VerifyQuoteAmountFieldWhenNoCarrierAvailable("S1", "QUOTE AMOUNT", "Amount", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "99501", "LOS ANGELES", "CA", "90087", "CA", "LOS ANGELES", "50", "7", "456", "", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyOriginLocationDetailsFieldDetails(
                    string scenario, 
                    string originLocation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string country, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Origin Location details field details", @__tags);
#line 181
this.ScenarioSetup(scenarioInfo);
#line 182
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 183
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 185
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 186
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 188
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
    testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 192
    testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
    testRunner.And(string.Format("I will see Origin location \'{0}\' field within Quote details", originLocation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
 testRunner.And(string.Format("I will see Origin Location details next to  Origin Location field \'{0}\',\'{1}\',\'{2" +
                        "}\',\'{3}\'", country, originCity, originState, originZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Origin Location details field details: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginLocation", "ORIGIN LOCATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        public virtual void VerifyOriginLocationDetailsFieldDetails_S1()
        {
#line 181
this.VerifyOriginLocationDetailsFieldDetails("S1", "ORIGIN LOCATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "USA", "90001", "LOS ANGELES", "CA", "90087", "CA", "LOS ANGELES", "50", "6", "", "", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyDestinationLocationFieldDetails(
                    string scenario, 
                    string destination, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string country, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Destination Location field details", @__tags);
#line 200
this.ScenarioSetup(scenarioInfo);
#line 201
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 202
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 204
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 205
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 206
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 207
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
    testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 211
    testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
    testRunner.And(string.Format("I will see destination\'{0}\'Location field within Quote details", destination), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
 testRunner.And(string.Format("I will see destination Location details next to  Destination Location field \'{0}\'" +
                        ",\'{1}\',\'{2}\',\'{3}\'", country, destinationCity, destinationState, destinationZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Destination Location field details: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination", "DESTINATION LOCATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        public virtual void VerifyDestinationLocationFieldDetails_S1()
        {
#line 200
this.VerifyDestinationLocationFieldDetails("S1", "DESTINATION LOCATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "USA", "90001", "LOS ANGELES", "CA", "90001", "CA", "LOS ANGELES", "50", "9", "", "", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyPickupDateFieldWithinQuoteDetails(
                    string scenario, 
                    string pickupDateHeader, 
                    string pickupDate, 
                    string username, 
                    string password, 
                    string quoteConfirmationpageText, 
                    string service, 
                    string country, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string pickupDate_Value, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Pickup Date field within Quote details", @__tags);
#line 219
this.ScenarioSetup(scenarioInfo);
#line 220
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 221
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 223
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 224
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 225
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
  testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
 testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 229
    testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
 testRunner.Then(string.Format("I will see Date header\'{0}\' field within Quote details", pickupDateHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 231
    testRunner.And(string.Format("I will see Pickup Date\'{0}\' field within Quote details", pickupDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Pickup Date field within Quote details: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PickupDateHeader", "DATES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PickupDate", "Pickup")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PickupDate_Value", "")]
        public virtual void VerifyPickupDateFieldWithinQuoteDetails_S1()
        {
#line 219
this.VerifyPickupDateFieldWithinQuoteDetails("S1", "DATES", "Pickup", "shipentry@gmail.com", "Te$t1234", "Quote Confirmation", "LTL", "USA", "90001", "LOS ANGELES", "CA", "90001", "CA", "LOS ANGELES", "50", "3", "", "", "", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyFreightInformationFieldDetails(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Freight Information field details", @__tags);
#line 239
this.ScenarioSetup(scenarioInfo);
#line 240
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 241
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 242
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 243
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 244
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 245
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 247
testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 248
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 249
testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 250
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 251
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 252
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 253
testRunner.And(string.Format("I will see Freight Information details {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8" +
                        "}", weightColumnText, classColumnText, insuredValueColumnText, insuredTypeColumnText, hazmatColumnText, classification, weight, insuredvalue, insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Freight Information field details: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        public virtual void VerifyFreightInformationFieldDetails_S1()
        {
#line 239
this.VerifyFreightInformationFieldDetails("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNAForStandaredRatesWhenUserNotEnteredTheInsuredValueOnGetQuoteLTLPage(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'N/A\' for Standared rates when u" +
                    "ser not entered the Insured value on GetQuote (LTL) page", @__tags);
#line 261
this.ScenarioSetup(scenarioInfo);
#line 262
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 263
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 265
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
testRunner.And(string.Format("I have not entered data in \'{0}\' field of Freight Description section", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 269
testRunner.And(string.Format("I have not selected any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 271
testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 272
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 273
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 275
testRunner.And(string.Format("I will be displayed with N/A under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'N/A\' for Standared rates when u" +
            "ser not entered the Insured value on GetQuote (LTL) page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "N/A")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNAForStandaredRatesWhenUserNotEnteredTheInsuredValueOnGetQuoteLTLPage_S1()
        {
#line 261
this.TestToVerifyTheInsuredTypeFieldDisplayingNAForStandaredRatesWhenUserNotEnteredTheInsuredValueOnGetQuoteLTLPage("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "60606", "33126", "50", "120", "", "", "Quote Confirmation", "FREIGHT INFORMATION", "N/A", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForStandaredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuoteLTLPage(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'New\' for Standared rates when u" +
                    "ser selected Insured Value type New on GetQuote(LTL) page", @__tags);
#line 282
this.ScenarioSetup(scenarioInfo);
#line 283
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 284
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 286
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 287
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 289
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 290
testRunner.And(string.Format("I select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 291
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 293
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 294
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 296
testRunner.And(string.Format("I will be displayed with New under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'New\' for Standared rates when u" +
            "ser selected Insured Value type New on GetQuote(LTL) page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForStandaredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuoteLTLPage_S1()
        {
#line 282
this.TestToVerifyTheInsuredTypeFieldDisplayingNewForStandaredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuoteLTLPage("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "33126", "60606", "50", "150", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForStandaredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuoteLTLPage(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'Used\' for Standared rates when " +
                    "user selected Insured Value type Used on GetQuote(LTL) page", @__tags);
#line 303
this.ScenarioSetup(scenarioInfo);
#line 304
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 305
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 306
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 307
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 308
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 309
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 310
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 311
testRunner.And(string.Format("I select Used insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 312
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 313
testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 314
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 315
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
testRunner.And(string.Format("I will be displayed with Used under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'Used\' for Standared rates when " +
            "user selected Insured Value type Used on GetQuote(LTL) page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForStandaredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuoteLTLPage_S1()
        {
#line 303
this.TestToVerifyTheInsuredTypeFieldDisplayingUsedForStandaredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuoteLTLPage("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "33126", "60606", "50", "150", "100", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "Used", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyInsuredTypeInFreightInformationSectionOnQuoteConfirmationPageForStandaredRatesWhenUserEnteredInsuredValueAndTypeOnRateResultsPage(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify Insured type in Freight information section on Quote Confirmation " +
                    "Page for standared rates when user entered Insured Value and type on Rate Result" +
                    "s Page", @__tags);
#line 324
this.ScenarioSetup(scenarioInfo);
#line 325
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 326
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 327
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 328
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 329
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 330
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 331
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 332
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 333
testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 334
testRunner.And("I clicks on Show Insured Rate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 335
testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 336
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 337
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 338
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 339
testRunner.And(string.Format("I will be displayed with the selected insuredtype under \'{0}\' in FreightInformati" +
                        "on section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify Insured type in Freight information section on Quote Confirmation " +
            "Page for standared rates when user entered Insured Value and type on Rate Result" +
            "s Page: Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        public virtual void TestToVerifyInsuredTypeInFreightInformationSectionOnQuoteConfirmationPageForStandaredRatesWhenUserEnteredInsuredValueAndTypeOnRateResultsPage_Variant0()
        {
#line 324
this.TestToVerifyInsuredTypeInFreightInformationSectionOnQuoteConfirmationPageForStandaredRatesWhenUserEnteredInsuredValueAndTypeOnRateResultsPage("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "100", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "Used", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify Insured type in Freight information section on Quote Confirmation " +
            "Page for standared rates when user entered Insured Value and type on Rate Result" +
            "s Page: Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void TestToVerifyInsuredTypeInFreightInformationSectionOnQuoteConfirmationPageForStandaredRatesWhenUserEnteredInsuredValueAndTypeOnRateResultsPage_Variant1()
        {
#line 324
this.TestToVerifyInsuredTypeInFreightInformationSectionOnQuoteConfirmationPageForStandaredRatesWhenUserEnteredInsuredValueAndTypeOnRateResultsPage("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "33126", "60606", "50", "150", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForInsuredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuoteLTLPage(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'New\' for Insured rates when use" +
                    "r selected Insured Value type New on GetQuote(LTL) page", @__tags);
#line 347
this.ScenarioSetup(scenarioInfo);
#line 348
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 349
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 351
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 352
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
testRunner.And(string.Format("I select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 356
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 357
testRunner.And("I click on save insured rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 358
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 359
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 360
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 361
testRunner.And(string.Format("I will be displayed with New under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'New\' for Insured rates when use" +
            "r selected Insured Value type New on GetQuote(LTL) page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForInsuredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuoteLTLPage_S1()
        {
#line 347
this.TestToVerifyTheInsuredTypeFieldDisplayingNewForInsuredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuoteLTLPage("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForInsuredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuoteLTLPage(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'Used\' for Insured rates when us" +
                    "er selected Insured Value type Used on GetQuote(LTL) page", @__tags);
#line 368
this.ScenarioSetup(scenarioInfo);
#line 369
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 370
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 371
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 372
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 373
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 374
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 375
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 376
testRunner.And(string.Format("I select Used insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 377
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 378
testRunner.And("I click on save insured rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 379
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 380
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 381
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 382
testRunner.And(string.Format("I will be displayed with Used under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'Used\' for Insured rates when us" +
            "er selected Insured Value type Used on GetQuote(LTL) page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForInsuredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuoteLTLPage_S1()
        {
#line 368
this.TestToVerifyTheInsuredTypeFieldDisplayingUsedForInsuredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuoteLTLPage("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "100", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "Used", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForGuaranteedInsuredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuoteLTLPage(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'New\' for Guaranteed Insured rat" +
                    "es when user selected Insured Value type New on GetQuote(LTL) page", @__tags);
#line 389
this.ScenarioSetup(scenarioInfo);
#line 390
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 391
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 393
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 394
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 395
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 397
testRunner.And(string.Format("I select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 398
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 399
testRunner.And("I will be navigated to Guaranteed Rate carriers grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 400
testRunner.And("I click on guaranteed save insured rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 401
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 402
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 403
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 404
testRunner.And(string.Format("I will be displayed with New under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'New\' for Guaranteed Insured rat" +
            "es when user selected Insured Value type New on GetQuote(LTL) page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "90")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForGuaranteedInsuredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuoteLTLPage_S1()
        {
#line 389
this.TestToVerifyTheInsuredTypeFieldDisplayingNewForGuaranteedInsuredRatesWhenUserSelectedInsuredValueTypeNewOnGetQuoteLTLPage("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "90", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForGuaranteedInsuredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuoteLTLPage(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'Used\' for Guaranteed Insured ra" +
                    "tes when user selected Insured Value type Used on GetQuote(LTL) page", @__tags);
#line 411
this.ScenarioSetup(scenarioInfo);
#line 412
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 413
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 414
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 415
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 416
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 417
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 418
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 419
testRunner.And(string.Format("I select Used insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 420
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 421
testRunner.And("I will be navigated to Guaranteed Rate carriers grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 422
testRunner.And("I click on guaranteed save insured rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 423
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 424
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 425
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 426
testRunner.And(string.Format("I will be displayed with Used under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'Used\' for Guaranteed Insured ra" +
            "tes when user selected Insured Value type Used on GetQuote(LTL) page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "90")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForGuaranteedInsuredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuoteLTLPage_S1()
        {
#line 411
this.TestToVerifyTheInsuredTypeFieldDisplayingUsedForGuaranteedInsuredRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuoteLTLPage("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "90", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "Used", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNAForGuaranteedStandardRatesWhenUserNotEnteredTheInsuredValueOnGetQuoteLTLPage(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'N/A\' for Guaranteed standard ra" +
                    "tes when user not entered the Insured value on GetQuote (LTL) page", @__tags);
#line 433
this.ScenarioSetup(scenarioInfo);
#line 434
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 435
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 436
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 437
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 438
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 439
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 440
testRunner.And(string.Format("I have not entered data in \'{0}\' field of Freight Description section", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 441
testRunner.And(string.Format("I have not selected any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 442
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 443
testRunner.And("I will be navigated to Guaranteed Rate carriers grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 444
testRunner.And("I click on guaranteed save rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 445
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 446
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 447
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 448
testRunner.And(string.Format("I will be displayed with N/A under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'N/A\' for Guaranteed standard ra" +
            "tes when user not entered the Insured value on GetQuote (LTL) page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "N/A")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNAForGuaranteedStandardRatesWhenUserNotEnteredTheInsuredValueOnGetQuoteLTLPage_S1()
        {
#line 433
this.TestToVerifyTheInsuredTypeFieldDisplayingNAForGuaranteedStandardRatesWhenUserNotEnteredTheInsuredValueOnGetQuoteLTLPage("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "", "", "Quote Confirmation", "FREIGHT INFORMATION", "N/A", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForGuaranteedStandardRatesWhenUserSelectedInsuredValueTypeNewOnGetQuoteLTLPage(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'New\' for Guaranteed Standard ra" +
                    "tes when user selected Insured Value type New on GetQuote(LTL) page", @__tags);
#line 455
this.ScenarioSetup(scenarioInfo);
#line 456
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 457
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 458
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 459
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 460
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 461
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 462
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 463
testRunner.And(string.Format("I select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 464
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 465
testRunner.And("I will be navigated to Guaranteed Rate carriers grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 466
testRunner.And("I click on guaranteed save rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 467
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 468
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 469
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 470
testRunner.And(string.Format("I will be displayed with New under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'New\' for Guaranteed Standard ra" +
            "tes when user selected Insured Value type New on GetQuote(LTL) page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingNewForGuaranteedStandardRatesWhenUserSelectedInsuredValueTypeNewOnGetQuoteLTLPage_S1()
        {
#line 455
this.TestToVerifyTheInsuredTypeFieldDisplayingNewForGuaranteedStandardRatesWhenUserSelectedInsuredValueTypeNewOnGetQuoteLTLPage("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForGuaranteedStandardRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuoteLTLPage(string scenario, string username, string password, string service, string sFZiporpostal, string sTZiporPostal, string classification, string weight, string insuredvalue, string insuredvalueType, string quoteConfirmationpageText, string freightInformation, string insuredType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type field displaying \'Used\' for Guaranteed standard r" +
                    "ates when user selected Insured Value type Used on GetQuote(LTL) page", @__tags);
#line 477
this.ScenarioSetup(scenarioInfo);
#line 478
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 479
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 480
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 481
testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 482
testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 483
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 484
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 485
testRunner.And(string.Format("I select Used insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 486
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 487
testRunner.And("I will be navigated to Guaranteed Rate carriers grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 488
testRunner.And("I click on guaranteed save rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 489
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 490
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 491
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 492
testRunner.And(string.Format("I will be displayed with Used under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type field displaying \'Used\' for Guaranteed standard r" +
            "ates when user selected Insured Value type Used on GetQuote(LTL) page: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        public virtual void TestToVerifyTheInsuredTypeFieldDisplayingUsedForGuaranteedStandardRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuoteLTLPage_S1()
        {
#line 477
this.TestToVerifyTheInsuredTypeFieldDisplayingUsedForGuaranteedStandardRatesWhenUserSelectedInsuredValueTypeUsedOnGetQuoteLTLPage("s1", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "150", "100", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "Used", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeNAFieldDisplayingOnConfirmationPageWhenNoRateResults(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string originCity, 
                    string originProvince, 
                    string originPostal, 
                    string destinationCity, 
                    string destinationProvince, 
                    string destinationPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type N/A field displaying on Confirmation page when no" +
                    " rate results", @__tags);
#line 499
this.ScenarioSetup(scenarioInfo);
#line 500
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 501
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 502
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 503
testRunner.And("I select Canada Country from origin country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 504
testRunner.And(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originPostal, originCity, originProvince), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 505
testRunner.And("I select Canada Country from destination country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 506
testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationProvince, destinationCity, destinationPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 507
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 508
testRunner.And(string.Format("I have not entered data in \'{0}\' field of Freight Description section", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 509
testRunner.And(string.Format("I have not selected any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 510
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 511
testRunner.And("I click on save your quote on results page when no rates", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 512
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 513
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 514
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 515
testRunner.And(string.Format("I will be displayed with N/A under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type N/A field displaying on Confirmation page when no" +
            " rate results: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Acton")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginProvince", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginPostal", "L7J 0A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Acton")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationProvince", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationPostal", "L7J 0A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "N/A")]
        public virtual void TestToVerifyTheInsuredTypeNAFieldDisplayingOnConfirmationPageWhenNoRateResults_S1()
        {
#line 499
this.TestToVerifyTheInsuredTypeNAFieldDisplayingOnConfirmationPageWhenNoRateResults("s1", "nat@extuser.com", "Te$t1234", "LTL", "Acton", "ON", "L7J 0A1", "Acton", "ON", "L7J 0A1", "50", "120", "", "", "Quote Confirmation", "FREIGHT INFORMATION", "N/A", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeNewFieldDisplayingOnConfirmationPageWhenNoRateResults(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string originCity, 
                    string originProvince, 
                    string originPostal, 
                    string destinationCity, 
                    string destinationProvince, 
                    string destinationPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type New field displaying on Confirmation page when no" +
                    " rate results", @__tags);
#line 522
this.ScenarioSetup(scenarioInfo);
#line 523
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 524
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 525
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 526
testRunner.And("I select Canada Country from origin country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 527
testRunner.And(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originPostal, originCity, originProvince), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 528
testRunner.And("I select Canada Country from destination country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 529
testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationProvince, destinationCity, destinationPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 530
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 531
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 532
testRunner.And(string.Format("I select New insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 533
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 534
testRunner.And("I click on save your quote on results page when no rates", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 535
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 536
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 537
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 538
testRunner.And(string.Format("I will be displayed with New under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type New field displaying on Confirmation page when no" +
            " rate results: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Acton")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginProvince", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginPostal", "L7J 0A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Acton")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationProvince", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationPostal", "L7J 0A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "New")]
        public virtual void TestToVerifyTheInsuredTypeNewFieldDisplayingOnConfirmationPageWhenNoRateResults_S1()
        {
#line 522
this.TestToVerifyTheInsuredTypeNewFieldDisplayingOnConfirmationPageWhenNoRateResults("s1", "nat@extuser.com", "Te$t1234", "LTL", "Acton", "ON", "L7J 0A1", "Acton", "ON", "L7J 0A1", "50", "120", "100", "New", "Quote Confirmation", "FREIGHT INFORMATION", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void TestToVerifyTheInsuredTypeUsedFieldDisplayingOnConfirmationPageWhenNoRateResults(
                    string scenario, 
                    string username, 
                    string password, 
                    string service, 
                    string originCity, 
                    string originProvince, 
                    string originPostal, 
                    string destinationCity, 
                    string destinationProvince, 
                    string destinationPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string quoteConfirmationpageText, 
                    string freightInformation, 
                    string insuredType, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test to verify the Insured type Used field displaying on Confirmation page when n" +
                    "o rate results", @__tags);
#line 545
this.ScenarioSetup(scenarioInfo);
#line 546
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 547
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 548
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 549
testRunner.And("I select Canada Country from origin country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 550
testRunner.And(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originPostal, originCity, originProvince), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 551
testRunner.And("I select Canada Country from destination country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 552
testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationProvince, destinationCity, destinationPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 553
testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 554
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 555
testRunner.And(string.Format("I select Used insured type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 556
testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 557
testRunner.And("I click on save your quote on results page when no rates", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 558
testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 559
testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 560
testRunner.And(string.Format("I will see FreightInformation \'{0}\' field within Quote details", freightInformation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 561
testRunner.And(string.Format("I will be displayed with Used under \'{0}\' in FreightInformation section", insuredType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Test to verify the Insured type Used field displaying on Confirmation page when n" +
            "o rate results: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Acton")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginProvince", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginPostal", "L7J 0A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Acton")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationProvince", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationPostal", "L7J 0A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "Used")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredType", "Used")]
        public virtual void TestToVerifyTheInsuredTypeUsedFieldDisplayingOnConfirmationPageWhenNoRateResults_S1()
        {
#line 545
this.TestToVerifyTheInsuredTypeUsedFieldDisplayingOnConfirmationPageWhenNoRateResults("S1", "nat@extuser.com", "Te$t1234", "LTL", "Acton", "ON", "L7J 0A1", "Acton", "ON", "L7J 0A1", "50", "120", "100", "Used", "Quote Confirmation", "FREIGHT INFORMATION", "Used", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationOfServicesAndAccessorialsSectionForShipFromAndShipToFieldsOnConfimationPageForStandardRate(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification of Services and Accessorials section for \"Ship From\" and \"Ship To\" f" +
                    "ields on confimation page for standard rate", @__tags);
#line 571
this.ScenarioSetup(scenarioInfo);
#line 572
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 573
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 574
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 575
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 576
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 577
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 578
   testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 579
    testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 580
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 581
    testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 582
    testRunner.And("I should be displayed with Ship From and Ship To fields under the Services and Ac" +
                    "cessorials section not Services/Accessorials label", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification of Services and Accessorials section for \"Ship From\" and \"Ship To\" f" +
            "ields on confimation page for standard rate: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        public virtual void VerificationOfServicesAndAccessorialsSectionForShipFromAndShipToFieldsOnConfimationPageForStandardRate_S1()
        {
#line 571
this.VerificationOfServicesAndAccessorialsSectionForShipFromAndShipToFieldsOnConfimationPageForStandardRate("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromInServicesAndAccessorialsWhenUserSelectedAccessorialsInGetQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of  \"Ship From\"  in Services an" +
                    "d Accessorials when user selected Accessorials in get quote", @__tags);
#line 591
this.ScenarioSetup(scenarioInfo);
#line 592
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 593
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 594
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 595
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 596
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 597
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 598
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 599
   testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 600
    testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 601
    testRunner.And("I click services and accessorials dropdown on Ship From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 602
    testRunner.And(string.Format("I select a service \'{0}\' from the Ship.From section dropdown", accessorials1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 603
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 604
    testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 605
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 606
 testRunner.Then("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 607
    testRunner.And(string.Format("I should be displayed with selected \'{0}\' Services", accessorials1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 608
 testRunner.And("I should display with NA in ship to field in Service and Accessorials section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of  \"Ship From\"  in Services an" +
            "d Accessorials when user selected Accessorials in get quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromInServicesAndAccessorialsWhenUserSelectedAccessorialsInGetQuote_S1()
        {
#line 591
this.VerificationForServicesAndAccessorialsValuesOfShipFromInServicesAndAccessorialsWhenUserSelectedAccessorialsInGetQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of  \"Ship To:\" in Services and " +
                    "Accessorials section when user selected Accessorials in get quote", @__tags);
#line 615
this.ScenarioSetup(scenarioInfo);
#line 616
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 617
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 618
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 619
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 620
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 621
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 622
    testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 623
    testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 624
 testRunner.And("I click services and accessorials dropdown on Ship To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 625
    testRunner.And(string.Format("I select a service \'{0}\' from the Ship.To section dropdown", accessorials1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 626
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 627
    testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 628
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 629
 testRunner.Then("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 630
    testRunner.And(string.Format("I should be displayed with selected to \'{0}\' Services", accessorials1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 631
 testRunner.And("I should display with NA in Ship From field in Services and Accessorials section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of  \"Ship To:\" in Services and " +
            "Accessorials section when user selected Accessorials in get quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuote_S1()
        {
#line 615
this.VerificationForServicesAndAccessorialsValuesOfShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
                    "n Services and Accessorials section when user selected Accessorials in get quote" +
                    "", @__tags);
#line 638
this.ScenarioSetup(scenarioInfo);
#line 639
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 640
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 641
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 642
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 643
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 644
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 645
 testRunner.And("I click services and accessorials dropdown on Ship From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 646
    testRunner.And(string.Format("I select a service \'{0}\' from the Ship.From section dropdown", accessorials1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 647
    testRunner.And("I click services and accessorials dropdown on Ship To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 648
    testRunner.And(string.Format("I select a service \'{0}\' from the ShipTo section dropdown", accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 649
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 650
    testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 651
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 652
 testRunner.Then("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 653
    testRunner.And(string.Format("I should be displyed with selected \'{0}\' and \'{1}\' in details", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
            "n Services and Accessorials section when user selected Accessorials in get quote" +
            ": s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "COD")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuote_S1()
        {
#line 638
this.VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "COD", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuote(
                    string scenario, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string shipmentInformationPageHeaderName, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string originState, 
                    string destinationZip, 
                    string destinationCity, 
                    string destinationState, 
                    string classification, 
                    string weight, 
                    string additionalService, 
                    string quantityUnit, 
                    string weightUnit, 
                    string shipFrom, 
                    string shipTo, 
                    string nA, 
                    string accessorials1, 
                    string accessorials2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
                    "n Services and Accessorials section when user not selected Accessorials in get q" +
                    "uote", @__tags);
#line 660
this.ScenarioSetup(scenarioInfo);
#line 661
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 662
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 663
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 664
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 665
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 666
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 667
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 668
    testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 669
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 670
 testRunner.Then("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 671
    testRunner.And("I should be displayed with NA in Ship From and  Ship To field  in Services and Ac" +
                    "cessorials section.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
            "n Services and Accessorials section when user not selected Accessorials in get q" +
            "uote: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentInformationPageHeaderName", "Get Quote (LTL)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "23")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:quantityUnit", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weightUnit", "LPS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Ship From", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Ship To", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:N/A", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "Appointment")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuote_S1()
        {
#line 660
this.VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuote("S1", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "Get Quote (LTL)", "90001", "60606", "CA", "90087", "LOS ANGELS", "CA", "60", "23", "", "3", "LPS", "", "", "", "Appointment", "Appointment", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationOfServicesAccessorialsInTheServicesAndAccessorialsSectionOnConfirmationPageForInsuredRate(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification of Services/Accessorials in the Services and Accessorials section  o" +
                    "n confirmation page for insured rate", @__tags);
#line 679
this.ScenarioSetup(scenarioInfo);
#line 680
   testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 681
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 682
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 683
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 684
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 685
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 686
   testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 687
    testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 688
 testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 689
    testRunner.And("I click on save insured rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 690
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 691
    testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 692
    testRunner.And("I should be displayed with Ship From and Ship To fields under the Services and Ac" +
                    "cessorials section not Services/Accessorials label", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification of Services/Accessorials in the Services and Accessorials section  o" +
            "n confirmation page for insured rate: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        public virtual void VerificationOfServicesAccessorialsInTheServicesAndAccessorialsSectionOnConfirmationPageForInsuredRate_S1()
        {
#line 679
this.VerificationOfServicesAccessorialsInTheServicesAndAccessorialsSectionOnConfirmationPageForInsuredRate("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuoteForInsuredQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
                    "n Services and Accessorials section when user selected Accessorials in get quote" +
                    " for insured quote", @__tags);
#line 699
this.ScenarioSetup(scenarioInfo);
#line 700
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 701
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 702
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 703
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 704
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 705
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 706
 testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 707
    testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 708
 testRunner.And("I click services and accessorials dropdown on Ship From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 709
    testRunner.And(string.Format("I select a service \'{0}\' from the Ship.From section dropdown", accessorials1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 710
    testRunner.And("I click services and accessorials dropdown on Ship To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 711
    testRunner.And(string.Format("I select a service \'{0}\' from the ShipTo section dropdown", accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 712
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 713
    testRunner.And("I click on save insured rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 714
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 715
 testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 716
    testRunner.And(string.Format("I should be displyed with selected \'{0}\' and \'{1}\' in details", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
            "n Services and Accessorials section when user selected Accessorials in get quote" +
            " for insured quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "COD")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuoteForInsuredQuote_S1()
        {
#line 699
this.VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuoteForInsuredQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "COD", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuoteForInsuredQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
                    "n Services and Accessorials section when user not selected Accessorials in get q" +
                    "uote for insured quote", @__tags);
#line 723
this.ScenarioSetup(scenarioInfo);
#line 724
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 725
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 726
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 727
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 728
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 729
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 730
 testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 731
    testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 732
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 733
    testRunner.And("I click on save insured rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 734
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 735
 testRunner.Then("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 736
    testRunner.And("I should be displayed with NA in Ship From and  Ship To field  in Services and Ac" +
                    "cessorials section.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
            "n Services and Accessorials section when user not selected Accessorials in get q" +
            "uote for insured quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuoteForInsuredQuote_S1()
        {
#line 723
this.VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuoteForInsuredQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "", "", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromInServicesAndAccessorialsWhenUserMultipleSelectedAccessorialsInGetQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of  \"Ship From\"  in Services an" +
                    "d Accessorials when user multiple selected Accessorials in get quote", @__tags);
#line 743
this.ScenarioSetup(scenarioInfo);
#line 744
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 745
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 746
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 747
 testRunner.And("I click services and accessorials dropdown on Ship From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 748
 testRunner.Then(string.Format("I should be able to select services \'{0}\' and \'{1}\' from Ship.From Section", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 749
    testRunner.When(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 750
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 751
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 752
   testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 753
    testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 754
    testRunner.When("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 755
    testRunner.And("I click on save rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 756
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 757
 testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 758
    testRunner.And(string.Format("I should be displayed with selected \'{0}\' and {1} Services", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 759
 testRunner.And("I should display with NA in ship to field in Service and Accessorials section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of  \"Ship From\"  in Services an" +
            "d Accessorials when user multiple selected Accessorials in get quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "Construction Site")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromInServicesAndAccessorialsWhenUserMultipleSelectedAccessorialsInGetQuote_S1()
        {
#line 743
this.VerificationForServicesAndAccessorialsValuesOfShipFromInServicesAndAccessorialsWhenUserMultipleSelectedAccessorialsInGetQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "Construction Site", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipToInServicesAndAccessorialsWhenUserMultipleSelectedAccessorialsInGetQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of  \"Ship To\"  in Services and " +
                    "Accessorials when user multiple selected Accessorials in get quote", @__tags);
#line 766
this.ScenarioSetup(scenarioInfo);
#line 767
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 768
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 769
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 770
 testRunner.And("I click services and accessorials dropdown on Ship To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 771
 testRunner.Then(string.Format("I should be able to select services \'{0}\' and \'{1}\' from Ship.To Section", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 772
    testRunner.When(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 773
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 774
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 775
   testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 776
    testRunner.And(string.Format("I select any of the type from \'{0}\' dropdown", insuredvalueType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 777
    testRunner.When("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 778
    testRunner.And("I click on save rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 779
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 780
 testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 781
    testRunner.And(string.Format("I should be displayed with selected to \'{0}\' and \'{1}\' Service", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 782
 testRunner.And("I should display with NA in Ship From field in Services and Accessorials section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of  \"Ship To\"  in Services and " +
            "Accessorials when user multiple selected Accessorials in get quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "Construction Site")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipToInServicesAndAccessorialsWhenUserMultipleSelectedAccessorialsInGetQuote_S1()
        {
#line 766
this.VerificationForServicesAndAccessorialsValuesOfShipToInServicesAndAccessorialsWhenUserMultipleSelectedAccessorialsInGetQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "Construction Site", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedMultipleAccessorialsInGetQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string accessorials3, 
                    string accessorials4, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
                    "n Services and Accessorials section when user selected multiple Accessorials in " +
                    "get quote", @__tags);
#line 789
this.ScenarioSetup(scenarioInfo);
#line 790
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 791
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 792
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 793
 testRunner.And("I click services and accessorials dropdown on Ship From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 794
    testRunner.Then(string.Format("I should be able to select services \'{0}\' and \'{1}\' from Ship.From Section", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 795
 testRunner.When(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 796
 testRunner.And("I click services and accessorials dropdown on Ship To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 797
    testRunner.Then(string.Format("I should be able to select services \'{0}\' and \'{1}\' from Ship.To Section", accessorials3, accessorials4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 798
    testRunner.When(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 799
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 800
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 801
    testRunner.And("I click on save rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 802
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 803
 testRunner.Then("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 804
    testRunner.And(string.Format("I should be displyed with selected all \'{0}\' and \'{1}\' and \'{2}\' and \'{3}\' in det" +
                        "ails", accessorials1, accessorials2, accessorials3, accessorials4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
            "n Services and Accessorials section when user selected multiple Accessorials in " +
            "get quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "Construction Site")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials3", "COD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials4", "Convention-Exhibition Site Delivery")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedMultipleAccessorialsInGetQuote_S1()
        {
#line 789
this.VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedMultipleAccessorialsInGetQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "Construction Site", "COD", "Convention-Exhibition Site Delivery", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuoteForGuaranteedQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
                    "n Services and Accessorials section when user selected Accessorials in get quote" +
                    " for guaranteed quote", @__tags);
#line 810
this.ScenarioSetup(scenarioInfo);
#line 811
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 812
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 813
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 814
 testRunner.And("I click services and accessorials dropdown on Ship From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 815
    testRunner.And(string.Format("I select a service \'{0}\' from the Ship.From section dropdown", accessorials1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 816
 testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 817
 testRunner.And("I click services and accessorials dropdown on Ship To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 818
    testRunner.And(string.Format("I select a service \'{0}\' from the ShipTo section dropdown", accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 819
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 820
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 821
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 822
    testRunner.And("I will be navigated to Guaranteed Rate carriers grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 823
    testRunner.And("I click on guaranteed save rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 824
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 825
 testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 826
    testRunner.And(string.Format("I should be displyed with selected \'{0}\' and \'{1}\' in details", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
            "n Services and Accessorials section when user selected Accessorials in get quote" +
            " for guaranteed quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "COD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuoteForGuaranteedQuote_S1()
        {
#line 810
this.VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserSelectedAccessorialsInGetQuoteForGuaranteedQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "COD", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuoteForGuaranteedQuote(
                    string scenario, 
                    string freightInformation, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string sFZiporpostal, 
                    string sTZiporPostal, 
                    string classification, 
                    string weight, 
                    string insuredvalue, 
                    string insuredvalueType, 
                    string weightColumnText, 
                    string classColumnText, 
                    string insuredValueColumnText, 
                    string insuredTypeColumnText, 
                    string hazmatColumnText, 
                    string accessorials1, 
                    string accessorials2, 
                    string windowWidth, 
                    string windowHeight, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
                    "n Services and Accessorials section when user not selected Accessorials in get q" +
                    "uote for guaranteed quote", @__tags);
#line 833
 this.ScenarioSetup(scenarioInfo);
#line 834
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 835
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 836
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 837
    testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", sFZiporpostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 838
    testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", sTZiporPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 839
    testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 840
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 841
 testRunner.And("I navigating to results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 842
    testRunner.And("I will be navigated to Guaranteed Rate carriers grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 843
    testRunner.And("I click on guaranteed save rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 844
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 845
 testRunner.Then("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 846
    testRunner.And("I should be displayed with NA in Ship From and  Ship To field  in Services and Ac" +
                    "cessorials section.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verification for Services and Accessorials values of \"Ship From\" and  \"Ship To\" i" +
            "n Services and Accessorials section when user not selected Accessorials in get q" +
            "uote for guaranteed quote: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FreightInformation", "FREIGHT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SFZiporpostal", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:STZiporPostal", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:weight", "120")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredvalueType", "New")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WeightColumnText", "WT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ClassColumnText", "CLASS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredValueColumnText", "VALUE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InsuredTypeColumnText", "INSURED TYPE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HazmatColumnText", "HAZMAT?")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "COD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuoteForGuaranteedQuote_S1()
        {
#line 833
 this.VerificationForServicesAndAccessorialsValuesOfShipFromAndShipToInServicesAndAccessorialsSectionWhenUserNotSelectedAccessorialsInGetQuoteForGuaranteedQuote("s1", "FREIGHT INFORMATION", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "90001", "60606", "50", "120", "100", "New", "WT", "CLASS", "VALUE", "INSURED TYPE", "HAZMAT?", "Appointment", "COD", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyCollapseTheShowQuoteDetailsLinkFunctionality(
                    string scenario, 
                    string username, 
                    string password, 
                    string quoteConfirmationpageText, 
                    string service, 
                    string country, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationCity, 
                    string destinationState, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify collapse the Show Quote Details link functionality", @__tags);
#line 858
this.ScenarioSetup(scenarioInfo);
#line 859
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 860
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 861
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 862
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 863
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 864
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 865
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 866
    testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 867
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 868
    testRunner.When("I cick on Hide Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 869
    testRunner.Then("The shipment information will be hidden", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify collapse the Show Quote Details link functionality: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        public virtual void VerifyCollapseTheShowQuoteDetailsLinkFunctionality_S1()
        {
#line 858
this.VerifyCollapseTheShowQuoteDetailsLinkFunctionality("S1", "shipentry@gmail.com", "Te$t1234", "Quote Confirmation", "LTL", "USA", "90001", "LOS ANGELES", "CA", "90087", "LOS ANGELES", "CA", "50", "8", "", "", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyGetAnotherQuoteButtonAndItsFunctionality(
                    string scenario, 
                    string getAnotherQuote, 
                    string getQuoteTilePage, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string country, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Get Another Quote button and its functionality", @__tags);
#line 876
this.ScenarioSetup(scenarioInfo);
#line 877
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 878
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 879
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 880
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 881
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 882
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 883
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 885
    testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 886
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 887
   testRunner.Then(string.Format("I will see Get Another Quote\'{0}\' button", getAnotherQuote), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 888
    testRunner.And("I click on the Get Another Quote button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 889
    testRunner.And(string.Format("I will return to the Service Tile selection screen in the rate request process \'{" +
                        "0}\'", getQuoteTilePage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Get Another Quote button and its functionality: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetAnotherQuote", "Get Another Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetQuoteTilePage", "Get Quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "7")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        public virtual void VerifyGetAnotherQuoteButtonAndItsFunctionality_S1()
        {
#line 876
this.VerifyGetAnotherQuoteButtonAndItsFunctionality("S1", "Get Another Quote", "Get Quote", "Quote Confirmation", "shipentry@gmail.com", "Te$t1234", "LTL", "USA", "90001", "LOS ANGELES", "CA", "90087", "CA", "LOS ANGELES", "50", "7", "", "", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyBackToQuoteListButtonAndItsFunctionality(
                    string scenario, 
                    string backtoQuoteList, 
                    string username, 
                    string password, 
                    string quoteListHeader, 
                    string quoteConfirmationpageText, 
                    string service, 
                    string country, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationState, 
                    string destinationCity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Back to Quote List button and its functionality", @__tags);
#line 899
this.ScenarioSetup(scenarioInfo);
#line 900
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 901
    testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 902
    testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 903
    testRunner.When(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 904
    testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 905
    testRunner.And(string.Format("I enter valid data in Item information section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 906
    testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 908
    testRunner.And("I click on save rate as quote link  for selected carrier in results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 909
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 910
   testRunner.Then(string.Format("I will see Back To Quote List button\'{0}\' button", backtoQuoteList), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 911
    testRunner.And("I click on the Back to Quote List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 912
    testRunner.And(string.Format("I will return to the Quote list page of legacy application \'{0}\',\'<App_Url>\'", quoteListHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify Back to Quote List button and its functionality: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LTLQuoteConfiramtionPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BacktoQuoteList", "Back To Quote List")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "shipentry@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteListHeader", "Quotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country", "USA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "90001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "LOS ANGELES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "")]
        public virtual void VerifyBackToQuoteListButtonAndItsFunctionality_S1()
        {
#line 899
this.VerifyBackToQuoteListButtonAndItsFunctionality("S1", "Back To Quote List", "shipentry@gmail.com", "Te$t1234", "Quotes", "Quote Confirmation", "LTL", "USA", "90001", "LOS ANGELES", "CA", "90001", "CA", "LOS ANGELES", "50", "5", "", "", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
