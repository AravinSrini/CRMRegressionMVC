// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Quote.LTL.ShipmentInformationScreen.AddQuantityParameters
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class RateRequest_AddQuantityParametersinLTLquoteprocess_DesktopFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "RateRequest-AddQuantityParametersinLTLquoteprocess_Desktop.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "RateRequest-AddQuantityParametersinLTLquoteprocess_Desktop", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint60",
                        "18324"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "RateRequest-AddQuantityParametersinLTLquoteprocess_Desktop")))
            {
                global::CRM.UITest.Scripts.Quote.LTL.ShipmentInformationScreen.AddQuantityParameters.RateRequest_AddQuantityParametersinLTLquoteprocess_DesktopFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyTheQuantityFieldPresentInLTLShipmentInformationPage(string scenario, string username, string password, string service, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the quantity field present in LTL shipment information page", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("I should be able to see quantity field in the  - Shipment Infomation page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the quantity field present in LTL shipment information page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequest-AddQuantityParametersinLTLquoteprocess_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18324")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        public virtual void VerifyTheQuantityFieldPresentInLTLShipmentInformationPage_S1()
        {
#line 5
this.VerifyTheQuantityFieldPresentInLTLShipmentInformationPage("S1", "nat@extuser.com", "Te$t1234", "LTL", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyByDefaultSkidsIsSelectedInTheQuantityUOMDropDownList(string scenario, string username, string password, string service, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify by default Skids is selected in the Quantity UOM drop down list", @__tags);
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.Then("Verify the skids is selected in the Quantity UOM drop down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify by default Skids is selected in the Quantity UOM drop down list: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequest-AddQuantityParametersinLTLquoteprocess_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18324")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        public virtual void VerifyByDefaultSkidsIsSelectedInTheQuantityUOMDropDownList_S1()
        {
#line 16
this.VerifyByDefaultSkidsIsSelectedInTheQuantityUOMDropDownList("S1", "nat@extuser.com", "Te$t1234", "LTL", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyUserIsAbleToEnterOnlyNonNegativeIntegerValueInQuantityField(string scenario, string username, string password, string service, string negativevalue, string positiveValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify user is able to enter only non negative Integer value in Quantity field", @__tags);
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.And(string.Format("I enter the \'{0}\' other than positive integer value", positiveValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.Then(string.Format("Verify that quantity field should not accept any negative integer \'{0}\'", negativevalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify user is able to enter only non negative Integer value in Quantity field: S" +
            "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequest-AddQuantityParametersinLTLquoteprocess_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18324")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Negativevalue", "-1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PositiveValue", "4")]
        public virtual void VerifyUserIsAbleToEnterOnlyNonNegativeIntegerValueInQuantityField_S1()
        {
#line 27
this.VerifyUserIsAbleToEnterOnlyNonNegativeIntegerValueInQuantityField("S1", "nat", "Te$t1234", "LTL", "-1", "4", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheOptionsPresentInQuantityUnitFieldDropdownList(string scenario, string username, string password, string service, string options, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the options present in quantity unit field dropdown list", @__tags);
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
    testRunner.And("I click on  Quantity field dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
    testRunner.Then(string.Format("all the unit field \'{0}\' should be displayed in quantity unit field dropdown list" +
                        "", options), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the options present in quantity unit field dropdown list: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequest-AddQuantityParametersinLTLquoteprocess_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18324")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:options", "Skids,Bags,Bundles,Boxes,Cabinets,Cans,Cases,Crates,Cartons,Cylinders,Drums,Pails" +
            ",Pieces,Pallets,Flat Racks,Reels,Rolls,Slip Sheets,Stacks,Totes")]
        public virtual void VerifyTheOptionsPresentInQuantityUnitFieldDropdownList_S1()
        {
#line 39
this.VerifyTheOptionsPresentInQuantityUnitFieldDropdownList("S1", "nat@extuser.com", "Te$t1234", "LTL", "Skids,Bags,Bundles,Boxes,Cabinets,Cans,Cases,Crates,Cartons,Cylinders,Drums,Pails" +
                    ",Pieces,Pallets,Flat Racks,Reels,Rolls,Slip Sheets,Stacks,Totes", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheWarningMessageWhenUserEntersGreaterThanSixInQuantityField(string scenario, string username, string password, string service, string quantityfield, string quantityValue, string warningmessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the warning message when user enters greater than six in quantity field", @__tags);
#line 52
this.ScenarioSetup(scenarioInfo);
#line 53
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
 testRunner.When(string.Format("I enter greater than six {0} in quantity field", quantityValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.And(string.Format("I select \'{0}\' from UOM dropdown field", quantityfield), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.Then(string.Format("Verify the \'{0}\' message for the quantity field", warningmessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the warning message when user enters greater than six in quantity field: S" +
            "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequest-AddQuantityParametersinLTLquoteprocess_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18324")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantityfield", "Skids")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityValue", "7")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:warningmessage", "The entered quantity exceeds the LTL threshold of 6 standard pallets or skids. An" +
            " additional carrier fee may apply. Please contact your local operations represen" +
            "tative for more accurate pricing information.")]
        public virtual void VerifyTheWarningMessageWhenUserEntersGreaterThanSixInQuantityField_S1()
        {
#line 52
this.VerifyTheWarningMessageWhenUserEntersGreaterThanSixInQuantityField("S1", "nat@extuser.com", "Te$t1234", "LTL", "Skids", "7", "The entered quantity exceeds the LTL threshold of 6 standard pallets or skids. An" +
                    " additional carrier fee may apply. Please contact your local operations represen" +
                    "tative for more accurate pricing information.", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the warning message when user enters greater than six in quantity field: S" +
            "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequest-AddQuantityParametersinLTLquoteprocess_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18324")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantityfield", "Pallets")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityValue", "7")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:warningmessage", "The entered quantity exceeds the LTL threshold of 6 standard pallets or skids. An" +
            " additional carrier fee may apply. Please contact your local operations represen" +
            "tative for more accurate pricing information.")]
        public virtual void VerifyTheWarningMessageWhenUserEntersGreaterThanSixInQuantityField_S2()
        {
#line 52
this.VerifyTheWarningMessageWhenUserEntersGreaterThanSixInQuantityField("S2", "nat@extuser.com", "Te$t1234", "LTL", "Pallets", "7", "The entered quantity exceeds the LTL threshold of 6 standard pallets or skids. An" +
                    " additional carrier fee may apply. Please contact your local operations represen" +
                    "tative for more accurate pricing information.", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheQuantityFieldForTheStandardRatesOnConfirmationPage(
                    string scenario, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string qunttutyValue, 
                    string unit, 
                    string service, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationCity, 
                    string destinationState, 
                    string quantity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string shipmentInfromationHeader, 
                    string quantityFieldText, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the quantity field for the standard rates on confirmation page", @__tags);
#line 67
this.ScenarioSetup(scenarioInfo);
#line 68
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
    testRunner.And(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And(string.Format("I enter valid data in Item section {0}, {1}, {2} and {3}", classification, weight, shipmentValue, additionalService), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And(string.Format("I have entered qunatity {0} and unit {1}", qunttutyValue, unit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.And("I click on save rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 78
 testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And(string.Format("Show Quote Details link should be expandedShipment information \'{0}\'", shipmentInfromationHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.Then(string.Format("Verify the Quantity field \'{0}\',\'{1}\',\'{2}\' in the confirmation page matches with" +
                        " entered quantity value", quantityFieldText, qunttutyValue, unit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the quantity field for the standard rates on confirmation page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequest-AddQuantityParametersinLTLquoteprocess_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18324")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QunttutyValue", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Unit", "Skids")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "10000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentInfromationHeader", "SHIPMENT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityFieldText", "QTY")]
        public virtual void VerifyTheQuantityFieldForTheStandardRatesOnConfirmationPage_S1()
        {
#line 67
this.VerifyTheQuantityFieldForTheStandardRatesOnConfirmationPage("S1", "Quote Confirmation", "nat@extuser.com", "Te$t1234", "5", "Skids", "LTL", "33126", "Miami", "FL", "85282", "Tempe", "AZ", "6", "70", "100", "10000", "Appointment", "SHIPMENT INFORMATION", "QTY", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheQuantityFieldForTheInsuredRatesOnConfirmationPage(
                    string scenario, 
                    string username, 
                    string quoteConfirmationpageText, 
                    string password, 
                    string qunttutyValue, 
                    string unit, 
                    string service, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationCity, 
                    string destinationState, 
                    string quantity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string shipmentInfromationHeader, 
                    string quantityFieldText, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the quantity field for the insured rates on confirmation page", @__tags);
#line 89
this.ScenarioSetup(scenarioInfo);
#line 90
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 91
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 93
 testRunner.And(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.And(string.Format("I enter valid data in Item section {0}, {1}, {2} and {3}", classification, weight, shipmentValue, additionalService), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.And(string.Format("I have entered qunatity {0} and unit {1}", qunttutyValue, unit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
 testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
 testRunner.And(string.Format("I click on save insured rate as quote link  for carrier \'{0}\'", shipmentValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 100
 testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.And(string.Format("Show Quote Details link should be expandedShipment information \'{0}\'", shipmentInfromationHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.Then(string.Format("Verify the Quantity field \'{0}\',\'{1}\',\'{2}\' in the confirmation page matches with" +
                        " entered quantity value", quantityFieldText, qunttutyValue, unit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the quantity field for the insured rates on confirmation page: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequest-AddQuantityParametersinLTLquoteprocess_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18324")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QunttutyValue", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Unit", "Skids")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "10000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentInfromationHeader", "SHIPMENT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityFieldText", "QTY")]
        public virtual void VerifyTheQuantityFieldForTheInsuredRatesOnConfirmationPage_S1()
        {
#line 89
this.VerifyTheQuantityFieldForTheInsuredRatesOnConfirmationPage("S1", "nat@extuser.com", "Quote Confirmation", "Te$t1234", "2", "Skids", "LTL", "33126", "Miami", "FL", "85282", "Tempe", "AZ", "6", "70", "100", "10000", "Appointment", "SHIPMENT INFORMATION", "QTY", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheQuantityFieldForTheStandardRatesOnConfirmationPageWhenNoQuantityValuePassed(
                    string scenario, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationCity, 
                    string destinationState, 
                    string quantity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string shipmentInfromationHeader, 
                    string quantityFieldText, 
                    string qunttutyValue, 
                    string unit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the quantity field for the standard rates on confirmation page when no qua" +
                    "ntity value passed", @__tags);
#line 110
this.ScenarioSetup(scenarioInfo);
#line 111
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 112
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
    testRunner.And(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
 testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.And(string.Format("I enter valid data in Item section {0}, {1}, {2} and {3}", classification, weight, shipmentValue, additionalService), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
 testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
 testRunner.And("I click on save rate as quote link  for selected carrier", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 121
 testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
 testRunner.And(string.Format("Show Quote Details link should be expandedShipment information \'{0}\'", shipmentInfromationHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
 testRunner.Then(string.Format("Verify the Quantity field \'{0}\',\'{1}\',\'{2}\' in the confirmation page matches with" +
                        " entered quantity value", quantityFieldText, qunttutyValue, unit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the quantity field for the standard rates on confirmation page when no qua" +
            "ntity value passed: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequest-AddQuantityParametersinLTLquoteprocess_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18324")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "10000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentInfromationHeader", "SHIPMENT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityFieldText", "QTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QunttutyValue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Unit", "Skids")]
        public virtual void VerifyTheQuantityFieldForTheStandardRatesOnConfirmationPageWhenNoQuantityValuePassed_S1()
        {
#line 110
this.VerifyTheQuantityFieldForTheStandardRatesOnConfirmationPageWhenNoQuantityValuePassed("S1", "Quote Confirmation", "nat@extuser.com", "Te$t1234", "LTL", "33126", "Miami", "FL", "85282", "Tempe", "AZ", "6", "70", "100", "10000", "Appointment", "SHIPMENT INFORMATION", "QTY", "", "Skids", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheQuantityFieldForTheInsuredRatesOnConfirmationPageWhenNoQuantityValuePassed(
                    string scenario, 
                    string quoteConfirmationpageText, 
                    string username, 
                    string password, 
                    string service, 
                    string originZip, 
                    string originCity, 
                    string originState, 
                    string destinationZip, 
                    string destinationCity, 
                    string destinationState, 
                    string quantity, 
                    string classification, 
                    string weight, 
                    string shipmentValue, 
                    string additionalService, 
                    string shipmentInfromationHeader, 
                    string quantityFieldText, 
                    string qunttutyValue, 
                    string unit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the quantity field for the insured rates on confirmation page when no quan" +
                    "tity value passed", @__tags);
#line 132
this.ScenarioSetup(scenarioInfo);
#line 133
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 134
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 136
    testRunner.And(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originZip, originCity, originState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
 testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationZip, destinationCity, destinationState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 138
 testRunner.And(string.Format("I enter valid data in Item section {0}, {1}, {2} and {3}", classification, weight, shipmentValue, additionalService), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
 testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
 testRunner.And(string.Format("I click on save insured rate as quote link  for carrier \'{0}\'", shipmentValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
    testRunner.Then(string.Format("I will be navigated to quote confirmation page \'{0}\'", quoteConfirmationpageText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 143
 testRunner.And("I click on Show Quote Details link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.And(string.Format("Show Quote Details link should be expandedShipment information \'{0}\'", shipmentInfromationHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.Then(string.Format("Verify the Quantity field \'{0}\',\'{1}\',\'{2}\' in the confirmation page matches with" +
                        " entered quantity value", quantityFieldText, qunttutyValue, unit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the quantity field for the insured rates on confirmation page when no quan" +
            "tity value passed: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RateRequest-AddQuantityParametersinLTLquoteprocess_Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("18324")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuoteConfirmationpageText", "Quote Confirmation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginState", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationState", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Quantity", "6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "10000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AdditionalService", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentInfromationHeader", "SHIPMENT INFORMATION")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QuantityFieldText", "QTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QunttutyValue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Unit", "Skids")]
        public virtual void VerifyTheQuantityFieldForTheInsuredRatesOnConfirmationPageWhenNoQuantityValuePassed_S1()
        {
#line 132
this.VerifyTheQuantityFieldForTheInsuredRatesOnConfirmationPageWhenNoQuantityValuePassed("S1", "Quote Confirmation", "nat@extuser.com", "Te$t1234", "LTL", "33126", "Miami", "FL", "85282", "Tempe", "AZ", "6", "70", "100", "10000", "Appointment", "SHIPMENT INFORMATION", "QTY", "", "Skids", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
