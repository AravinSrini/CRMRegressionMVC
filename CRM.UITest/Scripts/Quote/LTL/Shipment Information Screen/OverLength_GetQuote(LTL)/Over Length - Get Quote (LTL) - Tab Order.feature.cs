// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Quote.LTL.ShipmentInformationScreen.OverLength_GetQuoteLTL
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class OverLength_GetQuoteLTL_TabOrderFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Over Length - Get Quote (LTL) - Tab Order.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Over Length - Get Quote (LTL) - Tab Order", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint81",
                        "40779"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Over Length - Get Quote (LTL) - Tab Order")))
            {
                global::CRM.UITest.Scripts.Quote.LTL.ShipmentInformationScreen.OverLength_GetQuoteLTL.OverLength_GetQuoteLTL_TabOrderFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
testRunner.Given("I am a shp.inquiry,shp.entry, operations, sales, sales management, or station own" +
                    "er user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
testRunner.And("I am on get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40779_Verify the Tab Order functionality when user selects Overlength in Shipping" +
            " From section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Get Quote (LTL) - Tab Order")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40779")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        public virtual void _40779_VerifyTheTabOrderFunctionalityWhenUserSelectsOverlengthInShippingFromSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40779_Verify the Tab Order functionality when user selects Overlength in Shipping" +
                    " From section", new string[] {
                        "RegressionSuite"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 10
testRunner.When("I have selected Overlength in Shipping From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
testRunner.Then("Tab order will be from Shipping From, Shipping To zip/postal code, classification" +
                    ", weight, length, width, height and View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
testRunner.And("Tab order for additional Item from classification, weight, length, width, height " +
                    "and View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40779_Verify the Tab Order functionality when user selects Overlength in Shipping" +
            " To section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Get Quote (LTL) - Tab Order")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40779")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        public virtual void _40779_VerifyTheTabOrderFunctionalityWhenUserSelectsOverlengthInShippingToSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40779_Verify the Tab Order functionality when user selects Overlength in Shipping" +
                    " To section", new string[] {
                        "RegressionSuite"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 16
testRunner.When("I have selected Overlength in Shipping To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
testRunner.Then("Tab order will be from Shipping From, Shipping To zip/postal code, classification" +
                    ", weight, length, width, height and View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40779_Verify Back Tab Order functionality when user selects Overlength Shipping F" +
            "rom section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Get Quote (LTL) - Tab Order")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40779")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        public virtual void _40779_VerifyBackTabOrderFunctionalityWhenUserSelectsOverlengthShippingFromSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40779_Verify Back Tab Order functionality when user selects Overlength Shipping F" +
                    "rom section", new string[] {
                        "RegressionSuite"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 21
testRunner.When("I have selected Overlength in Shipping From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
testRunner.Then("Back Tab order will be from View Quote Results button, Height, Width, Length, Wei" +
                    "ght, Classification, ShippingTo and shippingFrom zip/postal code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
testRunner.And("Back Tab order for additional Item from View Quote Results Button, Height, Width," +
                    " Length, Weight, classification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40779_Verify Back Tab Order functionality when user selects Overlength Shipping T" +
            "o section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Get Quote (LTL) - Tab Order")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40779")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        public virtual void _40779_VerifyBackTabOrderFunctionalityWhenUserSelectsOverlengthShippingToSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40779_Verify Back Tab Order functionality when user selects Overlength Shipping T" +
                    "o section", new string[] {
                        "RegressionSuite"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 27
testRunner.When("I have selected Overlength in Shipping To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
testRunner.Then("Back Tab order will be from View Quote Results button, Height, Width, Length, Wei" +
                    "ght, Classification, ShippingTo and shippingFrom zip/postal code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 29
testRunner.And("Back Tab order for additional Item from View Quote Results Button, Height, Width," +
                    " Length, Weight, classification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40779_Verify the Tab order functionality when user not select Overlength Shipping" +
            " From section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Get Quote (LTL) - Tab Order")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40779")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        public virtual void _40779_VerifyTheTabOrderFunctionalityWhenUserNotSelectOverlengthShippingFromSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40779_Verify the Tab order functionality when user not select Overlength Shipping" +
                    " From section", new string[] {
                        "RegressionSuite"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 33
testRunner.When("I have not selected Overlength services and accessorials in Shipping From section" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
testRunner.Then("Tab order will be from Shipping From, Shipping To zip/postal code, classification" +
                    ", weight and View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 35
testRunner.And("Additional Item tab order will be from classification, weight and View Quote Resu" +
                    "lts button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40779_Verify the Tab order functionality when user not select Overlength Shipping" +
            " To section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Get Quote (LTL) - Tab Order")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40779")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        public virtual void _40779_VerifyTheTabOrderFunctionalityWhenUserNotSelectOverlengthShippingToSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40779_Verify the Tab order functionality when user not select Overlength Shipping" +
                    " To section", new string[] {
                        "RegressionSuite"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 39
testRunner.When("I have not selected Overlength services and accessorials in Shipping To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
testRunner.Then("Tab order will be from Shipping From, Shipping To zip/postal code, classification" +
                    ", weight and View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 41
testRunner.And("Additional Item tab order will be from classification, weight and View Quote Resu" +
                    "lts button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40779_Verify Back Tab order functionality when user not select Overlength Shippin" +
            "g From section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Get Quote (LTL) - Tab Order")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40779")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        public virtual void _40779_VerifyBackTabOrderFunctionalityWhenUserNotSelectOverlengthShippingFromSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40779_Verify Back Tab order functionality when user not select Overlength Shippin" +
                    "g From section", new string[] {
                        "RegressionSuite"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 45
testRunner.When("I have not selected Overlength services and accessorials in Shipping From section" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
testRunner.Then("Back Tab order will be from View Quote Results button, Weight, Classification, Sh" +
                    "ipping To and shipping From zip/postal code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 47
testRunner.And("Back Tab order for additional Item from View Quote Results Button, Weight, classi" +
                    "fication", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40779_Verify Back Tab order functionality when user not select Overlength Shippin" +
            "g To section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Get Quote (LTL) - Tab Order")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40779")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        public virtual void _40779_VerifyBackTabOrderFunctionalityWhenUserNotSelectOverlengthShippingToSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40779_Verify Back Tab order functionality when user not select Overlength Shippin" +
                    "g To section", new string[] {
                        "RegressionSuite"});
#line 50
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 51
testRunner.When("I have not selected Overlength services and accessorials in Shipping To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
testRunner.Then("Back Tab order will be from View Quote Results button, Weight, Classification, Sh" +
                    "ipping To and shipping From zip/postal code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
testRunner.And("Back Tab order for additional Item from View Quote Results Button, Weight, classi" +
                    "fication", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40779_Verify the Tab order functionality when user not select any services and ac" +
            "cessorials-Shipping From section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Get Quote (LTL) - Tab Order")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40779")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        public virtual void _40779_VerifyTheTabOrderFunctionalityWhenUserNotSelectAnyServicesAndAccessorials_ShippingFromSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40779_Verify the Tab order functionality when user not select any services and ac" +
                    "cessorials-Shipping From section", new string[] {
                        "RegressionSuite"});
#line 56
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 57
testRunner.When("I have not selected any services and accessorials in Shipping From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
testRunner.Then("Tab order will be from Shipping From, Shipping To zip/postal code, classification" +
                    ", weight and View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 59
testRunner.And("Additional Item tab order will be from classification, weight and View Quote Resu" +
                    "lts button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40779_Verify the Tab order functionality when user not select any services and ac" +
            "cessorials-Shipping To section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Get Quote (LTL) - Tab Order")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40779")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        public virtual void _40779_VerifyTheTabOrderFunctionalityWhenUserNotSelectAnyServicesAndAccessorials_ShippingToSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40779_Verify the Tab order functionality when user not select any services and ac" +
                    "cessorials-Shipping To section", new string[] {
                        "RegressionSuite"});
#line 62
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 63
testRunner.When("I have not selected any services and accessorials in Shipping To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
testRunner.Then("Tab order will be from Shipping From, Shipping To zip/postal code, classification" +
                    ", weight and View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 65
testRunner.And("Additional Item tab order will be from classification, weight and View Quote Resu" +
                    "lts button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40779_Verify Back Tab order functionality when user not select any services and a" +
            "ccessorials-Shipping From")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Get Quote (LTL) - Tab Order")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40779")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        public virtual void _40779_VerifyBackTabOrderFunctionalityWhenUserNotSelectAnyServicesAndAccessorials_ShippingFrom()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40779_Verify Back Tab order functionality when user not select any services and a" +
                    "ccessorials-Shipping From", new string[] {
                        "RegressionSuite"});
#line 68
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 69
testRunner.When("I have not selected any services and accessorials in Shipping From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
testRunner.Then("Back Tab order will be from View Quote Results button, Weight, Classification, Sh" +
                    "ipping To and shipping From zip/postal code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 71
testRunner.And("Back Tab order for additional Item from View Quote Results Button, Weight, classi" +
                    "fication", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("40779_Verify Back Tab order functionality when user not select any services and a" +
            "ccessorials-Shipping To")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Over Length - Get Quote (LTL) - Tab Order")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint81")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("40779")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        public virtual void _40779_VerifyBackTabOrderFunctionalityWhenUserNotSelectAnyServicesAndAccessorials_ShippingTo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40779_Verify Back Tab order functionality when user not select any services and a" +
                    "ccessorials-Shipping To", new string[] {
                        "RegressionSuite"});
#line 74
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 75
testRunner.When("I have not selected any services and accessorials in Shipping To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
testRunner.Then("Back Tab order will be from View Quote Results button, Weight, Classification, Sh" +
                    "ipping To and shipping From zip/postal code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 77
testRunner.And("Back Tab order for additional Item from View Quote Results Button, Weight, classi" +
                    "fication", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
