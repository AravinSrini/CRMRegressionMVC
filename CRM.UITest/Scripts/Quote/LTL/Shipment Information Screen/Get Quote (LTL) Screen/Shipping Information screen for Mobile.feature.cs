// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Quote.LTL.ShipmentInformationScreen.GetQuoteLTLScreen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ShippingInformationScreenForMobileFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Shipping Information screen for Mobile.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Shipping Information screen for Mobile", null, ProgrammingLanguage.CSharp, new string[] {
                        "LTLShipmentInformationPageMobile",
                        "17386",
                        "Sprint59"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Shipping Information screen for Mobile")))
            {
                global::CRM.UITest.Scripts.Quote.LTL.ShipmentInformationScreen.GetQuoteLTLScreen.ShippingInformationScreenForMobileFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyTheFieldsPresentInLTLShipmentInformationPageInMobileDevice(string scenario, string username, string password, string service, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the fields present in LTL shipment information page in mobile device", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then(@"I should be able to verify all the fields in the mobile device - Origin Country,Origin Zip/Postal code, Origin City, Origin State/Province, Destination Country, Destination Zip/Postal Code, Destination City, Destination State/Province, Classification, Weight, Pickup date, Services/accessorials, Shipment value, Terms & Conditions link, Add additional item button and View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the fields present in LTL shipment information page in mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheFieldsPresentInLTLShipmentInformationPageInMobileDevice_S1()
        {
#line 5
this.VerifyTheFieldsPresentInLTLShipmentInformationPageInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "LTL", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyForTheFieldsWhichShouldNotPresentInLTLShipmentInformationPageInMobileDevice(string scenario, string username, string password, string service, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify for the fields which should not present in LTL shipment information page i" +
                    "n mobile device", @__tags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.Then("Select a saved origin address, Select a saved destination address, Select a saved" +
                    " item, Zip/Postal lookups, Estimated Class Lookups, Shipment Value ? icon,  and " +
                    "Back to Quote List button should be hidden", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify for the fields which should not present in LTL shipment information page i" +
            "n mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyForTheFieldsWhichShouldNotPresentInLTLShipmentInformationPageInMobileDevice_S1()
        {
#line 17
this.VerifyForTheFieldsWhichShouldNotPresentInLTLShipmentInformationPageInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "LTL", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheLTLShipmentInformationPageWhenDataIsNotPassedInRequiredFieldsInMobileDevice(string scenario, string username, string password, string service, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the LTL shipment information page when data is not passed in required fiel" +
                    "ds in mobile device", @__tags);
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.And("click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
  testRunner.Then("error message should be displayed by highlighting required fields", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the LTL shipment information page when data is not passed in required fiel" +
            "ds in mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheLTLShipmentInformationPageWhenDataIsNotPassedInRequiredFieldsInMobileDevice_S1()
        {
#line 29
this.VerifyTheLTLShipmentInformationPageWhenDataIsNotPassedInRequiredFieldsInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "LTL", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheOptionsPresentUnderOriginCountryDropdownInMobileDevice(string scenario, string username, string password, string service, string country1, string country2, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the options present under origin country dropdown in mobile device", @__tags);
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.And("I click on origin country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.Then(string.Format("United States {0} and Canada {1} countries options should be displayed in origin " +
                        "country dropdown", country1, country2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the options present under origin country dropdown in mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country1", "UNITED STATES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country2", "CANADA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheOptionsPresentUnderOriginCountryDropdownInMobileDevice_S1()
        {
#line 42
this.VerifyTheOptionsPresentUnderOriginCountryDropdownInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "LTL", "UNITED STATES", "CANADA", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheOptionsPresentUnderDestinationCountryDropdownInMobileDevice(string scenario, string username, string password, string service, string country1, string country2, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the options present under destination country dropdown in mobile device", @__tags);
#line 55
this.ScenarioSetup(scenarioInfo);
#line 56
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
 testRunner.And("I enter valid data destination zip in Destination section <DestinationZip>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.And("I click on destination country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.Then(string.Format("United States {0} and Canada {1} countries options should be displayed in destina" +
                        "tion country dropdown", country1, country2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the options present under destination country dropdown in mobile device: S" +
            "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country1", "UNITED STATES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country2", "CANADA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheOptionsPresentUnderDestinationCountryDropdownInMobileDevice_S1()
        {
#line 55
this.VerifyTheOptionsPresentUnderDestinationCountryDropdownInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "LTL", "UNITED STATES", "CANADA", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheFieldsOnSelectingUnitedStatesCanadaCountryFromOriginCountryDropdownInMobileDevice(string scenario, string username, string password, string service, string windowWidth, string windowHeight, string zipPostalMaxLength, string country, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the fields on selecting United states/ Canada Country from origin country " +
                    "dropdown in mobile device", @__tags);
#line 69
this.ScenarioSetup(scenarioInfo);
#line 70
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 71
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
 testRunner.And(string.Format("I select {0} from the origin country dropdown", country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.Then(string.Format("respective fields for the {0} should be displayed {1} should be displayed in orig" +
                        "in section", country, zipPostalMaxLength), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the fields on selecting United states/ Canada Country from origin country " +
            "dropdown in mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ZipPostalMaxLength", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country", "UNITED STATES")]
        public virtual void VerifyTheFieldsOnSelectingUnitedStatesCanadaCountryFromOriginCountryDropdownInMobileDevice_S1()
        {
#line 69
this.VerifyTheFieldsOnSelectingUnitedStatesCanadaCountryFromOriginCountryDropdownInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "LTL", "320", "568", "5", "UNITED STATES", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheFieldsOnSelectingUnitedStatesCanadaCountryFromDestinationCountryDropdownInMobileDevice(string scenario, string username, string password, string service, string windowWidth, string windowHeight, string zipPostalMaxLength, string country, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the fields on selecting United states/ Canada Country from destination cou" +
                    "ntry dropdown in mobile device", @__tags);
#line 82
this.ScenarioSetup(scenarioInfo);
#line 83
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 84
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
 testRunner.And("I enter valid data destination zip in Destination section <DestinationZip>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
 testRunner.And(string.Format("I select {0} from the destination country dropdown", country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
 testRunner.Then(string.Format("respective fields for the {0} should be displayed {1} should be displayed in dest" +
                        "ination section", country, zipPostalMaxLength), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the fields on selecting United states/ Canada Country from destination cou" +
            "ntry dropdown in mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ZipPostalMaxLength", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country", "UNITED STATES")]
        public virtual void VerifyTheFieldsOnSelectingUnitedStatesCanadaCountryFromDestinationCountryDropdownInMobileDevice_S1()
        {
#line 82
this.VerifyTheFieldsOnSelectingUnitedStatesCanadaCountryFromDestinationCountryDropdownInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "LTL", "320", "568", "5", "UNITED STATES", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheTermsAndConditionsLinkUnderFreightDescriptionInMobileDeviceForNonDefaultCustomer(string scenario, string username, string password, string service, string insuredvalue, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Terms and Conditions link under Freight Description in mobile device f" +
                    "or Non Default customer", @__tags);
#line 100
this.ScenarioSetup(scenarioInfo);
#line 101
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 102
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 105
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
testRunner.Then("Terms and Conditions link should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Terms and Conditions link under Freight Description in mobile device f" +
            "or Non Default customer: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "awg@shipentry.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheTermsAndConditionsLinkUnderFreightDescriptionInMobileDeviceForNonDefaultCustomer_S1()
        {
#line 100
this.VerifyTheTermsAndConditionsLinkUnderFreightDescriptionInMobileDeviceForNonDefaultCustomer("s1", "awg@shipentry.com", "Te$t1234", "LTL", "1000", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheTermsAndConditionsPopUpInMobileDeviceForNonDefaultCustomer(string scenario, string username, string password, string service, string insuredvalue, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the terms and conditions pop up in mobile device for non default customer", @__tags);
#line 113
this.ScenarioSetup(scenarioInfo);
#line 114
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 115
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 118
 testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
    testRunner.And("I click on Terms and Conditions link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
    testRunner.Then("terms and conditions popup should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the terms and conditions pop up in mobile device for non default customer:" +
            " S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "awg@shipentry.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheTermsAndConditionsPopUpInMobileDeviceForNonDefaultCustomer_S1()
        {
#line 113
this.VerifyTheTermsAndConditionsPopUpInMobileDeviceForNonDefaultCustomer("S1", "awg@shipentry.com", "Te$t1234", "LTL", "1000", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheDownloadDLSWClaimFormInTermsAndConditionsModalInMobileDeviceForNonDefaultCustomer(string scenario, string username, string password, string service, string insuredvalue, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the download DLSW Claim Form in Terms and Conditions modal in mobile devic" +
                    "e for Non Default customer", @__tags);
#line 127
this.ScenarioSetup(scenarioInfo);
#line 128
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 129
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 132
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
testRunner.And("I click on Terms and Conditions link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
testRunner.And("Click on Download DLSW Claim Form displaying in Terms and Conditions modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
testRunner.Then("DLSW Claim Form is downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the download DLSW Claim Form in Terms and Conditions modal in mobile devic" +
            "e for Non Default customer: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "awg@shipentry.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheDownloadDLSWClaimFormInTermsAndConditionsModalInMobileDeviceForNonDefaultCustomer_S1()
        {
#line 127
this.VerifyTheDownloadDLSWClaimFormInTermsAndConditionsModalInMobileDeviceForNonDefaultCustomer("s1", "awg@shipentry.com", "Te$t1234", "LTL", "100", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheFunctionalityOfCloseButtonInsideTheTermsAndConditionsPopupInMobileDevice(string scenario, string username, string password, string service, string insuredvalue, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the functionality of close button inside the terms and conditions popup in" +
                    " mobile device", @__tags);
#line 142
this.ScenarioSetup(scenarioInfo);
#line 143
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 144
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 147
 testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
 testRunner.And("I click on Terms and Conditions link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.Then("terms and conditions popup should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 150
 testRunner.And("Close button should be displayed in modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.And("I click on close button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.Then("popup should be closed and user should remain in shipment information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the functionality of close button inside the terms and conditions popup in" +
            " mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "awg@shipentry.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheFunctionalityOfCloseButtonInsideTheTermsAndConditionsPopupInMobileDevice_S1()
        {
#line 142
this.VerifyTheFunctionalityOfCloseButtonInsideTheTermsAndConditionsPopupInMobileDevice("S1", "awg@shipentry.com", "Te$t1234", "LTL", "1000", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheTermsAndConditionsLinkWhenUserNotEnteredInsuredValueForNonDefaultCustomer(string scenario, string username, string password, string service, string insuredvalue, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Terms and Conditions link when user not entered Insured Value for non " +
                    "Default customer", @__tags);
#line 159
this.ScenarioSetup(scenarioInfo);
#line 160
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 161
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 164
testRunner.And(string.Format("I have not entered the data in {0} field of Freight Description section", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
testRunner.Then("Terms and Conditions link should not be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Terms and Conditions link when user not entered Insured Value for non " +
            "Default customer: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "awg@shipentry.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheTermsAndConditionsLinkWhenUserNotEnteredInsuredValueForNonDefaultCustomer_S1()
        {
#line 159
this.VerifyTheTermsAndConditionsLinkWhenUserNotEnteredInsuredValueForNonDefaultCustomer("s1", "awg@shipentry.com", "Te$t1234", "LTL", "", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheTermsAndConditionsLinkUnderFreightDescriptionForDefaultCustomer(string scenario, string username, string password, string service, string insuredvalue, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Terms and Conditions link under Freight Description for Default custom" +
                    "er", @__tags);
#line 172
this.ScenarioSetup(scenarioInfo);
#line 173
testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 174
testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 177
testRunner.And(string.Format("I enter data in {0} field", insuredvalue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
testRunner.Then("Terms and Conditions link should not be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the Terms and Conditions link under Freight Description for Default custom" +
            "er: s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "s1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Insuredvalue", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheTermsAndConditionsLinkUnderFreightDescriptionForDefaultCustomer_S1()
        {
#line 172
this.VerifyTheTermsAndConditionsLinkUnderFreightDescriptionForDefaultCustomer("s1", "nat@extuser.com", "Te$t1234", "LTL", "100", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheErrorMessageOnEnteringMaximumShipmentValueInMobileDevice(string scenario, string username, string password, string service, string shipmentValue, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the error message on entering maximum shipment value in mobile device", @__tags);
#line 187
this.ScenarioSetup(scenarioInfo);
#line 188
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 189
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 192
 testRunner.And(string.Format("I enter data in {0} field", shipmentValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
 testRunner.Then("error message should be displayed for entering maximum shipment value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the error message on entering maximum shipment value in mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShipmentValue", "1000000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheErrorMessageOnEnteringMaximumShipmentValueInMobileDevice_S1()
        {
#line 187
this.VerifyTheErrorMessageOnEnteringMaximumShipmentValueInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "LTL", "1000000", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheFunctionalityOfViewQuoteResultsButtonInMobileDeviceByPassingUSAAddresses(string scenario, string username, string password, string service, string shippingFromZip, string shippingToZip, string classification, string weight, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the functionality of View Quote Results button in mobile device by passing" +
                    " USA addresses", @__tags);
#line 202
this.ScenarioSetup(scenarioInfo);
#line 203
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 204
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 206
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 207
 testRunner.And(string.Format("I enter valid data in Shipping From Section {0}", shippingFromZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 208
 testRunner.And(string.Format("I enter valid data in Shipping To Section {0}", shippingToZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
 testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
 testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
    testRunner.Then("rate results page should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the functionality of View Quote Results button in mobile device by passing" +
            " USA addresses: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShippingFromZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ShippingToZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheFunctionalityOfViewQuoteResultsButtonInMobileDeviceByPassingUSAAddresses_S1()
        {
#line 202
this.VerifyTheFunctionalityOfViewQuoteResultsButtonInMobileDeviceByPassingUSAAddresses("S1", "nat@extuser.com", "Te$t1234", "LTL", "33126", "85282", "70", "100", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheFunctionalityOfViewQuoteResultsButtonInMobileByPassingCanadaAddresses(string scenario, string username, string password, string service, string originCity, string originProvince, string originPostal, string destinationCity, string destinationProvince, string destinationPostal, string classification, string weight, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the functionality of View Quote Results button in mobile by passing Canada" +
                    " addresses", @__tags);
#line 219
this.ScenarioSetup(scenarioInfo);
#line 220
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 221
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 224
    testRunner.And("I select Canada Country from origin country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 225
 testRunner.And(string.Format("I enter valid data in Origin section {0}, {1} and {2}", originPostal, originCity, originProvince), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
 testRunner.And("I select Canada Country from destination country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
 testRunner.And(string.Format("I enter valid data in Destination section {0}, {1} and {2}", destinationProvince, destinationCity, destinationPostal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
 testRunner.And(string.Format("I enter valid data in Freight Description Section {0}, {1}", classification, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
 testRunner.And("I click on view quote results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
    testRunner.Then("no rate results page should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the functionality of View Quote Results button in mobile by passing Canada" +
            " addresses: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginCity", "Acton")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginProvince", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginPostal", "L7J 0A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationCity", "Acton")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationProvince", "ON")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DestinationPostal", "L7J 0A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "70")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "100")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheFunctionalityOfViewQuoteResultsButtonInMobileByPassingCanadaAddresses_S1()
        {
#line 219
this.VerifyTheFunctionalityOfViewQuoteResultsButtonInMobileByPassingCanadaAddresses("S1", "nat@extuser.com", "Te$t1234", "LTL", "Acton", "ON", "L7J 0A1", "Acton", "ON", "L7J 0A1", "70", "100", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyZipcodeLookupApiAutoPopulateFunctionalityForTheShippingFromSectionInMobileDevice(string scenario, string username, string password, string windowWidth, string windowHeight, string service, string validZip, string city, string state, string modifiedCity, string modifiedState, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify zipcode lookup api auto populate functionality for the Shipping From secti" +
                    "on in Mobile device", @__tags);
#line 241
this.ScenarioSetup(scenarioInfo);
#line 242
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 243
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 244
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 245
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 246
 testRunner.When(string.Format("I enter zipcode {0} and leave focus from the origin section", validZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 247
 testRunner.Then(string.Format("City {0} and State {1} fields should be populated in origin section", city, state), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 248
 testRunner.And(string.Format("I have the ability to edit the city in shipping from section{0}", modifiedCity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 249
    testRunner.And(string.Format("I have the option to select a state from the state drop down list in shipping fro" +
                        "m section{0}", modifiedState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify zipcode lookup api auto populate functionality for the Shipping From secti" +
            "on in Mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ValidZip", "33126")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Miami")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ModifiedCity", "test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ModifiedState", "CA")]
        public virtual void VerifyZipcodeLookupApiAutoPopulateFunctionalityForTheShippingFromSectionInMobileDevice_S1()
        {
#line 241
this.VerifyZipcodeLookupApiAutoPopulateFunctionalityForTheShippingFromSectionInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "320", "568", "LTL", "33126", "Miami", "FL", "test", "CA", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyZipcodeLookupApiAutoPopulateFunctionalityForTheShippingToSectionInMobileDevice(string scenario, string username, string password, string windowWidth, string windowHeight, string service, string validZip, string city, string state, string modifiedCity, string modifiedState, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify zipcode lookup api auto populate functionality for the Shipping To section" +
                    " in Mobile device", @__tags);
#line 256
this.ScenarioSetup(scenarioInfo);
#line 257
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 258
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 259
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 261
 testRunner.When(string.Format("I enter zipcode {0} and leave focus from the destination section", validZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 262
 testRunner.Then(string.Format("City {0} and State {1} fields should be populated in destination section", city, state), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 263
 testRunner.And(string.Format("I have the ability to edit the city in shipping to section{0}", modifiedCity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
    testRunner.And(string.Format("I have the option to select a state from the state drop down list in shipping to " +
                        "section{0}", modifiedState), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify zipcode lookup api auto populate functionality for the Shipping To section" +
            " in Mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ValidZip", "85282")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Tempe")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ModifiedCity", "test2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ModifiedState", "CA")]
        public virtual void VerifyZipcodeLookupApiAutoPopulateFunctionalityForTheShippingToSectionInMobileDevice_S1()
        {
#line 256
this.VerifyZipcodeLookupApiAutoPopulateFunctionalityForTheShippingToSectionInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "320", "568", "LTL", "85282", "Tempe", "AZ", "test2", "CA", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyZipcodeTextBoxOnEnteringInvalidZipInShippingFromSectionInMobileDevice(string scenario, string username, string password, string windowWidth, string windowHeight, string service, string invalidZip, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify zipcode text box on entering invalid zip in Shipping From section in Mobil" +
                    "e device", @__tags);
#line 271
this.ScenarioSetup(scenarioInfo);
#line 272
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 273
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 275
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 276
 testRunner.When(string.Format("I enter zipcode {0} and leave focus from the origin section", invalidZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 277
 testRunner.Then("background color of the origin zip code textbox should turn red and error message" +
                    " should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 278
 testRunner.And("the Origin City and State will not Auto populate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify zipcode text box on entering invalid zip in Shipping From section in Mobil" +
            "e device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidZip", "66666")]
        public virtual void VerifyZipcodeTextBoxOnEnteringInvalidZipInShippingFromSectionInMobileDevice_S1()
        {
#line 271
this.VerifyZipcodeTextBoxOnEnteringInvalidZipInShippingFromSectionInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "320", "568", "LTL", "66666", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyZipcodeTextBoxOnEnteringInvalidZipInShippingToSectionInMobileDevice(string scenario, string username, string password, string windowWidth, string windowHeight, string service, string invalidZip, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify zipcode text box on entering invalid zip in Shipping To section in Mobile " +
                    "device", @__tags);
#line 285
this.ScenarioSetup(scenarioInfo);
#line 286
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 287
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 289
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 290
 testRunner.When(string.Format("I enter zipcode {0} and leave focus from the destination section", invalidZip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 291
 testRunner.Then("background color of the destination zip code textbox should turn red and error me" +
                    "ssage should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 292
 testRunner.And("the Destination City and State will not Auto populate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify zipcode text box on entering invalid zip in Shipping To section in Mobile " +
            "device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidZip", "66666")]
        public virtual void VerifyZipcodeTextBoxOnEnteringInvalidZipInShippingToSectionInMobileDevice_S1()
        {
#line 285
this.VerifyZipcodeTextBoxOnEnteringInvalidZipInShippingToSectionInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "320", "568", "LTL", "66666", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifySelectStateProvinceDropDownListWillBePopulatedWithAListOfCanadaProvincesInShippingToSectionInMobileDevice(string scenario, string username, string password, string windowWidth, string windowHeight, string service, string invalidZip, string country, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify  Select State/Province drop down list will be populated with a list of Can" +
                    "ada provinces in Shipping To section in Mobile device", @__tags);
#line 301
this.ScenarioSetup(scenarioInfo);
#line 302
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 303
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 304
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 305
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 306
 testRunner.When("I select Canada Country from destination country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 307
    testRunner.Then("the Select State/Province drop down list will be populated with a list of Canada " +
                    "provinces  in Shipping To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify  Select State/Province drop down list will be populated with a list of Can" +
            "ada provinces in Shipping To section in Mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidZip", "66666")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country", "Canada")]
        public virtual void VerifySelectStateProvinceDropDownListWillBePopulatedWithAListOfCanadaProvincesInShippingToSectionInMobileDevice_S1()
        {
#line 301
this.VerifySelectStateProvinceDropDownListWillBePopulatedWithAListOfCanadaProvincesInShippingToSectionInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "320", "568", "LTL", "66666", "Canada", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifySelectStateProvinceDropDownListWillBePopulatedWithAListOfCanadaProvincesInShippingFromSectionInMobileDevice(string scenario, string username, string password, string windowWidth, string windowHeight, string service, string invalidZip, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify  Select State/Province drop down list will be populated with a list of Can" +
                    "ada provinces in Shipping From section in Mobile device", @__tags);
#line 314
this.ScenarioSetup(scenarioInfo);
#line 315
    testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 316
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 319
 testRunner.When("I select Canada Country from origin country dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 320
    testRunner.Then("the Select State/Province drop down list will be populated with a list of Canada " +
                    "provinces in Shipping From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify  Select State/Province drop down list will be populated with a list of Can" +
            "ada provinces in Shipping From section in Mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidZip", "66666")]
        public virtual void VerifySelectStateProvinceDropDownListWillBePopulatedWithAListOfCanadaProvincesInShippingFromSectionInMobileDevice_S1()
        {
#line 314
this.VerifySelectStateProvinceDropDownListWillBePopulatedWithAListOfCanadaProvincesInShippingFromSectionInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "320", "568", "LTL", "66666", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyExistenceOfServicesAccessorialsMultiSelectFieldInShip_FromSectionOfGetQuotePageInMobileDevice(string scenario, string username, string password, string service, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify existence of Services & Accessorials multi select field in Ship. From sect" +
                    "ion of Get Quote page in mobile device", @__tags);
#line 333
this.ScenarioSetup(scenarioInfo);
#line 334
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 335
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 336
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 337
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 338
 testRunner.Then("I must be able to view Services & Accessorials multi select field in the Ship.Fro" +
                    "m section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify existence of Services & Accessorials multi select field in Ship. From sect" +
            "ion of Get Quote page in mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyExistenceOfServicesAccessorialsMultiSelectFieldInShip_FromSectionOfGetQuotePageInMobileDevice_S1()
        {
#line 333
this.VerifyExistenceOfServicesAccessorialsMultiSelectFieldInShip_FromSectionOfGetQuotePageInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "LTL", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheFunctionalityOfServicesAccessorialsMultiSelectFieldBySelectingMultipleValuesFromTheDropdownForShip_FromMobileDevice(string scenario, string username, string password, string service, string accessorials1, string accessorials2, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the functionality of Services & Accessorials multi select field by selecti" +
                    "ng multiple values from the dropdown for Ship.From (Mobile Device)", @__tags);
#line 345
this.ScenarioSetup(scenarioInfo);
#line 346
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 347
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 350
 testRunner.And("I click services and accessorials dropdown on Ship From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
 testRunner.Then(string.Format("I should be able to select services \'{0}\' and \'{1}\' from Ship.From Section", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the functionality of Services & Accessorials multi select field by selecti" +
            "ng multiple values from the dropdown for Ship.From (Mobile Device): S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "Construction Site")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheFunctionalityOfServicesAccessorialsMultiSelectFieldBySelectingMultipleValuesFromTheDropdownForShip_FromMobileDevice_S1()
        {
#line 345
this.VerifyTheFunctionalityOfServicesAccessorialsMultiSelectFieldBySelectingMultipleValuesFromTheDropdownForShip_FromMobileDevice("S1", "nat@extuser.com", "Te$t1234", "LTL", "Appointment", "Construction Site", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheDropdownValuesOfServicesAccessorialsUnderShip_FromSectionForMobileDevice(string scenario, string username, string password, string service, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the dropdown values of Services & Accessorials under Ship. From section fo" +
                    "r Mobile Device", @__tags);
#line 358
this.ScenarioSetup(scenarioInfo);
#line 359
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 360
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 361
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 362
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 363
 testRunner.And("I click services and accessorials dropdown on Ship From section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 364
 testRunner.Then("I should be able to view specified Ship.From services in the dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the dropdown values of Services & Accessorials under Ship. From section fo" +
            "r Mobile Device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheDropdownValuesOfServicesAccessorialsUnderShip_FromSectionForMobileDevice_S1()
        {
#line 358
this.VerifyTheDropdownValuesOfServicesAccessorialsUnderShip_FromSectionForMobileDevice("S1", "nat@extuser.com", "Te$t1234", "LTL", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyExistenceOfServicesAccessorialsMultiSelectFieldInShip_ToSectionOfGetQuotePageInMobileDevice(string scenario, string username, string password, string service, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify existence of Services & Accessorials multi select field in Ship. To sectio" +
                    "n of Get Quote page in mobile device", @__tags);
#line 377
this.ScenarioSetup(scenarioInfo);
#line 378
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 379
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 380
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 381
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 382
 testRunner.Then("I must be able to view Services & Accessorials multi select field in the Ship.Fro" +
                    "m section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify existence of Services & Accessorials multi select field in Ship. To sectio" +
            "n of Get Quote page in mobile device: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyExistenceOfServicesAccessorialsMultiSelectFieldInShip_ToSectionOfGetQuotePageInMobileDevice_S1()
        {
#line 377
this.VerifyExistenceOfServicesAccessorialsMultiSelectFieldInShip_ToSectionOfGetQuotePageInMobileDevice("S1", "nat@extuser.com", "Te$t1234", "LTL", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheFunctionalityOfServicesAccessorialsMultiSelectFieldBySelectingMultipleValuesFromTheDropdownForShip_ToMobileDevice(string scenario, string username, string password, string service, string accessorials1, string accessorials2, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the functionality of Services & Accessorials multi select field by selecti" +
                    "ng multiple values from the dropdown for Ship.To (Mobile Device)", @__tags);
#line 390
this.ScenarioSetup(scenarioInfo);
#line 391
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 392
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 393
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 394
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 395
 testRunner.And("I click services and accessorials dropdown on Ship To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
 testRunner.Then(string.Format("I should be able to select services \'{0}\' and \'{1}\' from Ship.To Section", accessorials1, accessorials2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the functionality of Services & Accessorials multi select field by selecti" +
            "ng multiple values from the dropdown for Ship.To (Mobile Device): S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials1", "Appointment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Accessorials2", "COD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheFunctionalityOfServicesAccessorialsMultiSelectFieldBySelectingMultipleValuesFromTheDropdownForShip_ToMobileDevice_S1()
        {
#line 390
this.VerifyTheFunctionalityOfServicesAccessorialsMultiSelectFieldBySelectingMultipleValuesFromTheDropdownForShip_ToMobileDevice("S1", "nat@extuser.com", "Te$t1234", "LTL", "Appointment", "COD", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheDropdownValuesOfServicesAccessorialsForMobileDeviceShip_To(string scenario, string username, string password, string service, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the dropdown values of Services & Accessorials for Mobile Device (Ship. To" +
                    ")", @__tags);
#line 403
this.ScenarioSetup(scenarioInfo);
#line 404
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 405
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 406
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 407
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 408
 testRunner.And("I click services and accessorials dropdown on Ship To section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 409
 testRunner.Then("I should be able to view specified Ship.To Services in the dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the dropdown values of Services & Accessorials for Mobile Device (Ship. To" +
            "): S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheDropdownValuesOfServicesAccessorialsForMobileDeviceShip_To_S1()
        {
#line 403
this.VerifyTheDropdownValuesOfServicesAccessorialsForMobileDeviceShip_To("S1", "nat@extuser.com", "Te$t1234", "LTL", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheFunctionalityOfAddAdditionalItemLinkForMobile(string scenario, string username, string password, string service, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the functionality of add additional item link for Mobile", @__tags);
#line 421
this.ScenarioSetup(scenarioInfo);
#line 422
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 423
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 424
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 425
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 426
 testRunner.And("I click on add additional item link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 427
 testRunner.Then("another set of Select Class , Weight, Quantity , Quantity_Type , Add Addition Ite" +
                    "m and Remove Item button should be displayed for mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the functionality of add additional item link for Mobile: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheFunctionalityOfAddAdditionalItemLinkForMobile_S1()
        {
#line 421
this.VerifyTheFunctionalityOfAddAdditionalItemLinkForMobile("S1", "nat@extuser.com", "Te$t1234", "LTL", "320", "568", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheFunctionalityOfRemoveAdditionalItemLinkForMobile(string scenario, string username, string password, string service, string windowWidth, string windowHeight, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the functionality of remove additional item link for Mobile", @__tags);
#line 434
this.ScenarioSetup(scenarioInfo);
#line 435
 testRunner.Given(string.Format("I am a DLS user and login into application with valid {0} and {1}", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 436
 testRunner.And(string.Format("I re-size the browser to mobile device \'{0}\' and  \'{1}\'", windowWidth, windowHeight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 437
 testRunner.And(string.Format("I clicked on {0} button on the select type screen of rate request process from mo" +
                        "bile device", service), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 438
 testRunner.When("I am taken to the new responsive LTL Shipment Information screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 439
 testRunner.And("I click on add additional item link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 440
 testRunner.And("I click on remove additional item link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 441
 testRunner.Then("another set of Select Class , Weight, Quantity , Quantity_Type , Add Addition Ite" +
                    "m and Remove Item button should disappear for mobile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the functionality of remove additional item link for Mobile: S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Shipping Information screen for Mobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("LTLShipmentInformationPageMobile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("17386")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint59")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Scenario", "S1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Username", "nat@extuser.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "Te$t1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Service", "LTL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowWidth", "320")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowHeight", "568")]
        public virtual void VerifyTheFunctionalityOfRemoveAdditionalItemLinkForMobile_S1()
        {
#line 434
this.VerifyTheFunctionalityOfRemoveAdditionalItemLinkForMobile("S1", "nat@extuser.com", "Te$t1234", "LTL", "320", "568", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
