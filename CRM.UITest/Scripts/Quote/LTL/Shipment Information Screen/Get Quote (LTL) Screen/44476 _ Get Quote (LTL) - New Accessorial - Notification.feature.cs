// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Quote.LTL.ShipmentInformationScreen.GetQuoteLTLScreen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _44476_GetQuoteLTL_NewAccessorial_NotificationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "44476 _ Get Quote (LTL) - New Accessorial - Notification.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "44476 _ Get Quote (LTL) - New Accessorial - Notification", null, ProgrammingLanguage.CSharp, new string[] {
                        "44476",
                        "Sprint83"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "44476 _ Get Quote (LTL) - New Accessorial - Notification")))
            {
                global::CRM.UITest.Scripts.Quote.LTL.ShipmentInformationScreen.GetQuoteLTLScreen._44476_GetQuoteLTL_NewAccessorial_NotificationFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void VerifyTheNewDropdownSelectionNotificationInShippingFromAndShippingToSection(string sections, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the new dropdown selection Notification in Shipping From and Shipping To s" +
                    "ection", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given("I am a shp.inquiry, shp.entry, sales, sales management, operations and station ow" +
                    "ner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.And("I am on the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
testRunner.And(string.Format("I click in the <Click to add services & accesorials...> field in either of the fo" +
                        "llowing locations: {0}", sections), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
testRunner.Then("I will see a new selection: <Notification> in dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
testRunner.And("The new selection <Notification> will be displayed alphabetically within the list" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the new dropdown selection Notification in Shipping From and Shipping To s" +
            "ection: Shipping From")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "44476 _ Get Quote (LTL) - New Accessorial - Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44476")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Shipping From")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sections", "Shipping From")]
        public virtual void VerifyTheNewDropdownSelectionNotificationInShippingFromAndShippingToSection_ShippingFrom()
        {
#line 5
this.VerifyTheNewDropdownSelectionNotificationInShippingFromAndShippingToSection("Shipping From", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the new dropdown selection Notification in Shipping From and Shipping To s" +
            "ection: Shipping To")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "44476 _ Get Quote (LTL) - New Accessorial - Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44476")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Shipping To")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sections", "Shipping To")]
        public virtual void VerifyTheNewDropdownSelectionNotificationInShippingFromAndShippingToSection_ShippingTo()
        {
#line 5
this.VerifyTheNewDropdownSelectionNotificationInShippingFromAndShippingToSection("Shipping To", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTheCRMWillSendTheAccessorialServiceNTFYToMGForShippingFromAndShippingToSection(string sections, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the CRM will send the Accessorial Service NTFY to MG for Shipping From and" +
                    " Shipping To section", @__tags);
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
testRunner.Given("I am a shp.inquiry, shp.entry, sales, sales management, operations and station ow" +
                    "ner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
testRunner.And("I am on the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
testRunner.And(string.Format("I click in the <Click to add services & accesorials...> field in either of the fo" +
                        "llowing locations: {0}", sections), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
testRunner.And("I selected <Notification> from dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
testRunner.When("I click on the <View Quote Results> button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
testRunner.Then("CRM will send the Accessorial Service <NTFY> to MG", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the CRM will send the Accessorial Service NTFY to MG for Shipping From and" +
            " Shipping To section: Shipping From")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "44476 _ Get Quote (LTL) - New Accessorial - Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44476")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Shipping From")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sections", "Shipping From")]
        public virtual void VerifyTheCRMWillSendTheAccessorialServiceNTFYToMGForShippingFromAndShippingToSection_ShippingFrom()
        {
#line 18
this.VerifyTheCRMWillSendTheAccessorialServiceNTFYToMGForShippingFromAndShippingToSection("Shipping From", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify the CRM will send the Accessorial Service NTFY to MG for Shipping From and" +
            " Shipping To section: Shipping To")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "44476 _ Get Quote (LTL) - New Accessorial - Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44476")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Shipping To")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sections", "Shipping To")]
        public virtual void VerifyTheCRMWillSendTheAccessorialServiceNTFYToMGForShippingFromAndShippingToSection_ShippingTo()
        {
#line 18
this.VerifyTheCRMWillSendTheAccessorialServiceNTFYToMGForShippingFromAndShippingToSection("Shipping To", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyMGWillReturnCarrierChargesThatIncludesTheAccessorialCodeNOTToCRM(string sections, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify MG will return carrier charges that includes the Accessorial Code <NOT> to" +
                    " CRM", @__tags);
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
testRunner.Given("I am a shp.inquiry, shp.entry, sales, sales management, operations and station ow" +
                    "ner user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
testRunner.And("I am on the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
testRunner.And(string.Format("I click in the <Click to add services & accesorials...> field in either of the fo" +
                        "llowing locations: {0}", sections), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
testRunner.And("I selected <Notification> from dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
testRunner.And("I clicked on the View Quote Results button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
testRunner.When("CRM sends the Accessorial Service <NTFY> to MG", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
testRunner.Then("MG will return carrier charges that include the Accessorial Code <NOT> to CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify MG will return carrier charges that includes the Accessorial Code <NOT> to" +
            " CRM: Shipping From")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "44476 _ Get Quote (LTL) - New Accessorial - Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44476")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Shipping From")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sections", "Shipping From")]
        public virtual void VerifyMGWillReturnCarrierChargesThatIncludesTheAccessorialCodeNOTToCRM_ShippingFrom()
        {
#line 32
this.VerifyMGWillReturnCarrierChargesThatIncludesTheAccessorialCodeNOTToCRM("Shipping From", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify MG will return carrier charges that includes the Accessorial Code <NOT> to" +
            " CRM: Shipping To")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "44476 _ Get Quote (LTL) - New Accessorial - Notification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("44476")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint83")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Shipping To")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sections", "Shipping To")]
        public virtual void VerifyMGWillReturnCarrierChargesThatIncludesTheAccessorialCodeNOTToCRM_ShippingTo()
        {
#line 32
this.VerifyMGWillReturnCarrierChargesThatIncludesTheAccessorialCodeNOTToCRM("Shipping To", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
