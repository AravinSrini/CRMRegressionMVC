// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.Quote.Results
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class DisplayQuoteCriteriaOnQuoteResultsPageFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Display_Quote_Criteria.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Display quote criteria on quote results page", null, ProgrammingLanguage.CSharp, new string[] {
                        "45682",
                        "NinjaSprint22"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Display quote criteria on quote results page")))
            {
                global::CRM.UITest.Scripts.Quote.Results.DisplayQuoteCriteriaOnQuoteResultsPageFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _45682_WhenOnTheQuoteResultsLTLPageThenIWillSeeANewAreaForQuoteCriteria(string pickupDate, string originCity, string originState, string originZipCode, string destinationCity, string destinationState, string destinationZipCode, string pieces, string weight, string length, string width, string height, string @class, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("45682_When on the quote results (LTL) page then I will see a new area for quote c" +
                    "riteria", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("I am a shpinquiry, shpentry, sales, sales management, operations, or station owne" +
                    "r user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.When("I arrive on the Get Quote (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.And(string.Format("I have chose a pickup date {0}", pickupDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And(string.Format("I choose a {0} {1} and {2} for the origin", originCity, originState, originZipCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And(string.Format("I choose a {0} {1} and {2} for the Destination", destinationCity, destinationState, destinationZipCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And(string.Format("I choose a {0} {1} {2} {3} {4} and {5} for the item", pieces, weight, length, width, height, @class), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("I click on view quote results button on the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table1.AddRow(new string[] {
                        "Pickup Date:"});
            table1.AddRow(new string[] {
                        "Origin:"});
            table1.AddRow(new string[] {
                        "Destination:"});
            table1.AddRow(new string[] {
                        "Pieces:"});
            table1.AddRow(new string[] {
                        "Class/Weight:"});
#line 13
 testRunner.Then("I will see the following new fields on the quote results page:", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("45682_When on the quote results (LTL) page then I will see a new area for quote c" +
            "riteria: Today")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Display quote criteria on quote results page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("45682")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint22")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Today")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Pickup Date", "Today")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin City", "Chicago")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin State", "IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin Zip Code", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination City", "Beverly Hills")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination State", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination Zip Code", "90210")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Pieces", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Length", "10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Width", "10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Height", "10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Class", "50")]
        public virtual void _45682_WhenOnTheQuoteResultsLTLPageThenIWillSeeANewAreaForQuoteCriteria_Today()
        {
#line 5
this._45682_WhenOnTheQuoteResultsLTLPageThenIWillSeeANewAreaForQuoteCriteria("Today", "Chicago", "IL", "60606", "Beverly Hills", "CA", "90210", "4", "1000", "10", "10", "10", "50", ((string[])(null)));
#line hidden
        }
        
        public virtual void _45682_WhenEnteringInformationInGetQuoteLTLPageBindsToQuoteResultsForQuoteCriteria(string pickupDate, string originCity, string originState, string originZipCode, string destinationCity, string destinationState, string destinationZipCode, string pieces, string weight, string length, string width, string height, string @class, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("45682_When entering information in get quote LTL page binds to quote results for " +
                    "quote criteria", @__tags);
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
 testRunner.Given("I am a shpinquiry, shpentry, sales, sales management, operations, or station owne" +
                    "r user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
 testRunner.And("I Arrive on the Get Quote (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.When("the quote contains one unique class", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.And(string.Format("I have chose a pickup date {0}", pickupDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And(string.Format("I choose a {0} {1} and {2} for the origin", originCity, originState, originZipCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And(string.Format("I choose a {0} {1} and {2} for the Destination", destinationCity, destinationState, destinationZipCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And(string.Format("I choose a {0} {1} {2} {3} {4} and {5} for the item", pieces, weight, length, width, height, @class), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And("I click on view quote results button on the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.Then(string.Format("the Pickup Date field will be populated with the Pickup Date selected on the Get " +
                        "Quote (LTL) page {0}", pickupDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 35
 testRunner.And(string.Format("the Origin field will be populated with the City, State and Zip Code from the fie" +
                        "lds in the Shipping From section of the Get Quote (LTL) page {0} {1} {2}", originCity, originState, originZipCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And(string.Format("the Destination field will be populated with the City, State and Zip Code from th" +
                        "e fields in the  Shipping To section of the Get Quote (LTL) page {0} {1} {2}", destinationCity, destinationState, destinationZipCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.And(string.Format("the Pieces field will be populated with the total of all values entered in the En" +
                        "ter a quantity... fields in the Freight Description section of the Get Quote (LT" +
                        "L) page {0}", pieces), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And(string.Format("the Class/Weight field will be populated with the class selected in the Select or" +
                        " search for a class or saved item... field in the Freight Description section of" +
                        " the Get Quote (LTL) page {0} {1}", @class, weight), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table2.AddRow(new string[] {
                        "Pickup Date"});
            table2.AddRow(new string[] {
                        "Origin"});
            table2.AddRow(new string[] {
                        "Destination"});
            table2.AddRow(new string[] {
                        "Pieces"});
            table2.AddRow(new string[] {
                        "Class/Weight"});
#line 39
 testRunner.And("the following new fields are not editable:", ((string)(null)), table2, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("45682_When entering information in get quote LTL page binds to quote results for " +
            "quote criteria: Today")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Display quote criteria on quote results page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("45682")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint22")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Today")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Pickup Date", "Today")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin City", "Chicago")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin State", "IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin Zip Code", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination City", "Beverly Hills")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination State", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination Zip Code", "90210")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Pieces", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Length", "10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Width", "10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Height", "10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Class", "50")]
        public virtual void _45682_WhenEnteringInformationInGetQuoteLTLPageBindsToQuoteResultsForQuoteCriteria_Today()
        {
#line 25
this._45682_WhenEnteringInformationInGetQuoteLTLPageBindsToQuoteResultsForQuoteCriteria("Today", "Chicago", "IL", "60606", "Beverly Hills", "CA", "90210", "4", "1000", "10", "10", "10", "50", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("45682_When entering information in get quote LTL page binds to quote results for " +
            "quote criteria: Tomorrow")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Display quote criteria on quote results page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("45682")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint22")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Tomorrow")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Pickup Date", "Tomorrow")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin City", "Beverly Hills")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin State", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin Zip Code", "90210")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination City", "Chicago")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination State", "IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination Zip Code", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Pieces", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Weight", "14")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Length", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Width", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Height", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Class", "100")]
        public virtual void _45682_WhenEnteringInformationInGetQuoteLTLPageBindsToQuoteResultsForQuoteCriteria_Tomorrow()
        {
#line 25
this._45682_WhenEnteringInformationInGetQuoteLTLPageBindsToQuoteResultsForQuoteCriteria("Tomorrow", "Beverly Hills", "CA", "90210", "Chicago", "IL", "60606", "2", "14", "1", "1", "1", "100", ((string[])(null)));
#line hidden
        }
        
        public virtual void _45682_EnteringMutipleClassesOnGetQuoteShowsAMoreInformationIconForClassInQuoteCriteria(string pickupDate, string originCity, string originState, string originZipCode, string destinationCity, string destinationState, string destinationZipCode, string count, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("45682_Entering mutiple classes on get quote shows a more information icon for cla" +
                    "ss in quote criteria", @__tags);
#line 52
this.ScenarioSetup(scenarioInfo);
#line 53
 testRunner.Given("I am a shpinquiry, shpentry, sales, sales management, operations, or station owne" +
                    "r user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.And("I Arrive on the Get Quote (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.And(string.Format("I have chose a pickup date {0}", pickupDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And(string.Format("I choose a {0} {1} and {2} for the origin", originCity, originState, originZipCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.And(string.Format("I choose a {0} {1} and {2} for the Destination", destinationCity, destinationState, destinationZipCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Pieces",
                        "Weight",
                        "Class"});
            table3.AddRow(new string[] {
                        "4",
                        "100",
                        "50"});
            table3.AddRow(new string[] {
                        "2",
                        "14",
                        "100"});
            table3.AddRow(new string[] {
                        "1",
                        "1000",
                        "70"});
#line 58
 testRunner.And(string.Format("the quote contains more than one unique class {0}", count), ((string)(null)), table3, "And ");
#line 63
 testRunner.When("I click on view quote results button on the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
 testRunner.Then("I will see a More Information icon displayed in the Class/Weight field of the quo" +
                    "te criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("45682_Entering mutiple classes on get quote shows a more information icon for cla" +
            "ss in quote criteria: Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Display quote criteria on quote results page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("45682")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint22")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Pickup Date", "Tomorrow")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin City", "Beverly Hills")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin State", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin Zip Code", "90210")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination City", "Chicago")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination State", "IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination Zip Code", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Count", "2")]
        public virtual void _45682_EnteringMutipleClassesOnGetQuoteShowsAMoreInformationIconForClassInQuoteCriteria_Variant0()
        {
#line 52
this._45682_EnteringMutipleClassesOnGetQuoteShowsAMoreInformationIconForClassInQuoteCriteria("Tomorrow", "Beverly Hills", "CA", "90210", "Chicago", "IL", "60606", "2", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("45682_Entering mutiple classes on get quote shows a more information icon for cla" +
            "ss in quote criteria: Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Display quote criteria on quote results page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("45682")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint22")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Pickup Date", "Tomorrow")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin City", "Beverly Hills")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin State", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin Zip Code", "90210")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination City", "Chicago")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination State", "IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination Zip Code", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Count", "3")]
        public virtual void _45682_EnteringMutipleClassesOnGetQuoteShowsAMoreInformationIconForClassInQuoteCriteria_Variant1()
        {
#line 52
this._45682_EnteringMutipleClassesOnGetQuoteShowsAMoreInformationIconForClassInQuoteCriteria("Tomorrow", "Beverly Hills", "CA", "90210", "Chicago", "IL", "60606", "3", ((string[])(null)));
#line hidden
        }
        
        public virtual void _45682_HoveringOverMoreInformationIconPopsUpInformationForEachClass(string pickupDate, string originCity, string originState, string originZipCode, string destinationCity, string destinationState, string destinationZipCode, string count, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionSuite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("45682_Hovering over more information icon pops up information for each class", @__tags);
#line 71
this.ScenarioSetup(scenarioInfo);
#line 72
 testRunner.Given("I am a shpinquiry, shpentry, sales, sales management, operations, or station owne" +
                    "r user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 73
 testRunner.And("I Arrive on the Get Quote (LTL) page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And(string.Format("I have chose a pickup date {0}", pickupDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And(string.Format("I choose a {0} {1} and {2} for the origin", originCity, originState, originZipCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.And(string.Format("I choose a {0} {1} and {2} for the Destination", destinationCity, destinationState, destinationZipCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Pieces",
                        "Weight",
                        "Class"});
            table4.AddRow(new string[] {
                        "4",
                        "100",
                        "50"});
            table4.AddRow(new string[] {
                        "2",
                        "14",
                        "100"});
            table4.AddRow(new string[] {
                        "1",
                        "1000",
                        "70"});
#line 77
 testRunner.And(string.Format("the quote contains more than one unique class {0}", count), ((string)(null)), table4, "And ");
#line 82
 testRunner.When("I click on view quote results button on the Get Quote LTL page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
 testRunner.And("I hover over the More Information icon in the Class/Weight field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Pieces",
                        "Class/Weight"});
            table5.AddRow(new string[] {
                        "4",
                        "50/100 lbs"});
            table5.AddRow(new string[] {
                        "2",
                        "100/14 lbs"});
            table5.AddRow(new string[] {
                        "1",
                        "70/1000 lbs"});
#line 84
 testRunner.Then(string.Format("I will see a pop up displaying the pieces, class, and weight of each unique class" +
                        " {0}", count), ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("45682_Hovering over more information icon pops up information for each class: Var" +
            "iant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Display quote criteria on quote results page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("45682")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint22")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Pickup Date", "Tomorrow")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin City", "Beverly Hills")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin State", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin Zip Code", "90210")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination City", "Chicago")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination State", "IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination Zip Code", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Count", "2")]
        public virtual void _45682_HoveringOverMoreInformationIconPopsUpInformationForEachClass_Variant0()
        {
#line 71
this._45682_HoveringOverMoreInformationIconPopsUpInformationForEachClass("Tomorrow", "Beverly Hills", "CA", "90210", "Chicago", "IL", "60606", "2", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("45682_Hovering over more information icon pops up information for each class: Var" +
            "iant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Display quote criteria on quote results page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("45682")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NinjaSprint22")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RegressionSuite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Pickup Date", "Tomorrow")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin City", "Beverly Hills")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin State", "CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Origin Zip Code", "90210")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination City", "Chicago")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination State", "IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Destination Zip Code", "60606")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Count", "3")]
        public virtual void _45682_HoveringOverMoreInformationIconPopsUpInformationForEachClass_Variant1()
        {
#line 71
this._45682_HoveringOverMoreInformationIconPopsUpInformationForEachClass("Tomorrow", "Beverly Hills", "CA", "90210", "Chicago", "IL", "60606", "3", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
