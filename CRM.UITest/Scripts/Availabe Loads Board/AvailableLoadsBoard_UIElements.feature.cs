// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CRM.UITest.Scripts.AvailabeLoadsBoard
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class AvailableLoadsBoard_UIElementsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "AvailableLoadsBoard_UIElements.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AvailableLoadsBoard_UIElements", null, ProgrammingLanguage.CSharp, new string[] {
                        "Sprint8_Ninja",
                        "35208",
                        "Regression"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "AvailableLoadsBoard_UIElements")))
            {
                global::CRM.UITest.Scripts.AvailabeLoadsBoard.AvailableLoadsBoard_UIElementsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _35208_VerifyNavigationFunctionalityToAvailableLoadsBoardPage(string uRL, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35208 - Verify navigation functionality to available Loads Board Page", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given("that I am any user,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.When(string.Format("I open the Available Loads URL {0},", uRL), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
testRunner.Then("I will arrive on the Available Loads page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35208 - Verify navigation functionality to available Loads Board Page: http://dls" +
            "crm-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AvailableLoadsBoard_UIElements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint8_Ninja")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35208")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:URL", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        public virtual void _35208_VerifyNavigationFunctionalityToAvailableLoadsBoardPage_HttpDlscrm_Test_Rrd_ComAvailableLoadsIndex()
        {
#line 5
this._35208_VerifyNavigationFunctionalityToAvailableLoadsBoardPage("http://dlscrm-test.rrd.com/AvailableLoads/Index", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35208_VerifyTheFieldsDisplayingInAvailableLoadsBoardPage(string uRL, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35208 - Verify the fields displaying in available Loads Board Page", @__tags);
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
testRunner.Given("that I am any user,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
testRunner.When(string.Format("I open the Available Loads URL {0},", uRL), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
testRunner.Then("I will see the rrd DLS Worldwide logo,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 19
testRunner.And("I will see  DLS contact phone information <844-221-6724>,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
testRunner.And("I will see the Available Loads grid display options,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
testRunner.And("I have the option to page forward or backward,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
testRunner.And("I will see a search option,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
testRunner.And("the grid will display the following columns Ref #, Pickup Range, Delivery Range, " +
                    "Origin, Destination, # of P/U, # of Drops, Weight(LBS), Equip Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
testRunner.And("each available load displayed will have an email button,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
testRunner.And("I will have an option to refresh the available loads page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35208 - Verify the fields displaying in available Loads Board Page: http://dlscrm" +
            "-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AvailableLoadsBoard_UIElements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint8_Ninja")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35208")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:URL", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        public virtual void _35208_VerifyTheFieldsDisplayingInAvailableLoadsBoardPage_HttpDlscrm_Test_Rrd_ComAvailableLoadsIndex()
        {
#line 15
this._35208_VerifyTheFieldsDisplayingInAvailableLoadsBoardPage("http://dlscrm-test.rrd.com/AvailableLoads/Index", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35208_VerifyTheSearchAndHighlightFunctionalityInPage(string uRL, string searchValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35208 - Verify the search and highlight functionality in page", @__tags);
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
testRunner.Given("that I am any user,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
testRunner.When(string.Format("I open the Available Loads URL {0},", uRL), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
testRunner.And(string.Format("I type in any value in the Search field  {0}", searchValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
testRunner.Then(string.Format("the grid should be filtered and highlighted for matching values in all the column" +
                        "s {0}", searchValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35208 - Verify the search and highlight functionality in page: http://dlscrm-test" +
            ".rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AvailableLoadsBoard_UIElements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint8_Ninja")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35208")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:URL", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SearchValue", "1")]
        public virtual void _35208_VerifyTheSearchAndHighlightFunctionalityInPage_HttpDlscrm_Test_Rrd_ComAvailableLoadsIndex()
        {
#line 32
this._35208_VerifyTheSearchAndHighlightFunctionalityInPage("http://dlscrm-test.rrd.com/AvailableLoads/Index", "1", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35208_VerifyTheGridWhenInvalidDataIsSearched(string uRL, string invalidSearchValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35208 - Verify the grid when invalid data is searched", @__tags);
#line 43
this.ScenarioSetup(scenarioInfo);
#line 45
testRunner.Given("that I am any user,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
testRunner.When(string.Format("I open the Available Loads URL {0},", uRL), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
testRunner.And(string.Format("I type in any value in the Search field  {0}", invalidSearchValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
testRunner.Then("no results found message should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35208 - Verify the grid when invalid data is searched: http://dlscrm-test.rrd.com" +
            "/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AvailableLoadsBoard_UIElements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint8_Ninja")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35208")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:URL", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvalidSearchValue", "test@12345")]
        public virtual void _35208_VerifyTheGridWhenInvalidDataIsSearched_HttpDlscrm_Test_Rrd_ComAvailableLoadsIndex()
        {
#line 43
this._35208_VerifyTheGridWhenInvalidDataIsSearched("http://dlscrm-test.rrd.com/AvailableLoads/Index", "test@12345", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35208_VerifyTheGridFilteringFunctionalityOnChangingTheViewOption(string uRL, string option, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GUI",
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35208 - Verify the grid filtering functionality on changing the view option", @__tags);
#line 55
this.ScenarioSetup(scenarioInfo);
#line 56
testRunner.Given("that I am any user,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
testRunner.When(string.Format("I open the Available Loads URL {0},", uRL), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
testRunner.And(string.Format("I select any view {0}", option), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
testRunner.Then(string.Format("selected view {0} should be filtered in the grid", option), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35208 - Verify the grid filtering functionality on changing the view option: http" +
            "://dlscrm-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AvailableLoadsBoard_UIElements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint8_Ninja")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35208")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GUI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:URL", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Option", "20")]
        public virtual void _35208_VerifyTheGridFilteringFunctionalityOnChangingTheViewOption_HttpDlscrm_Test_Rrd_ComAvailableLoadsIndex()
        {
#line 55
this._35208_VerifyTheGridFilteringFunctionalityOnChangingTheViewOption("http://dlscrm-test.rrd.com/AvailableLoads/Index", "20", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35208_CompareAndVerifyTheDisplayingRecordsWithAPI(string uRL, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35208 - Compare and verify the displaying records with API", @__tags);
#line 67
this.ScenarioSetup(scenarioInfo);
#line 68
testRunner.Given("that I am any user,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
testRunner.When(string.Format("I open the Available Loads URL {0},", uRL), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
testRunner.Then("displaying values in the grid should match with API", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35208 - Compare and verify the displaying records with API: http://dlscrm-test.rr" +
            "d.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AvailableLoadsBoard_UIElements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint8_Ninja")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35208")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:URL", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        public virtual void _35208_CompareAndVerifyTheDisplayingRecordsWithAPI_HttpDlscrm_Test_Rrd_ComAvailableLoadsIndex()
        {
#line 67
this._35208_CompareAndVerifyTheDisplayingRecordsWithAPI("http://dlscrm-test.rrd.com/AvailableLoads/Index", ((string[])(null)));
#line hidden
        }
        
        public virtual void _35208_CompareAndVerifyTheDisplayingRecordsWithAPIAfterRefreshButton(string uRL, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35208 - Compare and verify the displaying records with API after refresh button", @__tags);
#line 77
this.ScenarioSetup(scenarioInfo);
#line 78
testRunner.Given("that I am any user,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 79
testRunner.When(string.Format("I open the Available Loads URL {0},", uRL), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
testRunner.And("I click on refresh button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
testRunner.Then("displaying values in the grid should match with API", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("35208 - Compare and verify the displaying records with API after refresh button: " +
            "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AvailableLoadsBoard_UIElements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint8_Ninja")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35208")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:URL", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        public virtual void _35208_CompareAndVerifyTheDisplayingRecordsWithAPIAfterRefreshButton_HttpDlscrm_Test_Rrd_ComAvailableLoadsIndex()
        {
#line 77
this._35208_CompareAndVerifyTheDisplayingRecordsWithAPIAfterRefreshButton("http://dlscrm-test.rrd.com/AvailableLoads/Index", ((string[])(null)));
#line hidden
        }
        
        public virtual void _37979_VerifyDisplayingPickupAndDeliveryDateWithAPI(string uRL, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Functional",
                    "Sprint76",
                    "37979"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("37979 - Verify displaying Pickup and Delivery date with API", @__tags);
#line 88
this.ScenarioSetup(scenarioInfo);
#line 89
testRunner.Given("that I am any user,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 90
testRunner.When(string.Format("I open the Available Loads URL {0},", uRL), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
testRunner.Then("Displaying Pickup and Delivery date should match with API", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("37979 - Verify displaying Pickup and Delivery date with API: http://dlscrm-test.r" +
            "rd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AvailableLoadsBoard_UIElements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint8_Ninja")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35208")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functional")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint76")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("37979")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:URL", "http://dlscrm-test.rrd.com/AvailableLoads/Index")]
        public virtual void _37979_VerifyDisplayingPickupAndDeliveryDateWithAPI_HttpDlscrm_Test_Rrd_ComAvailableLoadsIndex()
        {
#line 88
this._37979_VerifyDisplayingPickupAndDeliveryDateWithAPI("http://dlscrm-test.rrd.com/AvailableLoads/Index", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("77434_Verify the field Contact Phone displaying in Available Loads page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AvailableLoadsBoard_UIElements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint8_Ninja")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35208")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("77434")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint91")]
        public virtual void _77434_VerifyTheFieldContactPhoneDisplayingInAvailableLoadsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("77434_Verify the field Contact Phone displaying in Available Loads page", new string[] {
                        "77434",
                        "Sprint91"});
#line 103
this.ScenarioSetup(scenarioInfo);
#line 104
testRunner.Given("that I navigate to the CRM Available Loads web page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 105
testRunner.When("the page loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 106
testRunner.Then("the Contact Phone Column will be displayed to the right of Equip Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 107
testRunner.And("the value for Contact Phone will be the Available Load Phone from the associated " +
                    "Station details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("77434_Verify the Contact number empty when there is no load to the corresponding " +
            "station")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AvailableLoadsBoard_UIElements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint8_Ninja")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("35208")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("77434")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint91")]
        public virtual void _77434_VerifyTheContactNumberEmptyWhenThereIsNoLoadToTheCorrespondingStation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("77434_Verify the Contact number empty when there is no load to the corresponding " +
                    "station", new string[] {
                        "77434",
                        "Sprint91"});
#line 110
this.ScenarioSetup(scenarioInfo);
#line 111
testRunner.Given("that I navigate to the CRM Available Loads web page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 112
testRunner.And("corresponding station to a Load is not available in CRM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
testRunner.When("the page loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
testRunner.Then("I will see the Contact Number with empty value for that load", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
